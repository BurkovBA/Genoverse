{"version":3,"sources":["Base.js","rtree.js","Genoverse.js","Track.js","Controller.js","Model.js","View.js","Static.js","Stranded.js","Sequence.js","Fasta.js","Variation.js","SequenceVariation.js","Ensembl.js","Transcript.js","File.js","BED.js","GFF.js","Chromosome.js","VCF.js","Gene.js","HighlightRegion.js","Legend.js","Scaleline.js","Scalebar.js"],"names":["Base","extend","_instance","_static","prototype","_prototyping","proto","this","call","constructor","klass","_constructing","apply","arguments","ancestor","forEach","implement","toString","valueOf","type","init","source","value","length","test","method","previous","base","returnValue","toSource","hidden","i","key","Object","version","object","block","context","undefined","String","RTree","width","_Min_Width","_Max_Width","isNaN","Math","floor","idCache","_T","x","y","w","h","id","nodes","isArray","o","_name_to_id","idPrefix","idVal","Rectangle","squarified_ratio","l","fill","lperi","larea","_remove_subtree","rect","obj","root","hit_stack","count_stack","ret_array","overlap_rectangle","ret_obj","target","push","tree","pop","ltree","leaf","contains_rectangle","_search_subtree","splice","make_MBR","t","_insert_subtree","_linear_split","n","_pick_linear","_pick_next","a","b","high_area_delta","high_area_node","lowest_growth_group","area_a","area_b","new_area_a","min","max","change_new_area_a","abs","new_area_b","change_new_area_b","temp_node","expand_rectangle","t1","t2","lowest_high_x","highest_low_x","lowest_high_y","highest_low_y","return_node","return_array","node","bc","tree_stack","best_choice_area","best_choice_index","best_choice_stack","old_lratio","nw","nh","lratio","_choose_leaf_subtree","pbc","ai","concat","get_tree","set_tree","new_tree","where","more_tree","search","toJSON","return_stack","max_depth","current_depth","return_string","toFixed","nam","data","JSON","stringify","load","my_key","remove","numberdeleted","insert","ix","iy","iw","ih","x2","y2","x1","y1","overlap","expand","nx","ny","setRect","$","jQuery","Genoverse","urlParamTemplate","longestLabel","defaultLength","defaultScrollDelta","tracks","plugins","dragAction","wheelAction","isStatic","saveable","saveKey","storageType","autoHideMessages","trackAutoHeight","hideEmptyTracks","genome","useHash","chr","start","end","config","browser","supported","die","container","appendTo","addClass","eventNamespace","events","when","loadGenome","loadPlugins","always","wrapFunctions","genomeName","ajax","url","origin","dataType","success","eval","e","console","log","loadPluginsTask","Deferred","intializePlugin","plugin","Plugins","loadedPlugins","requires","deferred","replace","toLowerCase","resolve","done","map","css","js","getCSS","noCSS","on","getScript","pluginsLoaded","addDomElements","addUserEventHandlers","tracksById","prev","window","history","pushState","textWidth","document","createElement","getContext","measureText","labelWidth","labelContainer","outerWidth","paramRegex","RegExp","urlCoords","getURLCoords","coords","chromosomeSize","size","loadConfig","addTracks","setRange","defaultTracks","getItem","parse","prop","track","tracksLibrary","tracksByName","savedConfig","setConfig","conf","name","_fromStorage","trackIds","saveConfig","order","height","autoHeight","setItem","resetConfig","removeItem","removeTracks","menus","sortable","items","handle","axis","helper","cursor","update","proxy","updateTrackOrder","ui","placeholder","item","visibility","html","hide","wrapper","selector","selectorControls","zoomInHighlight","zoomOutHighlight","clone","toggleClass","documentEvents","mousedown","hideMessages","which","mousewheel","delta","deltaX","deltaY","noWheelZoom","startDragScroll","move","stopDragScroll","mousewheelZoom","dblclick","pos","getSelectorPosition","className","moveTo","cancelSelect","mouseup","mousemove","keydown","keyup","wheelTimeout","clearTimeout","setTimeout","popState","onTracks","mvc","args","func","shift","disabled","_interface","reset","scale","setWidth","zoomDeltaTimeout","zoomTimeout","left","pageX","top","pageY","display","animate","complete","offset","moveSelector","dragging","scrolling","dragOffset","dragStart","scrollDelta","updateURL","checkTrackHeights","startDragSelect","selectorStalled","selectorStart","removeClass","stopDragSelect","outerHeight","find","show","keepDragging","dragSelect","setDragAction","action","keepSelect","hasClass","toggleSelect","setWheelAction","closeMenus","shiftKey","round","minLeft","maxLeft","keepLength","parseInt","center","setScale","scaledStart","labelBuffer","ceil","resetTrackHeights","zoomIn","zoomOut","addTrack","index","defaults","controller","makeFirstImage","sortTracks","removeTrack","j","destructor","grep","sorted","sort","labels","containers","position","append","each","diff","next","p","location","hash","getQueryString","match","slice","split","tmp","el","error","alert","failed","menuTemplate","fadeOut","not","makeMenu","feature","event","menuEl","table","colspan","tdWidth","menu","content","focus","populateMenu","properties","title","superContainer","add","of","my","collision","filter","children","trigger","fn","once","f","fnString","eventMap","makeEventMap","types","handler","makeFnString","compare","Track","destroy","empty","off","functionWrap","functions","substring","toUpperCase","isBrowser","mainObj","debug","rtn","funcs","time","timeEnd","attr","margin","resizable","border","unsortable","hideEmpty","stranded","Controller","Stranded","model","Model","setInterface","setDefaults","setEvents","setLengthMap","setMVC","noop","defaultHeight","defaultAutoHeight","initialHeight","abort","lengthSettings","getSettingsForLength","settings","mvcSettings","trackSettings","models","view","views","View","hasOwnProperty","lengthMap","setURL","newMVC","threshold","strand","orderReverse","deepCopy","featureHeight","setHeight","forceShow","resetHeight","resizer","resize","enable","disable","objs","scrollBuffer","Infinity","messages","imgRange","scrollRange","resetImages","scrollContainer","resetImageRanges","scrollStart","right","setName","labelName","label","minLabelHeight","imgContainer","messageContainer","click","collapsed","is","code","checkHeight","cookie","join","parent","showMessage","additionalText","msg","prependTo","fullVisibleHeight","hideMessage","siblings","style","showError","thresholdMessage","bounds","features","featurePositions","minHeight","bottom","labelTop","labelPositions","autoResize","toggleExpander","arg","imgContainers","featureMargin","expander","setLabelBuffer","formatLabel","setScaleSettings","k","v","makeImage","cls","params","labelHeight","tooLarge","div","bgImage","background","image","fadeIn","checkDataRange","buffer","getData","findFeatures","render","renderBackground","fail","images","loading","makeImages","img","positionFeatures","scaleFeatures","featureCanvas","labelCanvas","featureContext","labelContext","font","textAlign","textBaseline","draw","toDataURL","class","src","insertAfter","canvas","drawBackground","Location","allData","dataBuffer","xhrFields","urlParams","featuresById","dataRanges","dataLoading","_url","indexOf","decodeURIComponent","param","parseURL","bins","resolveWith","dataRequestLimit","bin","request","receiveData","xhr","statusText","setDataRange","parseData","insertFeature","ranges","s","ID","hashCode","string","charCodeAt","fontHeight","fontFamily","fontWeight","fontColor","color","minScaledWidth","widthCorrection","repeatLabels","bump","depth","scaleSettings","labelUnits","positionFeature","X","positioned","H","W","marginRight","Y","bumpFeature","visible","drawFeature","labelPosition","truncateForDrawing","setFeatureColor","fillStyle","fillRect","drawLabel","borderColor","strokeStyle","strokeRect","decorations","decorateFeature","original","untruncated","spacing","labelColor","setLabelColor","fillText","power","unit","pow","Static","prepend","stringified","controls","_makeImage","featureStrand","makeReverseImage","makeForwardImage","reverseTrack","forwardTrack","removing","otherTrack","Sequence","seq","alt_allele","sequence","charAt","chunkSize","chunks","substr","Fasta","startByte","lineLength","getStartByte","endByte","headers","Range","rejectWith","startByteRequest","colors","default","A","T","G","C","labelColors","lowerCase","widestLabel","labelYOffset","drawSequence","bp","drawLabels","SequenceVariation","showLegend","reference","ref_allele","drawing","snv","highlightSNVs","outlineSNVs","positionX","positionY","highlightColor","setHighlightColor","lineWidth","beginPath","lineTo","closePath","stroke","globalAlpha","seqModel","Ensembl","seqData","Gene","feature_type","external_name","transcripts","logic_name","biotype","Transcript","Parent","exons","cds","intronStyle","transcript","exon","unshift","drawIntron","intron","bezierCurveTo","File","BED","text","lines","fields","score","parseFloat","scoreColor","originalFeature","GFF","GTF","Chromosome","acen","gneg","gpos","gpos100","gpos25","gpos33","gpos50","gpos66","gpos75","gvar","stalk","bands","menuTitle","drawnAcen","clearRect","Position","chrom","chromStart","chromEnd","thickStart","thickEnd","itemRgb","blockCount","blockSizes","blockStarts","VCF","CHROM","POS","REF","ALT","QUAL","FILTER","INFO","1","highlightRef","allele","1000","heat","maxQUAL","red","green","Source","Biotype","2000000","100000","HighlightRegion","originalFeatures","reverse","Legend","textColor","lockToTrack","legends","setTracks","afterInit afterAddTracks afterRemoveTracks","afterRemoveTracks","legend","afterUpdateTrackOrder","updateOrder","afterPositionFeatures","afterResize","userResize","afterCheckHeight","featureType","xPos","yPos","xScale","yScale","Scaleline","scaleline","drawnScale","text2","width1","width2","bg","Scalebar","minPixPerMajor","majorGuideLine","minorGuideLine","parents","divisions","divisor","majorUnit","fromDigit","toDigit","Array","setFeatures","major","minorUnit","seen","flip","lastLabel","guideLines"],"mappings":"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","file":"genoverse.nodeps.min.js","sourcesContent":["/*\n\tBase.js, version 1.1\n\tCopyright 2006-2007, Dean Edwards\n\tLicense: http://www.opensource.org/licenses/mit-license.php\n*/\n\nvar Base = function() {\n\t// dummy\n};\n\nBase.extend = function(_instance, _static) { // subclass\n\tvar extend = Base.prototype.extend;\n\t\n\t// build the prototype\n\tBase._prototyping = true;\n\tvar proto = new this;\n\textend.call(proto, _instance);\n\tdelete Base._prototyping;\n\t\n\t// create the wrapper for the constructor function\n\t//var constructor = proto.constructor.valueOf(); //-dean\n\tvar constructor = proto.constructor;\n\tvar klass = proto.constructor = function() {\n\t\tif (!Base._prototyping) {\n\t\t\tif (this._constructing || this.constructor == klass) { // instantiation\n\t\t\t\tthis._constructing = true;\n\t\t\t\tconstructor.apply(this, arguments);\n\t\t\t\tdelete this._constructing;\n\t\t\t} else if (arguments[0] != null) { // casting\n\t\t\t\treturn (arguments[0].extend || extend).call(arguments[0], proto);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// build the class interface\n\tklass.ancestor = this;\n\tklass.extend = this.extend;\n\tklass.forEach = this.forEach;\n\tklass.implement = this.implement;\n\tklass.prototype = proto;\n\tklass.toString = this.toString;\n\tklass.valueOf = function(type) {\n\t\t//return (type == \"object\") ? klass : constructor; //-dean\n\t\treturn (type == \"object\") ? klass : constructor.valueOf();\n\t};\n\textend.call(klass, _static);\n\t// class initialisation\n\tif (typeof klass.init == \"function\") klass.init();\n\treturn klass;\n};\n\nBase.prototype = {\t\n\textend: function(source, value) {\n\t\tif (arguments.length > 1) { // extending with a name/value pair\n\t\t\tvar ancestor = this[source];\n\t\t\tif (ancestor && (typeof value == \"function\") && // overriding a method?\n\t\t\t\t// the valueOf() comparison is to avoid circular references\n\t\t\t\t(!ancestor.valueOf || ancestor.valueOf() != value.valueOf()) &&\n\t\t\t\t/\\bbase\\b/.test(value)) {\n\t\t\t\t// get the underlying method\n\t\t\t\tvar method = value.valueOf();\n\t\t\t\t// override\n\t\t\t\tvalue = function() {\n\t\t\t\t\tvar previous = this.base || Base.prototype.base;\n\t\t\t\t\tthis.base = ancestor;\n\t\t\t\t\tvar returnValue = method.apply(this, arguments);\n\t\t\t\t\tthis.base = previous;\n\t\t\t\t\treturn returnValue;\n\t\t\t\t};\n\t\t\t\t// point to the underlying method\n\t\t\t\tvalue.valueOf = function(type) {\n\t\t\t\t\treturn (type == \"object\") ? value : method;\n\t\t\t\t};\n\t\t\t\tvalue.toString = Base.toString;\n\t\t\t}\n\t\t\tthis[source] = value;\n\t\t} else if (source) { // extending with an object literal\n\t\t\tvar extend = Base.prototype.extend;\n\t\t\t// if this object has a customised extend method then use it\n\t\t\tif (!Base._prototyping && typeof this != \"function\") {\n\t\t\t\textend = this.extend || extend;\n\t\t\t}\n\t\t\tvar proto = {toSource: null};\n\t\t\t// do the \"toString\" and other methods manually\n\t\t\tvar hidden = [\"constructor\", \"toString\", \"valueOf\"];\n\t\t\t// if we are prototyping then include the constructor\n\t\t\tvar i = Base._prototyping ? 0 : 1;\n\t\t\twhile (key = hidden[i++]) {\n\t\t\t\tif (source[key] != proto[key]) {\n\t\t\t\t\textend.call(this, key, source[key]);\n\n\t\t\t\t}\n\t\t\t}\n\t\t\t// copy each of the source object's properties to this object\n\t\t\tfor (var key in source) {\n\t\t\t\tif (!proto[key]) extend.call(this, key, source[key]);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tbase: function() {\n\t\t// call this method from any other method to invoke that method's ancestor\n\t}\n};\n\n// initialise\nBase = Base.extend({\n\tconstructor: function() {\n\t\tthis.extend(arguments[0]);\n\t}\n}, {\n\tancestor: Object,\n\tversion: \"1.1\",\n\t\n\tforEach: function(object, block, context) {\n\t\tfor (var key in object) {\n\t\t\tif (this.prototype[key] === undefined) {\n\t\t\t\tblock.call(context, object[key], key, object);\n\t\t\t}\n\t\t}\n\t},\n\t\t\n\timplement: function() {\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tif (typeof arguments[i] == \"function\") {\n\t\t\t\t// if it's a function, call it\n\t\t\t\targuments[i](this.prototype);\n\t\t\t} else {\n\t\t\t\t// add the interface using the extend method\n\t\t\t\tthis.prototype.extend(arguments[i]);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\t\n\ttoString: function() {\n\t\treturn String(this.valueOf());\n\t}\n});\n","/****************************************************************************** \n\trtree.js - General-Purpose Non-Recursive Javascript R-Tree Library\n\tVersion 0.6.2, December 5st 2009\n\n  Copyright (c) 2009 Jon-Carlos Rivera\n  \n  Permission is hereby granted, free of charge, to any person obtaining\n  a copy of this software and associated documentation files (the\n  \"Software\"), to deal in the Software without restriction, including\n  without limitation the rights to use, copy, modify, merge, publish,\n  distribute, sublicense, and/or sell copies of the Software, and to\n  permit persons to whom the Software is furnished to do so, subject to\n  the following conditions:\n  \n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tJon-Carlos Rivera - imbcmdth@hotmail.com\n******************************************************************************/\n\n/**\n * RTree - A simple r-tree structure for great results.\n * @constructor\n */\nvar RTree = function(width){\n\t// Variables to control tree-dimensions\n\tvar _Min_Width = 3;  // Minimum width of any node before a merge\n\tvar _Max_Width = 6;  // Maximum width of any node before a split\n\tif(!isNaN(width)){ _Min_Width = Math.floor(width/2.0); _Max_Width = width;}\n\t// Start with an empty root-tree\n\tvar _T = {x:0, y:0, w:0, h:0, id:\"root\", nodes:[] };\n    \n\tvar isArray = function(o) {\n\t\treturn Object.prototype.toString.call(o) === '[object Array]'; \n\t};\n\n\t/* @function\n\t * @description Function to generate unique strings for element IDs\n\t * @param {String} n\t\t\tThe prefix to use for the IDs generated.\n\t * @return {String}\t\t\t\tA guarenteed unique ID.\n\t */\n    var _name_to_id = (function() {\n        // hide our idCache inside this closure\n        var idCache = {};\n\n        // return the api: our function that returns a unique string with incrementing number appended to given idPrefix\n        return function(idPrefix) {\n            var idVal = 0;\n            if(idPrefix in idCache) {\n                idVal = idCache[idPrefix]++;\n            } else {\n                idCache[idPrefix] = 0;\n            }\n            return idPrefix + \"_\" + idVal;\n        }\n    })();\n\n\t// This is my special addition to the world of r-trees\n\t// every other (simple) method I found produced crap trees\n\t// this skews insertions to prefering squarer and emptier nodes\n\tRTree.Rectangle.squarified_ratio = function(l, w, fill) {\n\t  // Area of new enlarged rectangle\n\t  var lperi = (l + w) / 2.0; // Average size of a side of the new rectangle\n\t  var larea = l * w; // Area of new rectangle\n\t  // return the ratio of the perimeter to the area - the closer to 1 we are, \n\t  // the more \"square\" a rectangle is. conversly, when approaching zero the \n\t  // more elongated a rectangle is\n\t  var lgeo = larea / (lperi*lperi);\n\t  return(larea * fill / lgeo); \n\t};\n\t\n\t/* find the best specific node(s) for object to be deleted from\n\t * [ leaf node parent ] = _remove_subtree(rectangle, object, root)\n\t * @private\n\t */\n\tvar _remove_subtree = function(rect, obj, root) {\n\t\tvar hit_stack = []; // Contains the elements that overlap\n\t\tvar count_stack = []; // Contains the elements that overlap\n\t\tvar ret_array = [];\n\t\tvar current_depth = 1;\n\t\t\n\t\tif(!rect || !RTree.Rectangle.overlap_rectangle(rect, root))\n\t\t return ret_array;\n\n\t\tvar ret_obj = {x:rect.x, y:rect.y, w:rect.w, h:rect.h, target:obj};\n\t\t\n\t\tcount_stack.push(root.nodes.length);\n\t\thit_stack.push(root);\n\n\t\tdo {\n\t\t\tvar tree = hit_stack.pop();\n\t\t\tvar i = count_stack.pop()-1;\n\t\t\t\n\t\t  if(\"target\" in ret_obj) { // We are searching for a target\n\t\t\t\twhile(i >= 0)\t{\n\t\t\t\t\tvar ltree = tree.nodes[i];\n\t\t\t\t\tif(RTree.Rectangle.overlap_rectangle(ret_obj, ltree)) {\n\t\t\t\t\t\tif( (ret_obj.target && \"leaf\" in ltree && ltree.leaf === ret_obj.target)\n\t\t\t\t\t\t\t||(!ret_obj.target && (\"leaf\" in ltree || RTree.Rectangle.contains_rectangle(ltree, ret_obj)))) { // A Match !!\n\t\t\t\t  \t\t// Yup we found a match...\n\t\t\t\t  \t\t// we can cancel search and start walking up the list\n\t\t\t\t  \t\tif(\"nodes\" in ltree) {// If we are deleting a node not a leaf...\n\t\t\t\t  \t\t\tret_array = _search_subtree(ltree, true, [], ltree);\n\t\t\t\t  \t\t\ttree.nodes.splice(i, 1); \n\t\t\t\t  \t\t} else {\n\t\t\t\t\t\t\t\tret_array = tree.nodes.splice(i, 1); \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Resize MBR down...\n\t\t\t\t\t\t\tRTree.Rectangle.make_MBR(tree.nodes, tree);\n\t\t\t\t\t\t\tdelete ret_obj.target;\n\t\t\t\t\t\t\tif(tree.nodes.length < _Min_Width) { // Underflow\n\t\t\t\t\t\t\t\tret_obj.nodes = _search_subtree(tree, true, [], tree);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t  \t\t}/*\telse if(\"load\" in ltree) { // A load\n\t\t\t\t  \t}*/\telse if(\"nodes\" in ltree) { // Not a Leaf\n\t\t\t\t  \t\tcurrent_depth += 1;\n\t\t\t\t  \t\tcount_stack.push(i);\n\t\t\t\t  \t\thit_stack.push(tree);\n\t\t\t\t  \t\ttree = ltree;\n\t\t\t\t  \t\ti = ltree.nodes.length;\n\t\t\t\t  \t}\n\t\t\t\t  }\n\t\t\t\t\ti -= 1;\n\t\t\t\t}\n\t\t\t} else if(\"nodes\" in ret_obj) { // We are unsplitting\n\t\t\t\ttree.nodes.splice(i+1, 1); // Remove unsplit node\n\t\t\t\t// ret_obj.nodes contains a list of elements removed from the tree so far\n\t\t\t\tif(tree.nodes.length > 0)\n\t\t\t\t\tRTree.Rectangle.make_MBR(tree.nodes, tree);\n\t\t\t\tfor(var t = 0;t<ret_obj.nodes.length;t++)\n\t\t\t\t\t_insert_subtree(ret_obj.nodes[t], tree);\n\t\t\t\tret_obj.nodes.length = 0;\n\t\t\t\tif(hit_stack.length == 0 && tree.nodes.length <= 1) { // Underflow..on root!\n\t\t\t\t\tret_obj.nodes = _search_subtree(tree, true, ret_obj.nodes, tree);\n\t\t\t\t\ttree.nodes.length = 0;\n\t\t\t\t\thit_stack.push(tree);\n\t\t\t\t\tcount_stack.push(1);\n\t\t\t\t} else if(hit_stack.length > 0 && tree.nodes.length < _Min_Width) { // Underflow..AGAIN!\n\t\t\t\t\tret_obj.nodes = _search_subtree(tree, true, ret_obj.nodes, tree);\n\t\t\t\t\ttree.nodes.length = 0;\t\t\t\t\t\t\n\t\t\t\t}else {\n\t\t\t\t\tdelete ret_obj.nodes; // Just start resizing\n\t\t\t\t}\n\t\t\t} else { // we are just resizing\n\t\t\t\tRTree.Rectangle.make_MBR(tree.nodes, tree);\n\t\t\t}\n\t\t\tcurrent_depth -= 1;\n\t\t}while(hit_stack.length > 0);\n\t\t\n\t\treturn(ret_array);\n\t};\n\n\t/* choose the best damn node for rectangle to be inserted into\n\t * [ leaf node parent ] = _choose_leaf_subtree(rectangle, root to start search at)\n\t * @private\n\t */\n\tvar _choose_leaf_subtree = function(rect, root) {\n\t\tvar best_choice_index = -1;\n\t\tvar best_choice_stack = [];\n\t\tvar best_choice_area;\n\t\t\n\t\tvar load_callback = function(local_tree, local_node){\n\t\t\treturn(function(data) { \n\t\t\t\tlocal_tree._attach_data(local_node, data);\n\t\t\t});\n\t\t};\n\t\n\t\tbest_choice_stack.push(root);\n\t\tvar nodes = root.nodes;\t\n\n\t\tdo {\t\n\t\t\tif(best_choice_index != -1)\t{\n\t\t\t\tbest_choice_stack.push(nodes[best_choice_index]);\n\t\t\t\tnodes = nodes[best_choice_index].nodes;\n\t\t\t\tbest_choice_index = -1;\n\t\t\t}\n\t\n\t\t\tfor(var i = nodes.length-1; i >= 0; i--) {\n\t\t\t\tvar ltree = nodes[i];\n\t\t\t\tif(\"leaf\" in ltree) {  \n\t\t\t\t\t// Bail out of everything and start inserting\n\t\t\t\t\tbest_choice_index = -1;\n\t\t\t\t\tbreak;\n\t\t\t  } /*else if(ltree.load) {\n  \t\t\t\tthrow( \"Can't insert into partially loaded tree ... yet!\");\n  \t\t\t\t//jQuery.getJSON(ltree.load, load_callback(this, ltree));\n  \t\t\t\t//delete ltree.load;\n  \t\t\t}*/\n\t\t\t  // Area of new enlarged rectangle\n\t\t\t  var old_lratio = RTree.Rectangle.squarified_ratio(ltree.w, ltree.h, ltree.nodes.length+1);\n\n\t\t\t  // Enlarge rectangle to fit new rectangle\n\t\t\t  var nw = Math.max(ltree.x+ltree.w, rect.x+rect.w) - Math.min(ltree.x, rect.x);\n\t\t\t  var nh = Math.max(ltree.y+ltree.h, rect.y+rect.h) - Math.min(ltree.y, rect.y);\n\t\t\t  \n\t\t\t  // Area of new enlarged rectangle\n\t\t\t  var lratio = RTree.Rectangle.squarified_ratio(nw, nh, ltree.nodes.length+2);\n\t\t\t  \n\t\t\t  if(best_choice_index < 0 || Math.abs(lratio - old_lratio) < best_choice_area) {\n\t\t\t  \tbest_choice_area = Math.abs(lratio - old_lratio); best_choice_index = i;\n\t\t\t  }\n\t\t\t}\n\t\t}while(best_choice_index != -1);\n\n\t\treturn(best_choice_stack);\n\t};\n\n\t/* split a set of nodes into two roughly equally-filled nodes\n\t * [ an array of two new arrays of nodes ] = linear_split(array of nodes)\n\t * @private\n\t */\n\tvar _linear_split = function(nodes) {\n\t\tvar n = _pick_linear(nodes);\n\t\twhile(nodes.length > 0)\t{\n\t\t\t_pick_next(nodes, n[0], n[1]);\n\t\t}\n\t\treturn(n);\n\t};\n\t\n\t/* insert the best source rectangle into the best fitting parent node: a or b\n\t * [] = pick_next(array of source nodes, target node array a, target node array b)\n\t * @private\n\t */\n\tvar _pick_next = function(nodes, a, b) {\n\t  // Area of new enlarged rectangle\n\t\tvar area_a = RTree.Rectangle.squarified_ratio(a.w, a.h, a.nodes.length+1);\n\t\tvar area_b = RTree.Rectangle.squarified_ratio(b.w, b.h, b.nodes.length+1);\n\t\tvar high_area_delta;\n\t\tvar high_area_node;\n\t\tvar lowest_growth_group;\n\t\t\n\t\tfor(var i = nodes.length-1; i>=0;i--) {\n\t\t\tvar l = nodes[i];\n\t\t\tvar new_area_a = {};\n\t\t\tnew_area_a.x = Math.min(a.x, l.x); new_area_a.y = Math.min(a.y, l.y);\n\t\t\tnew_area_a.w = Math.max(a.x+a.w, l.x+l.w) - new_area_a.x;\tnew_area_a.h = Math.max(a.y+a.h, l.y+l.h) - new_area_a.y;\n\t\t\tvar change_new_area_a = Math.abs(RTree.Rectangle.squarified_ratio(new_area_a.w, new_area_a.h, a.nodes.length+2) - area_a);\n\t\n\t\t\tvar new_area_b = {};\n\t\t\tnew_area_b.x = Math.min(b.x, l.x); new_area_b.y = Math.min(b.y, l.y);\n\t\t\tnew_area_b.w = Math.max(b.x+b.w, l.x+l.w) - new_area_b.x;\tnew_area_b.h = Math.max(b.y+b.h, l.y+l.h) - new_area_b.y;\n\t\t\tvar change_new_area_b = Math.abs(RTree.Rectangle.squarified_ratio(new_area_b.w, new_area_b.h, b.nodes.length+2) - area_b);\n\n\t\t\tif( !high_area_node || !high_area_delta || Math.abs( change_new_area_b - change_new_area_a ) < high_area_delta ) {\n\t\t\t\thigh_area_node = i;\n\t\t\t\thigh_area_delta = Math.abs(change_new_area_b-change_new_area_a);\n\t\t\t\tlowest_growth_group = change_new_area_b < change_new_area_a ? b : a;\n\t\t\t}\n\t\t}\n\t\tvar temp_node = nodes.splice(high_area_node, 1)[0];\n\t\tif(a.nodes.length + nodes.length + 1 <= _Min_Width)\t{\n\t\t\ta.nodes.push(temp_node);\n\t\t\tRTree.Rectangle.expand_rectangle(a, temp_node);\n\t\t}\telse if(b.nodes.length + nodes.length + 1 <= _Min_Width) {\n\t\t\tb.nodes.push(temp_node);\n\t\t\tRTree.Rectangle.expand_rectangle(b, temp_node);\n\t\t}\n\t\telse {\n\t\t\tlowest_growth_group.nodes.push(temp_node);\n\t\t\tRTree.Rectangle.expand_rectangle(lowest_growth_group, temp_node);\n\t\t}\n\t};\n\n\t/* pick the \"best\" two starter nodes to use as seeds using the \"linear\" criteria\n\t * [ an array of two new arrays of nodes ] = pick_linear(array of source nodes)\n\t * @private\n\t */\n\tvar _pick_linear = function(nodes) {\n\t\tvar lowest_high_x = nodes.length-1;\n\t\tvar highest_low_x = 0;\n\t\tvar lowest_high_y = nodes.length-1;\n\t\tvar highest_low_y = 0;\n        var t1, t2;\n\t\t\n\t\tfor(var i = nodes.length-2; i>=0;i--)\t{\n\t\t\tvar l = nodes[i];\n\t\t\tif(l.x > nodes[highest_low_x].x ) highest_low_x = i;\n\t\t\telse if(l.x+l.w < nodes[lowest_high_x].x+nodes[lowest_high_x].w) lowest_high_x = i;\n\t\t\tif(l.y > nodes[highest_low_y].y ) highest_low_y = i;\n\t\t\telse if(l.y+l.h < nodes[lowest_high_y].y+nodes[lowest_high_y].h) lowest_high_y = i;\n\t\t}\n\t\tvar dx = Math.abs((nodes[lowest_high_x].x+nodes[lowest_high_x].w) - nodes[highest_low_x].x);\n\t\tvar dy = Math.abs((nodes[lowest_high_y].y+nodes[lowest_high_y].h) - nodes[highest_low_y].y);\n\t\tif( dx > dy )\t{ \n\t\t\tif(lowest_high_x > highest_low_x)\t{\n\t\t\t\tt1 = nodes.splice(lowest_high_x, 1)[0];\n\t\t\t\tt2 = nodes.splice(highest_low_x, 1)[0];\n\t\t\t}\telse {\n\t\t\t\tt2 = nodes.splice(highest_low_x, 1)[0];\n\t\t\t\tt1 = nodes.splice(lowest_high_x, 1)[0];\n\t\t\t}\n\t\t}\telse {\n\t\t\tif(lowest_high_y > highest_low_y)\t{\n\t\t\t\tt1 = nodes.splice(lowest_high_y, 1)[0];\n\t\t\t\tt2 = nodes.splice(highest_low_y, 1)[0];\n\t\t\t}\telse {\n\t\t\t\tt2 = nodes.splice(highest_low_y, 1)[0];\n\t\t\t\tt1 = nodes.splice(lowest_high_y, 1)[0];\n\t\t\t}\n\t\t}\n\t\treturn([{x:t1.x, y:t1.y, w:t1.w, h:t1.h, nodes:[t1]},\n\t\t\t      {x:t2.x, y:t2.y, w:t2.w, h:t2.h, nodes:[t2]} ]);\n\t};\n\t\n\tvar _attach_data = function(node, more_tree){\n\t\tnode.nodes = more_tree.nodes;\n\t\tnode.x = more_tree.x; node.y = more_tree.y;\n\t\tnode.w = more_tree.w; node.h = more_tree.h;\n\t\treturn(node);\n\t};\n\n\t/* non-recursive internal search function \n\t * [ nodes | objects ] = _search_subtree(rectangle, [return node data], [array to fill], root to begin search at)\n\t * @private\n\t */\n\tvar _search_subtree = function(rect, return_node, return_array, root) {\n\t\tvar hit_stack = []; // Contains the elements that overlap\n\t\n\t\tif(!RTree.Rectangle.overlap_rectangle(rect, root))\n\t\t return(return_array);\n\t\n\t\tvar load_callback = function(local_tree, local_node){\n\t\t\treturn(function(data) { \n\t\t\t\tlocal_tree._attach_data(local_node, data);\n\t\t\t});\n\t\t};\n\t\n\t\thit_stack.push(root.nodes);\n\t\n\t\tdo {\n\t\t\tvar nodes = hit_stack.pop();\n\t\n\t\t\tfor(var i = nodes.length-1; i >= 0; i--) {\n\t\t\t\tvar ltree = nodes[i];\n\t\t\t  if(RTree.Rectangle.overlap_rectangle(rect, ltree)) {\n\t\t\t  \tif(\"nodes\" in ltree) { // Not a Leaf\n\t\t\t  \t\thit_stack.push(ltree.nodes);\n\t\t\t  \t} else if(\"leaf\" in ltree) { // A Leaf !!\n\t\t\t  \t\tif(!return_node)\n\t\t  \t\t\t\treturn_array.push(ltree.leaf);\n\t\t  \t\t\telse\n\t\t  \t\t\t\treturn_array.push(ltree);\n\t\t  \t\t}/*\telse if(\"load\" in ltree) { // We need to fetch a URL for some more tree data\n\t  \t\t\t\tjQuery.getJSON(ltree.load, load_callback(this, ltree));\n\t  \t\t\t\tdelete ltree.load;\n\t  \t\t\t//\ti++; // Replay this entry\n\t  \t\t\t}*/\n\t\t\t\t}\n\t\t\t}\n\t\t}while(hit_stack.length > 0);\n\t\t\n\t\treturn(return_array);\n\t};\n\t\n\t/* non-recursive internal insert function\n\t * [] = _insert_subtree(rectangle, object to insert, root to begin insertion at)\n\t * @private\n\t */\n\tvar _insert_subtree = function(node, root) {\n\t\tvar bc; // Best Current node\n\t\t// Initial insertion is special because we resize the Tree and we don't\n\t\t// care about any overflow (seriously, how can the first object overflow?)\n\t\tif(root.nodes.length == 0) {\n\t\t\troot.x = node.x; root.y = node.y;\n\t\t\troot.w = node.w; root.h = node.h;\n\t\t\troot.nodes.push(node);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Find the best fitting leaf node\n\t\t// choose_leaf returns an array of all tree levels (including root)\n\t\t// that were traversed while trying to find the leaf\n\t\tvar tree_stack = _choose_leaf_subtree(node, root);\n\t\tvar ret_obj = node;//{x:rect.x,y:rect.y,w:rect.w,h:rect.h, leaf:obj};\n\t\n\t\t// Walk back up the tree resizing and inserting as needed\n\t\tdo {\n\t\t\t//handle the case of an empty node (from a split)\n\t\t\tif(bc && \"nodes\" in bc && bc.nodes.length == 0) {\n\t\t\t\tvar pbc = bc; // Past bc\n\t\t\t\tbc = tree_stack.pop();\n\t\t\t\tfor(var t=0;t<bc.nodes.length;t++)\n\t\t\t\t\tif(bc.nodes[t] === pbc || bc.nodes[t].nodes.length == 0) {\n\t\t\t\t\t\tbc.nodes.splice(t, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbc = tree_stack.pop();\n\t\t\t}\n\t\t\t\n\t\t\t// If there is data attached to this ret_obj\n\t\t\tif(\"leaf\" in ret_obj || \"nodes\" in ret_obj || isArray(ret_obj)) { \n\t\t\t\t// Do Insert\n\t\t\t\tif(isArray(ret_obj)) {\n\t\t\t\t\tfor(var ai = 0; ai < ret_obj.length; ai++) {\n\t\t\t\t\t\tRTree.Rectangle.expand_rectangle(bc, ret_obj[ai]);\n\t\t\t\t\t}\n\t\t\t\t\tbc.nodes = bc.nodes.concat(ret_obj); \n\t\t\t\t} else {\n\t\t\t\t\tRTree.Rectangle.expand_rectangle(bc, ret_obj);\n\t\t\t\t\tbc.nodes.push(ret_obj); // Do Insert\n\t\t\t\t}\n\t\n\t\t\t\tif(bc.nodes.length <= _Max_Width)\t{ // Start Resizeing Up the Tree\n\t\t\t\t\tret_obj = {x:bc.x,y:bc.y,w:bc.w,h:bc.h};\n\t\t\t\t}\telse { // Otherwise Split this Node\n\t\t\t\t\t// linear_split() returns an array containing two new nodes\n\t\t\t\t\t// formed from the split of the previous node's overflow\n\t\t\t\t\tvar a = _linear_split(bc.nodes);\n\t\t\t\t\tret_obj = a;//[1];\n\t\t\t\t\t\n\t\t\t\t\tif(tree_stack.length < 1)\t{ // If are splitting the root..\n\t\t\t\t\t\tbc.nodes.push(a[0]);\n\t\t\t\t\t\ttree_stack.push(bc);     // Reconsider the root element\n\t\t\t\t\t\tret_obj = a[1];\n\t\t\t\t\t} /*else {\n\t\t\t\t\t\tdelete bc;\n\t\t\t\t\t}*/\n\t\t\t\t}\n\t\t\t}\telse { // Otherwise Do Resize\n\t\t\t\t//Just keep applying the new bounding rectangle to the parents..\n\t\t\t\tRTree.Rectangle.expand_rectangle(bc, ret_obj);\n\t\t\t\tret_obj = {x:bc.x,y:bc.y,w:bc.w,h:bc.h};\n\t\t\t}\n\t\t} while(tree_stack.length > 0);\n\t};\n\n\t/* quick 'n' dirty function for plugins or manually drawing the tree\n\t * [ tree ] = RTree.get_tree(): returns the raw tree data. useful for adding\n\t * @public\n\t * !! DEPRECATED !!\n\t */\n\tthis.get_tree = function() {\n\t\treturn _T;\n\t};\n\t\n\t/* quick 'n' dirty function for plugins or manually loading the tree\n\t * [ tree ] = RTree.set_tree(sub-tree, where to attach): returns the raw tree data. useful for adding\n\t * @public\n\t * !! DEPRECATED !!\n\t */\n\tthis.set_tree = function(new_tree, where) {\n\t\tif(!where)\n\t\t\twhere = _T;\n\t\treturn(_attach_data(where, new_tree));\n\t};\n\t\n\t/* non-recursive search function \n\t * [ nodes | objects ] = RTree.search(rectangle, [return node data], [array to fill])\n\t * @public\n\t */\n\tthis.search = function(rect, return_node, return_array) {\n\t\tif(arguments.length < 1)\n\t\t\tthrow \"Wrong number of arguments. RT.Search requires at least a bounding rectangle.\"\n\n\t\tswitch(arguments.length) {\n\t\t\tcase 1:\n\t\t\t\targuments[1] = false;// Add an \"return node\" flag - may be removed in future\n\t\t\tcase 2:\n\t\t\t\targuments[2] = []; // Add an empty array to contain results\n\t\t\tcase 3:\n\t\t\t\targuments[3] = _T; // Add root node to end of argument list\n\t\t\tdefault:\n\t\t\t\targuments.length = 4;\n\t\t}\n\t\treturn(_search_subtree.apply(this, arguments));\n\t};\n\t\t\n\t/* partially-recursive toJSON function\n\t * [ string ] = RTree.toJSON([rectangle], [tree])\n\t * @public\n\t */\n\tthis.toJSON = function(rect, tree) {\n\t\tvar hit_stack = []; // Contains the elements that overlap\n\t\tvar count_stack = []; // Contains the elements that overlap\n\t\tvar return_stack = {}; // Contains the elements that overlap\n\t\tvar max_depth = 3;  // This triggers recursion and tree-splitting\n\t\tvar current_depth = 1;\n\t\tvar return_string = \"\";\n\t\t\n\t\tif(rect && !RTree.Rectangle.overlap_rectangle(rect, _T))\n\t\t return \"\";\n\t\t\n\t\tif(!tree)\t{\n\t\t\tcount_stack.push(_T.nodes.length);\n\t\t\thit_stack.push(_T.nodes);\n\t\t\treturn_string += \"var main_tree = {x:\"+_T.x.toFixed()+\",y:\"+_T.y.toFixed()+\",w:\"+_T.w.toFixed()+\",h:\"+_T.h.toFixed()+\",nodes:[\";\n\t\t}\telse {\n\t\t\tmax_depth += 4;\n\t\t\tcount_stack.push(tree.nodes.length);\n\t\t\thit_stack.push(tree.nodes);\n\t\t\treturn_string += \"var main_tree = {x:\"+tree.x.toFixed()+\",y:\"+tree.y.toFixed()+\",w:\"+tree.w.toFixed()+\",h:\"+tree.h.toFixed()+\",nodes:[\";\n\t\t}\n\t\n\t\tdo {\n\t\t\tvar nodes = hit_stack.pop();\n\t\t\tvar i = count_stack.pop()-1;\n\t\t\t\n\t\t\tif(i >= 0 && i < nodes.length-1)\n\t\t\t\treturn_string += \",\";\n\t\t\t\t\n\t\t\twhile(i >= 0)\t{\n\t\t\t\tvar ltree = nodes[i];\n\t\t\t  if(!rect || RTree.Rectangle.overlap_rectangle(rect, ltree)) {\n\t\t\t  \tif(ltree.nodes) { // Not a Leaf\n\t\t\t  \t\tif(current_depth >= max_depth) {\n\t\t\t  \t\t\tvar len = return_stack.length;\n\t\t\t  \t\t\tvar nam = _name_to_id(\"saved_subtree\");\n\t\t\t  \t\t\treturn_string += \"{x:\"+ltree.x.toFixed()+\",y:\"+ltree.y.toFixed()+\",w:\"+ltree.w.toFixed()+\",h:\"+ltree.h.toFixed()+\",load:'\"+nam+\".js'}\";\n\t\t\t  \t\t\treturn_stack[nam] = this.toJSON(rect, ltree);\n\t\t\t\t\t\t\tif(i > 0)\n\t\t\t\t\t\t\t\treturn_string += \",\"\n\t\t\t  \t\t}\telse {\n\t\t\t\t  \t\treturn_string += \"{x:\"+ltree.x.toFixed()+\",y:\"+ltree.y.toFixed()+\",w:\"+ltree.w.toFixed()+\",h:\"+ltree.h.toFixed()+\",nodes:[\";\n\t\t\t\t  \t\tcurrent_depth += 1;\n\t\t\t\t  \t\tcount_stack.push(i);\n\t\t\t\t  \t\thit_stack.push(nodes);\n\t\t\t\t  \t\tnodes = ltree.nodes;\n\t\t\t\t  \t\ti = ltree.nodes.length;\n\t\t\t\t  \t}\n\t\t\t  \t}\telse if(ltree.leaf) { // A Leaf !!\n\t\t\t  \t\tvar data = ltree.leaf.toJSON ? ltree.leaf.toJSON() : JSON.stringify(ltree.leaf);\n\t\t  \t\t\treturn_string += \"{x:\"+ltree.x.toFixed()+\",y:\"+ltree.y.toFixed()+\",w:\"+ltree.w.toFixed()+\",h:\"+ltree.h.toFixed()+\",leaf:\" + data + \"}\";\n\t\t\t\t\t\tif(i > 0)\n\t\t\t\t\t\t\treturn_string += \",\"\n\t\t  \t\t}\telse if(ltree.load) { // A load\n\t\t  \t\t\treturn_string += \"{x:\"+ltree.x.toFixed()+\",y:\"+ltree.y.toFixed()+\",w:\"+ltree.w.toFixed()+\",h:\"+ltree.h.toFixed()+\",load:'\" + ltree.load + \"'}\";\n\t\t\t\t\t\tif(i > 0)\n\t\t\t\t\t\t\treturn_string += \",\"\n\t\t\t  \t}\n\t\t\t\t}\n\t\t\t\ti -= 1;\n\t\t\t}\n\t\t\tif(i < 0)\t{\n\t\t\t\t\treturn_string += \"]}\"; current_depth -= 1;\n\t\t\t}\n\t\t}while(hit_stack.length > 0);\n\t\t\n\t\treturn_string+=\";\";\n\t\t\n\t\tfor(var my_key in return_stack) {\n\t\t\treturn_string += \"\\nvar \" + my_key + \" = function(){\" + return_stack[my_key] + \" return(main_tree);};\";\n\t\t}\n\t\treturn(return_string);\n\t};\n\t\n\t/* non-recursive function that deletes a specific\n\t * [ number ] = RTree.remove(rectangle, obj)\n\t */\n\tthis.remove = function(rect, obj) {\n\t\tif(arguments.length < 1)\n\t\t\tthrow \"Wrong number of arguments. RT.remove requires at least a bounding rectangle.\"\n\n\t\tswitch(arguments.length) {\n\t\t\tcase 1:\n\t\t\t\targuments[1] = false; // obj == false for conditionals\n\t\t\tcase 2:\n\t\t\t\targuments[2] = _T; // Add root node to end of argument list\n\t\t\tdefault:\n\t\t\t\targuments.length = 3;\n\t\t}\n\t\tif(arguments[1] === false) { // Do area-wide delete\n\t\t\tvar numberdeleted = 0;\n\t\t\tvar ret_array = [];\n\t\t\tdo { \n\t\t\t\tnumberdeleted=ret_array.length; \n\t\t\t\tret_array = ret_array.concat(_remove_subtree.apply(this, arguments));\n\t\t\t}while( numberdeleted !=  ret_array.length);\n\t\t\treturn ret_array;\n\t\t}\n\t\telse { // Delete a specific item\n\t\t\treturn(_remove_subtree.apply(this, arguments));\n\t\t}\n\t};\n\t\t\n\t/* non-recursive insert function\n\t * [] = RTree.insert(rectangle, object to insert)\n\t */\n\tthis.insert = function(rect, obj) {\n\t\tif(arguments.length < 2)\n\t\t\tthrow \"Wrong number of arguments. RT.Insert requires at least a bounding rectangle and an object.\"\n\t\t\n\t\treturn(_insert_subtree({x:rect.x,y:rect.y,w:rect.w,h:rect.h,leaf:obj}, _T));\n\t};\n\t\n\t/* non-recursive delete function\n\t * [deleted object] = RTree.remove(rectangle, [object to delete])\n\t */\n\n//End of RTree\n};\n\n/* Rectangle - Generic rectangle object - Not yet used */\n\nRTree.Rectangle = function(ix, iy, iw, ih) { // new Rectangle(bounds) or new Rectangle(x, y, w, h)\n    var x, x2, y, y2, w, h;\n\n    if(ix.x) {\n\t\tx = ix.x; y = ix.y;\t\n\t\t\tif(ix.w !== 0 && !ix.w && ix.x2){\n\t\t\t\tw = ix.x2-ix.x;\th = ix.y2-ix.y;\n\t\t\t}\telse {\n\t\t\t\tw = ix.w;\th = ix.h;\n\t\t\t}\n\t\tx2 = x + w; y2 = y + h; // For extra fastitude\n\t} else {\n\t\tx = ix; y = iy;\tw = iw;\th = ih;\n\t\tx2 = x + w; y2 = y + h; // For extra fastitude\n\t}\n\n\tthis.x1 = this.x = function(){return x;};\n\tthis.y1 = this.y = function(){return y;};\n\tthis.x2 = function(){return x2;};\n\tthis.y2 = function(){return y2;};\t\t\n\tthis.w = function(){return w;};\n\tthis.h = function(){return h;};\n\t\n\tthis.toJSON = function() {\n\t\treturn('{\"x\":'+x.toString()+', \"y\":'+y.toString()+', \"w\":'+w.toString()+', \"h\":'+h.toString()+'}');\n\t};\n\t\n\tthis.overlap = function(a) {\n\t\treturn(this.x() < a.x2() && this.x2() > a.x() && this.y() < a.y2() && this.y2() > a.y());\n\t};\n\t\n\tthis.expand = function(a) {\n\t\tvar nx = Math.min(this.x(), a.x());\n\t\tvar ny = Math.min(this.y(), a.y());\n\t\tw = Math.max(this.x2(), a.x2()) - nx;\n\t\th = Math.max(this.y2(), a.y2()) - ny;\n\t\tx = nx; y = ny;\n\t\treturn(this);\n\t};\n\t\n\tthis.setRect = function(ix, iy, iw, ih) {\n        var x, x2, y, y2, w, h;\n\t\tif(ix.x) {\n\t\t\tx = ix.x; y = ix.y;\t\n\t\t\tif(ix.w !== 0 && !ix.w && ix.x2) {\n\t\t\t\tw = ix.x2-ix.x;\th = ix.y2-ix.y;\n\t\t\t}\telse {\n\t\t\t\tw = ix.w;\th = ix.h;\n\t\t\t}\n\t\t\tx2 = x + w; y2 = y + h; // For extra fastitude\n\t\t} else {\n\t\t\tx = ix; y = iy;\tw = iw;\th = ih;\n\t\t\tx2 = x + w; y2 = y + h; // For extra fastitude\n\t\t}\n\t};\n//End of RTree.Rectangle\n};\n\n\n/* returns true if rectangle 1 overlaps rectangle 2\n * [ boolean ] = overlap_rectangle(rectangle a, rectangle b)\n * @static function\n */\nRTree.Rectangle.overlap_rectangle = function(a, b) {\n\treturn(a.x < (b.x+b.w) && (a.x+a.w) > b.x && a.y < (b.y+b.h) && (a.y+a.h) > b.y);\n};\n\n/* returns true if rectangle a is contained in rectangle b\n * [ boolean ] = contains_rectangle(rectangle a, rectangle b)\n * @static function\n */\nRTree.Rectangle.contains_rectangle = function(a, b) {\n\treturn((a.x+a.w) <= (b.x+b.w) && a.x >= b.x && (a.y+a.h) <= (b.y+b.h) && a.y >= b.y);\n};\n\n/* expands rectangle A to include rectangle B, rectangle B is untouched\n * [ rectangle a ] = expand_rectangle(rectangle a, rectangle b)\n * @static function\n */\nRTree.Rectangle.expand_rectangle = function(a, b)\t{\n\tvar nx = Math.min(a.x, b.x);\n\tvar ny = Math.min(a.y, b.y);\n\ta.w = Math.max(a.x+a.w, b.x+b.w) - nx;\n\ta.h = Math.max(a.y+a.h, b.y+b.h) - ny;\n\ta.x = nx; a.y = ny;\n\treturn(a);\n};\n\n/* generates a minimally bounding rectangle for all rectangles in\n * array \"nodes\". If rect is set, it is modified into the MBR. Otherwise,\n * a new rectangle is generated and returned.\n * [ rectangle a ] = make_MBR(rectangle array nodes, rectangle rect)\n * @static function\n */\nRTree.Rectangle.make_MBR = function(nodes, rect) {\n\tif(nodes.length < 1)\n\t\treturn({x:0, y:0, w:0, h:0});\n\t\t//throw \"make_MBR: nodes must contain at least one rectangle!\";\n\tif(!rect)\n\t\trect = {x:nodes[0].x, y:nodes[0].y, w:nodes[0].w, h:nodes[0].h};\n\telse\n\t\trect.x = nodes[0].x; rect.y = nodes[0].y; rect.w = nodes[0].w; rect.h = nodes[0].h;\n\t\t\n\tfor(var i = nodes.length-1; i>0; i--)\n\t\tRTree.Rectangle.expand_rectangle(rect, nodes[i]);\n\t\t\n\treturn(rect);\n};","var $         = jQuery; // Make sure we have local $ (this is for combined script in a function)\nvar Genoverse = Base.extend({\n  // Defaults\n  urlParamTemplate   : 'r=__CHR__:__START__-__END__', // Overwrite this for your URL style\n  width              : 1000,\n  longestLabel       : 30,\n  defaultLength      : 5000,\n  defaultScrollDelta : 100,\n  tracks             : [],\n  plugins            : [],\n  dragAction         : 'scroll',         // Options are: scroll, select, off\n  wheelAction        : 'off',            // Options are: zoom, off\n  isStatic           : false,            // If true, will stop drag, select and zoom actions occurring\n  saveable           : false,            // If true, track configuration and ordering will be saved in sessionStorage/localStorage\n  saveKey            : '',               // Default key for sessionStorage/localStorage configuration is 'genoverse'. saveKey will be appended to this if it is set\n  storageType        : 'sessionStorage', // Set to localStorage for permanence\n  autoHideMessages   : true,             // Determines whether to collapse track messages by default\n  trackAutoHeight    : false,            // Determines whether to automatically resize tracks to show all their features (can be overridden by track.autoHeight)\n  hideEmptyTracks    : true,             // Determines whether to hide an automatically resized tracks if it has no features, or to show it empty (can be overridden by track.hideEmpty)\n  genome             : undefined,        // The genome used in the browser - can be an object or a string, which will be used to obtain a javascript file\n  useHash            : undefined,        // If true, window.location.hash is changed on navigation. If false, window.history.pushState is used. If undefined, pushState will be used if present in the browser\n\n  // Default coordinates for initial view, overwrite in your config\n  chr   : 1,\n  start : 1,\n  end   : 1000000,\n\n  constructor: function (config) {\n    var browser = this;\n\n    if (!this.supported()) {\n      return this.die('Your browser does not support this functionality');\n    }\n\n    config.container = $(config.container); // Make sure container is a jquery object, jquery recognises itself automatically\n\n    if (!(config.container && config.container.length)) {\n      config.container = $('<div>').appendTo('body');\n    }\n\n    config.container.addClass('genoverse').data('genoverse', this);\n\n    $.extend(this, config);\n\n    this.eventNamespace = '.genoverse.' + (++Genoverse.id);\n    this.events         = { browser: {}, tracks: {} };\n\n    $.when(this.loadGenome(), this.loadPlugins()).always(function () {\n      Genoverse.wrapFunctions(browser);\n      browser.init();\n    });\n  },\n\n  loadGenome: function () {\n    if (typeof this.genome === 'string') {\n      var genomeName = this.genome;\n\n      return $.ajax({\n        url      : this.origin + 'js/genomes/' + genomeName + '.js',\n        dataType : 'script',\n        context  : this,\n        success  : function () {\n          try {\n            this.genome = eval(genomeName);\n          } catch (e) {\n            console.log(e);\n            this.die('Unable to load genome ' + genomeName);\n          }\n        }\n      });\n    }\n  },\n\n  loadPlugins: function (plugins) {\n    var browser         = this;\n    var loadPluginsTask = $.Deferred();\n    var plugins         = plugins || this.plugins;\n\n    this.loadedPlugins = this.loadedPlugins || {};\n\n    if (typeof plugins === 'string') {\n      plugins = [ plugins ];\n    }\n\n    function loadPlugin(plugin) {\n      var css      = browser.origin + 'css/'        + plugin + '.css';\n      var js       = browser.origin + 'js/plugins/' + plugin + '.js';\n      var deferred = $.Deferred();\n\n      function getCSS() {\n        function done() {\n          browser.loadedPlugins[plugin] = browser.loadedPlugins[plugin] || 'script';\n          deferred.resolve(plugin);\n        }\n\n        if (Genoverse.Plugins[plugin].noCSS || $('link[href=\"' + css + '\"]').length) {\n          return done();\n        }\n\n        $('<link href=\"' + css + '\" rel=\"stylesheet\">').on('load', done).appendTo('body');\n      }\n\n      if (browser.loadedPlugins[plugin] || $('script[src=\"' + js + '\"]').length) {\n        getCSS();\n      } else {\n        $.getScript(js, getCSS);\n      }\n\n      return deferred;\n    }\n\n    function intializePlugin(plugin) {\n      if (typeof Genoverse.Plugins[plugin] !== 'function' || browser.loadedPlugins[plugin] === true) {\n        return [];\n      }\n\n      var requires = Genoverse.Plugins[plugin].requires;\n      var deferred = $.Deferred();\n\n      function init() {\n        if (browser.loadedPlugins[plugin] !== true) {\n          Genoverse.Plugins[plugin].call(browser);\n          browser.container.addClass('gv-' + plugin.replace(/([A-Z])/g, '-$1').toLowerCase() + '-plugin');\n          browser.loadedPlugins[plugin] = true;\n        }\n\n        deferred.resolve();\n      }\n\n      if (requires) {\n        $.when(browser.loadPlugins(requires)).done(init);\n      } else {\n        init();\n      }\n\n      return deferred;\n    }\n\n    // Load plugins css file\n    $.when.apply($, $.map(plugins, loadPlugin)).done(function () {\n      var pluginsLoaded = [];\n      var plugin;\n\n      for (var i = 0; i < arguments.length; i++) {\n        plugin = arguments[i];\n\n        if (browser.loadedPlugins[plugin] !== true) {\n          pluginsLoaded.push(intializePlugin(plugin));\n        }\n      }\n\n      $.when.apply($, pluginsLoaded).always(loadPluginsTask.resolve);\n    });\n\n    return loadPluginsTask;\n  },\n\n  init: function () {\n    var width = this.width;\n\n    this.addDomElements(width);\n    this.addUserEventHandlers();\n\n    if (this.isStatic) {\n      this.dragAction       = this.wheelAction = 'off';\n      this.urlParamTemplate = false;\n    }\n\n    this.tracksById       = {};\n    this.prev             = {};\n    this.saveKey          = this.saveKey ? 'genoverse-' + this.saveKey : 'genoverse';\n    this.urlParamTemplate = this.urlParamTemplate || '';\n    this.useHash          = typeof this.useHash === 'boolean' ? this.useHash : typeof window.history.pushState !== 'function';\n    this.textWidth        = document.createElement('canvas').getContext('2d').measureText('W').width;\n    this.labelWidth       = this.labelContainer.outerWidth(true);\n    this.width           -= this.labelWidth;\n    this.paramRegex       = this.urlParamTemplate ? new RegExp('([?&;])' + this.urlParamTemplate\n      .replace(/(\\b(\\w+=)?__CHR__(.)?)/,   '$2([\\\\w\\\\.]+)$3')\n      .replace(/(\\b(\\w+=)?__START__(.)?)/, '$2(\\\\d+)$3')\n      .replace(/(\\b(\\w+=)?__END__(.)?)/,   '$2(\\\\d+)$3') + '([;&])'\n    ) : '';\n\n    var urlCoords = this.getURLCoords();\n    var coords    = urlCoords.chr && urlCoords.start && urlCoords.end ? urlCoords : { chr: this.chr, start: this.start, end: this.end };\n\n    this.chr = coords.chr;\n\n    if (this.genome && !this.chromosomeSize) {\n      this.chromosomeSize = this.genome[this.chr].size;\n    }\n\n    if (this.saveable) {\n      this.loadConfig();\n    } else {\n      this.addTracks();\n    }\n\n    this.setRange(coords.start, coords.end);\n  },\n\n  loadConfig: function () {\n    this.defaultTracks = $.extend([], true, this.tracks);\n\n    var config = window[this.storageType].getItem(this.saveKey);\n\n    if (config) {\n      config = JSON.parse(config);\n    } else {\n      return this.addTracks();\n    }\n\n    var tracksLibrary = this.tracksLibrary || [];\n    var tracks        = [];\n    var tracksById    = {};\n    var tracksByName  = {};\n    var savedConfig   = {};\n    var i, prop, track;\n\n    function setConfig(track, conf) {\n      for (prop in conf) {\n        if (prop === 'config') {\n          savedConfig[conf.id] = conf[prop];\n        } else {\n          track.prototype[prop] = conf[prop];\n        }\n      }\n    }\n\n    for (i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].prototype.id) {\n        tracksById[this.tracks[i].prototype.id] = this.tracks[i];\n      }\n    }\n\n    for (i = 0; i < tracksLibrary.length; i++) {\n      if (tracksLibrary[i].prototype.name) {\n        tracksByName[tracksLibrary[i].prototype.name] = tracksLibrary[i];\n      }\n    }\n\n    for (i = 0; i < config.length; i++) {\n      track = tracksById[config[i].id];\n\n      if (track) {\n        setConfig(track, config[i]);\n        track._fromStorage = true;\n      } else if (tracksByName[config[i].name]) {\n        track = tracksByName[config[i].name];\n\n        this.trackIds = this.trackIds || {};\n        this.trackIds[track.prototype.id] = this.trackIds[track.prototype.id] || 1;\n\n        track = track.extend({ id: track.prototype.id + (tracksById[track.prototype.id] ? this.trackIds[track.prototype.id]++ : '') })\n\n        setConfig(track, config[i]);\n        tracks.push(track);\n      }\n    }\n\n    for (i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].prototype.id && !this.tracks[i]._fromStorage) {\n        continue;\n      }\n\n      tracks.push(this.tracks[i]);\n    }\n\n    this.tracks      = tracks;\n    this.savedConfig = savedConfig;\n\n    this.addTracks();\n  },\n\n  saveConfig: function () {\n    if (this._constructing || !this.saveable) {\n      return;\n    }\n\n    var config = [];\n\n    for (var i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].id) {\n        config.push({\n          id         : this.tracks[i].id,\n          name       : this.tracks[i].name,\n          order      : this.tracks[i].order,\n          height     : this.tracks[i].height,\n          autoHeight : this.tracks[i].autoHeight,\n          config     : this.tracks[i].config\n        });\n      }\n    }\n\n    window[this.storageType].setItem(this.saveKey, JSON.stringify(config));\n  },\n\n  resetConfig: function () {\n    window[this.storageType].removeItem(this.saveKey);\n\n    this._constructing = true;\n    this.savedConfig   = {};\n\n    this.removeTracks($.extend([], this.tracks)); // Shallow clone to ensure that removeTracks doesn't hit problems when splicing this.tracks\n    this.addTracks($.extend([], true, this.defaultTracks));\n\n    this._constructing = false;\n  },\n\n  addDomElements: function (width) {\n    var browser = this;\n\n    this.menus          = $();\n    this.labelContainer = $('<ul class=\"gv-label-container\">').appendTo(this.container).sortable({\n      items  : 'li:not(.gv-unsortable)',\n      handle : '.gv-handle',\n      axis   : 'y',\n      helper : 'clone',\n      cursor : 'move',\n      update : $.proxy(this.updateTrackOrder, this),\n      start  : function (e, ui) {\n        ui.placeholder.css({ height: ui.item.height(), visibility: 'visible' }).html(ui.item.html());\n        ui.helper.hide();\n      }\n    });\n\n    this.wrapper  = $('<div class=\"gv-wrapper\">').appendTo(this.container);\n    this.selector = $('<div class=\"gv-selector gv-crosshair\">').appendTo(this.wrapper);\n\n    this.selectorControls = this.zoomInHighlight = this.zoomOutHighlight = $();\n\n    this.container.addClass('gv-canvas-container').width(width);\n\n    if (!this.isStatic) {\n      this.selectorControls = $(\n        '<div class=\"gv-selector-controls\">'                +\n        '  <button class=\"gv-zoom-here\">Zoom here</button>' +\n        '  <button class=\"gv-center\">Center</button>'       +\n        '  <button class=\"gv-cancel\">Cancel</button>'       +\n        '</div>'\n      ).appendTo(this.selector);\n\n      this.zoomInHighlight = $(\n        '<div class=\"gv-canvas-zoom gv-i\">' +\n        '  <div class=\"gv-t gv-l gv-h\"></div>' +\n        '  <div class=\"gv-t gv-r gv-h\"></div>' +\n        '  <div class=\"gv-t gv-l gv-v\"></div>' +\n        '  <div class=\"gv-t gv-r gv-v\"></div>' +\n        '  <div class=\"gv-b gv-l gv-h\"></div>' +\n        '  <div class=\"gv-b gv-r gv-h\"></div>' +\n        '  <div class=\"gv-b gv-l gv-v\"></div>' +\n        '  <div class=\"gv-b gv-r gv-v\"></div>' +\n        '</div>'\n      ).appendTo('body');\n\n      this.zoomOutHighlight = this.zoomInHighlight.clone().toggleClass('gv-i gv-o').appendTo('body');\n    }\n  },\n\n  addUserEventHandlers: function () {\n    var browser        = this;\n    var documentEvents = {};\n\n    this.container.on({\n      mousedown: function (e) {\n        browser.hideMessages();\n\n        // Only scroll on left click, and do nothing if clicking on a button in selectorControls\n        if ((!e.which || e.which === 1) && !(this === browser.selector[0] && e.target !== this)) {\n          browser.mousedown(e);\n        }\n\n        return false;\n      },\n      mousewheel: function (e, delta, deltaX, deltaY) {\n        if (browser.noWheelZoom) {\n          return true;\n        }\n\n        browser.hideMessages();\n\n        if (deltaY === 0 && deltaX !== 0) {\n          browser.startDragScroll(e);\n          browser.move(-deltaX * 10);\n          browser.stopDragScroll(false);\n        } else if (browser.wheelAction === 'zoom') {\n          return browser.mousewheelZoom(e, delta);\n        }\n      },\n      dblclick: function (e) {\n        if (browser.isStatic) {\n          return true;\n        }\n\n        browser.hideMessages();\n        browser.mousewheelZoom(e, 1);\n      }\n    }, '.gv-image-container, .gv-selector');\n\n    this.selectorControls.on('click', function (e) {\n      var pos = browser.getSelectorPosition();\n\n      switch (e.target.className) {\n        case 'gv-zoom-here' : browser.setRange(pos.start, pos.end, true); break;\n        case 'gv-center'    : browser.moveTo(pos.start, pos.end, true, true);\n        case 'gv-cancel'    : browser.cancelSelect(); break;\n        default             : break;\n      }\n    });\n\n    documentEvents['mouseup'    + this.eventNamespace] = $.proxy(this.mouseup,   this);\n    documentEvents['mousemove'  + this.eventNamespace] = $.proxy(this.mousemove, this);\n    documentEvents['keydown'    + this.eventNamespace] = $.proxy(this.keydown,   this);\n    documentEvents['keyup'      + this.eventNamespace] = $.proxy(this.keyup,     this);\n    documentEvents['mousewheel' + this.eventNamespace] = function (e) {\n      if (browser.wheelAction === 'zoom') {\n        if (browser.wheelTimeout) {\n          clearTimeout(browser.wheelTimeout);\n        }\n\n        browser.noWheelZoom  = browser.noWheelZoom || e.target !== browser.container[0];\n        browser.wheelTimeout = setTimeout(function () { browser.noWheelZoom = false; }, 300);\n      }\n    };\n\n    $(document).on(documentEvents);\n    $(window).on((this.useHash ? 'hashchange' : 'popstate') + this.eventNamespace, $.proxy(this.popState, this));\n  },\n\n  onTracks: function () {\n    var args = $.extend([], arguments);\n    var func = args.shift();\n    var mvc;\n\n    for (var i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].disabled) {\n        continue;\n      }\n\n      mvc = this.tracks[i]._interface[func];\n\n      if (mvc) {\n        this.tracks[i][mvc][func].apply(this.tracks[i][mvc], args);\n      } else if (this.tracks[i][func]) {\n        this.tracks[i][func].apply(this.tracks[i], args);\n      }\n    }\n  },\n\n  reset: function () {\n    this.onTracks('reset');\n    this.scale = 9e99; // arbitrary value so that setScale resets track scales as well\n    this.setRange(this.start, this.end);\n  },\n\n  setWidth: function (width) {\n    this.width  = width;\n    this.width -= this.labelWidth;\n\n    this.container.width(width);\n    this.onTracks('setWidth', this.width);\n    this.reset();\n  },\n\n  mousewheelZoom: function (e, delta) {\n    var browser = this;\n\n    clearTimeout(this.zoomDeltaTimeout);\n    clearTimeout(this.zoomTimeout);\n\n    this.zoomDeltaTimeout = setTimeout(function () {\n      if (delta > 0) {\n        browser.zoomInHighlight.css({ left: e.pageX - 20, top: e.pageY - 20, display: 'block' }).animate({\n          width: 80, height: 80, top: '-=20', left: '-=20'\n        }, {\n          complete: function () { $(this).css({ width: 40, height: 40, display: 'none' }); }\n        });\n      } else {\n        browser.zoomOutHighlight.css({ left: e.pageX - 40, top: e.pageY - 40, display: 'block' }).animate({\n          width: 40, height: 40, top: '+=20', left: '+=20'\n        }, {\n          complete: function () { $(this).css({ width: 80, height: 80, display: 'none' }); }\n        });\n      }\n    }, 100);\n\n    this.zoomTimeout = setTimeout(function () {\n      browser[delta > 0 ? 'zoomIn' : 'zoomOut'](e.pageX - browser.container.offset().left - browser.labelWidth);\n\n      if (browser.dragAction === 'select') {\n        browser.moveSelector(e);\n      }\n    }, 300);\n\n    return false;\n  },\n\n  startDragScroll: function (e) {\n    this.dragging    = 'scroll';\n    this.scrolling   = !e;\n    this.dragOffset  = e ? e.pageX - this.left : 0;\n    this.dragStart   = this.start;\n    this.scrollDelta = Math.max(this.scale, this.defaultScrollDelta);\n  },\n\n  stopDragScroll: function (update) {\n    this.dragging  = false;\n    this.scrolling = false;\n\n    if (update !== false) {\n      if (this.start !== this.dragStart) {\n        this.updateURL();\n      }\n\n      this.checkTrackHeights();\n    }\n  },\n\n  startDragSelect: function (e) {\n    if (!e) {\n      return false;\n    }\n\n    var x = Math.max(0, e.pageX - this.wrapper.offset().left - 2);\n\n    this.dragging        = 'select';\n    this.selectorStalled = false;\n    this.selectorStart   = x;\n\n    this.selector.css({ left: x, width: 0 }).removeClass('gv-crosshair');\n    this.selectorControls.hide();\n  },\n\n  stopDragSelect: function (e) {\n    if (!e) {\n      return false;\n    }\n\n    this.dragging        = false;\n    this.selectorStalled = true;\n\n    if (this.selector.outerWidth(true) < 2) {\n      return this.cancelSelect();\n    }\n\n    // Calculate the position, so that selectorControls appear near the mouse cursor\n    var top = Math.min(e.pageY - this.wrapper.offset().top, this.wrapper.outerHeight(true) - 1.2 * this.selectorControls.outerHeight(true));\n    var pos = this.getSelectorPosition();\n\n    this.selectorControls.find('.gv-selector-location').html(this.chr + ':' + pos.start + '-' + pos.end).end().css({\n      top  : top,\n      left : this.selector.outerWidth(true) / 2 - this.selectorControls.outerWidth(true) / 2\n    }).show();\n  },\n\n  cancelSelect: function (keepDragging) {\n    if (!keepDragging) {\n      this.dragging = false;\n    }\n\n    this.selectorStalled = false;\n\n    this.selector.addClass('gv-crosshair').width(0);\n    this.selectorControls.hide();\n\n    if (this.dragAction === 'scroll') {\n      this.selector.hide();\n    }\n  },\n\n  dragSelect: function (e) {\n    var x = e.pageX - this.wrapper.offset().left;\n\n    if (x > this.selectorStart) {\n      this.selector.css({\n        left  : this.selectorStart,\n        width : Math.min(x - this.selectorStart, this.width - this.selectorStart - 1)\n      });\n    } else {\n      this.selector.css({\n        left  : Math.max(x, 1),\n        width : Math.min(this.selectorStart - x, this.selectorStart - 1)\n      });\n    }\n  },\n\n  setDragAction: function (action, keepSelect) {\n    this.dragAction = action;\n\n    if (this.dragAction === 'select') {\n      this.selector.addClass('gv-crosshair').width(0).show();\n    } else if (keepSelect && !this.selector.hasClass('gv-crosshair')) {\n      this.selectorStalled = false;\n    } else {\n      this.cancelSelect();\n      this.selector.hide();\n    }\n  },\n\n  toggleSelect: function (on) {\n    if (on) {\n      this.prev.dragAction = 'scroll';\n      this.setDragAction('select');\n    } else {\n      this.setDragAction(this.prev.dragAction, true);\n      delete this.prev.dragAction;\n    }\n  },\n\n  setWheelAction: function (action) {\n    this.wheelAction = action;\n  },\n\n  keydown: function (e) {\n    if (e.which === 16 && !this.prev.dragAction && this.dragAction === 'scroll') { // shift key\n      this.toggleSelect(true);\n    } else if (e.which === 27) { // escape key\n      this.cancelSelect();\n      this.closeMenus();\n    }\n  },\n\n  keyup: function (e) {\n    if (e.which === 16 && this.prev.dragAction) { // shift key\n      this.toggleSelect();\n    }\n  },\n\n  mousedown: function (e) {\n    if (e.shiftKey) {\n      if (this.dragAction === 'scroll') {\n        this.toggleSelect(true);\n      }\n    } else if (this.prev.dragAction) {\n      this.toggleSelect();\n    }\n\n    switch (this.dragAction) {\n      case 'select' : this.startDragSelect(e); break;\n      case 'scroll' : this.startDragScroll(e); break;\n      default       : break;\n    }\n  },\n\n  mouseup: function (e, update) {\n    if (!this.dragging) {\n      return false;\n    }\n\n    switch (this.dragging) {\n      case 'select' : this.stopDragSelect(e);      break;\n      case 'scroll' : this.stopDragScroll(update); break;\n      default       : break;\n    }\n  },\n\n  mousemove: function (e) {\n    if (this.dragging && !this.scrolling) {\n      switch (this.dragAction) {\n        case 'scroll' : this.move(e.pageX - this.dragOffset - this.left); break;\n        case 'select' : this.dragSelect(e); break;\n        default       : break;\n      }\n    } else if (this.dragAction === 'select') {\n      this.moveSelector(e);\n    }\n  },\n\n  moveSelector: function (e) {\n    if (!this.selectorStalled) {\n      this.selector.css('left', e.pageX - this.wrapper.offset().left - 2);\n    }\n  },\n\n  move: function (delta) {\n    var scale = this.scale;\n    var start, end, left;\n\n    if (scale > 1) {\n      delta = Math.round(delta / scale) * scale; // Force stepping by base pair when in small regions\n    }\n\n    left = this.left + delta;\n\n    if (left <= this.minLeft) {\n      left  = this.minLeft;\n      delta = this.minLeft - this.left;\n    } else if (left >= this.maxLeft) {\n      left  = this.maxLeft;\n      delta = this.maxLeft - this.left;\n    }\n\n    start = Math.max(Math.round(this.start - delta / scale), 1);\n    end   = start + this.length - 1;\n\n    if (end > this.chromosomeSize) {\n      end   = this.chromosomeSize;\n      start = end - this.length + 1;\n    }\n\n    this.left = left;\n\n    if (start !== this.dragStart) {\n      this.closeMenus();\n      this.cancelSelect(true);\n    }\n\n    this.onTracks('move', delta);\n    this.setRange(start, end);\n  },\n\n  moveTo: function (start, end, update, keepLength) {\n    this.setRange(start, end, update, keepLength);\n\n    if (this.prev.scale === this.scale) {\n      this.left = Math.max(Math.min(this.left + Math.round((this.prev.start - this.start) * this.scale), this.maxLeft), this.minLeft);\n      this.onTracks('moveTo', this.start, this.end, (this.prev.start - this.start) * this.scale);\n    }\n  },\n\n  setRange: function (start, end, update, keepLength) {\n    this.prev.start = this.start;\n    this.prev.end   = this.end;\n    this.start      = Math.max(typeof start === 'number' ? Math.floor(start) : parseInt(start, 10), 1);\n    this.end        = Math.min(typeof end   === 'number' ? Math.floor(end)   : parseInt(end,   10), this.chromosomeSize);\n\n    if (this.end < this.start) {\n      this.end = Math.min(this.start + this.defaultLength - 1, this.chromosomeSize);\n    }\n\n    if (keepLength && this.end - this.start + 1 !== this.length) {\n      if (this.end === this.chromosomeSize) {\n        this.start = this.end - this.length + 1;\n      } else {\n        var center = (this.start + this.end) / 2;\n        this.start = Math.max(Math.floor(center - this.length / 2), 1);\n        this.end   = this.start + this.length - 1;\n\n        if (this.end > this.chromosomeSize) {\n          this.end   = this.chromosomeSize;\n          this.start = this.end - this.length + 1;\n        }\n      }\n    } else {\n      this.length = this.end - this.start + 1;\n    }\n\n    this.setScale();\n\n    if (update === true && (this.prev.start !== this.start || this.prev.end !== this.end)) {\n      this.updateURL();\n    }\n  },\n\n  setScale: function () {\n    this.prev.scale  = this.scale;\n    this.scale       = this.width / this.length;\n    this.scaledStart = this.start * this.scale;\n\n    if (this.prev.scale !== this.scale) {\n      this.left        = 0;\n      this.minLeft     = Math.round((this.end   - this.chromosomeSize) * this.scale);\n      this.maxLeft     = Math.round((this.start - 1) * this.scale);\n      this.labelBuffer = Math.ceil(this.textWidth / this.scale) * this.longestLabel;\n\n      if (this.prev.scale) {\n        this.cancelSelect();\n        this.closeMenus();\n      }\n\n      this.onTracks('setScale');\n      this.onTracks('makeFirstImage');\n    }\n  },\n\n  checkTrackHeights: function () {\n    if (this.dragging) {\n      return;\n    }\n\n    this.onTracks('checkHeight');\n  },\n\n  resetTrackHeights: function () {\n    this.onTracks('resetHeight');\n  },\n\n  zoomIn: function (x) {\n    if (!x) {\n      x = this.width / 2;\n    }\n\n    var start = Math.round(this.start + x / (2 * this.scale));\n    var end   = this.length === 2 ? start : Math.round(start + (this.length - 1) / 2);\n\n    this.setRange(start, end, true);\n  },\n\n  zoomOut: function (x) {\n    if (!x) {\n      x = this.width / 2;\n    }\n\n    var start = Math.round(this.start - x / this.scale);\n    var end   = this.length === 1 ? start + 1 : Math.round(start + 2 * (this.length - 1));\n\n    this.setRange(start, end, true);\n  },\n\n  addTrack: function (track, index) {\n    return this.addTracks([ track ], index)[0];\n  },\n\n  addTracks: function (tracks, index) {\n    var defaults = {\n      browser : this,\n      width   : this.width\n    };\n\n    var push = !!tracks;\n    var j, config;\n\n    tracks = tracks || $.extend([], this.tracks);\n    index  = index  || 0;\n\n    for (var i = 0; i < tracks.length; i++) {\n      tracks[i] = new tracks[i]($.extend(defaults, { index: i + index, config: this.savedConfig ? $.extend(true, {}, this.savedConfig[tracks[i].prototype.id]) : undefined }));\n\n      if (tracks[i].id) {\n        this.tracksById[tracks[i].id] = tracks[i];\n      }\n\n      if (push) {\n        this.tracks.push(tracks[i]);\n\n        if (this.scale) {\n          tracks[i].controller.setScale(); // scale will only be set for tracks added after initalisation\n          tracks[i].controller.makeFirstImage();\n        }\n      } else {\n        this.tracks[i] = tracks[i];\n      }\n    }\n\n    this.sortTracks();\n    this.saveConfig();\n\n    return tracks;\n  },\n\n  removeTrack: function (track) {\n    this.removeTracks([ track ]);\n  },\n\n  removeTracks: function (tracks) {\n    var i = tracks.length;\n    var track, j;\n\n    while (i--) {\n      track = tracks[i];\n      j     = this.tracks.length;\n\n      while (j--) {\n        if (track === this.tracks[j]) {\n          this.tracks.splice(j, 1);\n          break;\n        }\n      }\n\n      if (track.id) {\n        delete this.tracksById[track.id];\n      }\n\n      track.destructor(); // Destroy DOM elements and track itself\n    }\n\n    this.saveConfig();\n  },\n\n  sortTracks: function () {\n    if ($.grep(this.tracks, function (t) { return typeof t !== 'object'; }).length) {\n      return;\n    }\n\n    var sorted     = $.extend([], this.tracks).sort(function (a, b) { return a.order - b.order; });\n    var labels     = $();\n    var containers = $();\n\n    for (var i = 0; i < sorted.length; i++) {\n      if (!sorted[i].prop('unsortable')) {\n        sorted[i].prop('order', i);\n      }\n\n      if (sorted[i].prop('menus').length) {\n        sorted[i].prop('top', sorted[i].prop('container').position().top);\n      }\n\n      labels.push(sorted[i].prop('label')[0]);\n      containers.push(sorted[i].prop('container')[0]);\n    }\n\n    this.labelContainer.append(labels);\n    this.wrapper.append(containers);\n\n    // Correct the order\n    this.tracks = sorted;\n\n    labels.map(function () { return $(this).data('track'); }).each(function () {\n      if (this.prop('menus').length) {\n        var diff = this.prop('container').position().top - this.prop('top');\n        this.prop('menus').css('top', function (i, top) { return parseInt(top, 10) + diff; });\n        this.prop('top', null);\n      }\n    });\n\n    sorted = labels = containers = null;\n  },\n\n  updateTrackOrder: function (e, ui) {\n    var track = ui.item.data('track');\n    var prev  = ui.item.prev().data('track');\n    var next  = ui.item.next().data('track');\n    var p     = prev ? prev.prop('order') : 0;\n    var n     = next ? next.prop('order') : 0;\n    var o     = p || n;\n    var order;\n\n    if (prev && next && Math.floor(n) === Math.floor(p)) {\n      order = p + (n - p) / 2;\n    } else {\n      order = o + (p ? 1 : -1) * Math.abs(Math.round(o) - o || 1) / 2;\n    }\n\n    track.prop('order', order);\n\n    this.sortTracks();\n    this.saveConfig();\n  },\n\n  updateURL: function () {\n    if (this.urlParamTemplate) {\n      if (this.useHash) {\n        window.location.hash = this.getQueryString();\n      } else {\n        window.history.pushState({}, '', this.getQueryString());\n      }\n    }\n  },\n\n  popState: function () {\n    var coords = this.getURLCoords();\n    var start  = parseInt(coords.start, 10);\n    var end    = parseInt(coords.end,   10);\n\n    if (coords.start && !(start === this.start && end === this.end)) {\n      // FIXME: a back action which changes scale or a zoom out will reset tracks, since scrollStart will not be the same as it was before\n      this.moveTo(start, end);\n    }\n\n    this.closeMenus();\n    this.hideMessages();\n  },\n\n  getURLCoords: function () {\n    var match  = ((this.useHash ? window.location.hash.replace(/^#/, '?') || window.location.search : window.location.search) + '&').match(this.paramRegex);\n    var coords = {};\n    var i      = 0;\n\n    if (!match) {\n      return coords;\n    }\n\n    match = match.slice(2, -1);\n\n    $.each(this.urlParamTemplate.split('__'), function () {\n      var tmp = this.match(/^(CHR|START|END)$/);\n\n      if (tmp) {\n        coords[tmp[1].toLowerCase()] = tmp[1] === 'CHR' ? match[i++] : parseInt(match[i++], 10);\n      }\n    });\n\n    return coords;\n  },\n\n  getQueryString: function () {\n    var location = this.urlParamTemplate\n      .replace('__CHR__',   this.chr)\n      .replace('__START__', this.start)\n      .replace('__END__',   this.end);\n\n    return this.useHash ? location : window.location.search ? (window.location.search + '&').replace(this.paramRegex, '$1' + location + '$5').slice(0, -1) : '?' + location;\n  },\n\n  supported: function () {\n    var el = document.createElement('canvas');\n    return !!(el.getContext && el.getContext('2d'));\n  },\n\n  die: function (error, el) {\n    if (el && el.length) {\n      el.html(error);\n    } else {\n      alert(error);\n    }\n\n    this.failed = true;\n  },\n\n  menuTemplate: $(\n    '<div class=\"gv-menu\">'                               +\n      '<div class=\"gv-close gv-menu-button\">&#215;</div>' +\n      '<div class=\"gv-menu-content\">'                     +\n        '<div class=\"gv-title\"></div>'                    +\n        '<a class=\"gv-focus\" href=\"#\">Focus here</a>'     +\n        '<table></table>'                                 +\n      '</div>'                                            +\n    '</div>'\n  ).on('click', function (e) {\n    if ($(e.target).hasClass('gv-close')) {\n      $(this).fadeOut('fast', function () {\n        var data = $(this).data();\n\n        if (data.track) {\n          data.track.prop('menus', data.track.prop('menus').not(this));\n        }\n\n        data.browser.menus = data.browser.menus.not(this);\n      });\n    }\n  }),\n\n  makeMenu: function (feature, event, track) {\n    if (!feature.menuEl) {\n      var browser = this;\n      var menu    = this.menuTemplate.clone(true).data('browser', this);\n      var content = $('.gv-menu-content', menu).remove();\n      var i, table, el, start, end, key, width, colspan, tdWidth;\n\n      function focus() {\n        var data    = $(this).data();\n        var length  = data.end - data.start + 1;\n        var context = Math.max(Math.round(length / 4), 25);\n\n        browser.moveTo(data.start - context, data.end + context, true);\n\n        return false;\n      }\n\n      $.when(track ? track.controller.populateMenu(feature) : feature).done(function (properties) {\n        if (Object.prototype.toString.call(properties) !== '[object Array]') {\n          properties = [ properties ];\n        }\n\n        for (i = 0; i < properties.length; i++) {\n          table = '';\n          el    = content.clone().appendTo(menu);\n          start = parseInt(typeof properties[i].start !== 'undefined' ? properties[i].start : feature.start, 10);\n          end   = parseInt(typeof properties[i].end   !== 'undefined' ? properties[i].end   : feature.end,   10);\n\n          $('.gv-title', el)[properties[i].title ? 'html' : 'remove'](properties[i].title);\n\n          if (track && start && end && !browser.isStatic) {\n            $('.gv-focus', el).data({ start: start, end: Math.max(end, start) }).on('click', focus);\n          } else {\n            $('.gv-focus', el).remove();\n          }\n\n          for (key in properties[i]) {\n            if (/^start|end$/.test(key) && properties[i][key] === false) {\n              continue;\n            }\n\n            if (key !== 'title') {\n              colspan = properties[i][key] === '' ? ' colspan=\"2\"' : '';\n              table  += '<tr><td' + colspan + '>' + key + '</td>' + (colspan ? '' : '<td>' + properties[i][key] + '</td></tr>');\n            }\n          }\n\n          $('table', el).html(table);\n        }\n      });\n\n      if (track) {\n        menu.addClass(track.id).data('track', track);\n      }\n\n      feature.menuEl = menu.appendTo(this.superContainer || this.container);\n\n      $('.gv-menu-content', menu).each(function () {\n        tdWidth = $('td:first', this).outerWidth();\n\n        $('.gv-title', this).width(function (i, w) {\n          width = Math.max(w, tdWidth);\n\n          if (width === w) {\n            $(this).addClass('gv-block');\n            return 'auto';\n          }\n\n          return width;\n        });\n      });\n    }\n\n    this.menus = this.menus.add(feature.menuEl);\n\n    if (track) {\n      track.prop('menus', track.prop('menus').add(feature.menuEl));\n    }\n\n    feature.menuEl.show(); // Must show before positioning, else position will be wrong\n\n    if (event) {\n      feature.menuEl.css({ left: 0, top: 0 }).position({ of: event, my: 'left top', collision: 'flipfit' });\n    }\n\n    return feature.menuEl;\n  },\n\n  closeMenus: function (obj) {\n    obj = obj || this;\n\n    obj.menus.filter(':visible').children('.gv-close').trigger('click');\n    obj.menus = $();\n  },\n\n  hideMessages: function () {\n    if (this.autoHideMessages) {\n      this.wrapper.find('.gv-message-container').addClass('gv-collapsed');\n    }\n  },\n\n  getSelectorPosition: function () {\n    var left  = this.selector.position().left;\n    var width = this.selector.outerWidth(true);\n    var start = Math.round(left / this.scale) + this.start;\n    var end   = Math.round((left + width) / this.scale) + this.start - 1;\n        end   = end <= start ? start : end;\n\n    return { start: start, end: end, left: left, width: width };\n  },\n\n  on: function (events, obj, fn, once) {\n    var browser  = this;\n    var eventMap = {};\n    var i, j, f, fnString, event;\n\n    function makeEventMap(types, handler) {\n      types = types.split(' ');\n\n      for (var j = 0; j < types.length; j++) {\n        eventMap[types[j]] = (eventMap[types[j]] || []).concat(handler);\n      }\n    }\n\n    function makeFnString(func) {\n      return func.toString();\n    }\n\n    function compare(func) {\n      f = func.toString();\n\n      for (j = 0; j < fnString.length; j++) {\n        if (f === fnString[j]) {\n          return true;\n        }\n      }\n    }\n\n    if (typeof events === 'object') {\n      for (i in events) {\n        makeEventMap(i, events[i]);\n      }\n\n      obj = obj || this;\n    } else {\n      if (typeof fn === 'undefined') {\n        fn  = obj;\n        obj = this;\n      }\n\n      makeEventMap(events, fn);\n    }\n\n    var type = obj instanceof Genoverse.Track || obj === 'tracks' ? 'tracks' : 'browser';\n\n    for (i in eventMap) {\n      event = i + (once ? '.once' : '');\n\n      browser.events[type][event] = browser.events[type][event] || [];\n      fnString = $.map(eventMap[i], makeFnString);\n\n      if (!$.grep(browser.events[type][event], compare).length) {\n        browser.events[type][event].push.apply(browser.events[type][event], eventMap[i]);\n      }\n    }\n  },\n\n  once: function (events, obj, fn) {\n    this.on(events, obj, fn, true);\n  },\n\n  destroy: function () {\n    this.onTracks('destructor');\n    (this.superContainer || this.container).empty();\n    $(window).add(document).off(this.eventNamespace);\n\n    for (var key in this) {\n      delete this[key];\n    }\n  }\n}, {\n  Plugins: {},\n\n  wrapFunctions: function (obj) {\n    for (var key in obj) {\n      if (typeof obj[key] === 'function' && typeof obj[key].ancestor !== 'function' && !key.match(/^(base|extend|constructor|on|once|prop|loadPlugins|loadGenome)$/)) {\n        Genoverse.functionWrap(key, obj);\n      }\n    }\n  },\n\n  /**\n   * functionWrap - wraps event handlers and adds debugging functionality\n   **/\n  functionWrap: function (key, obj) {\n    obj.functions = obj.functions || {};\n\n    if (obj.functions[key] || key.match(/^(before|after)/)) {\n      return;\n    }\n\n    var func      = key.substring(0, 1).toUpperCase() + key.substring(1);\n    var isBrowser = obj instanceof Genoverse;\n    var mainObj   = isBrowser || obj instanceof Genoverse.Track ? obj : obj.track;\n    var events    = isBrowser ? obj.events.browser : obj.browser.events.tracks;\n    var debug     = (isBrowser ? 'Genoverse' : obj.id || obj.name || 'Track') + '.' + key;\n\n    obj.functions[key] = obj[key];\n\n    obj[key] = function () {\n      var args = [].slice.call(arguments);\n      var rtn;\n\n      // Debugging functionality\n      // Enabled by \"debug\": true || { functionName: true, ...} option\n      if (obj.debug === true) {                                     // if \"debug\": true, simply log function call\n        console.log(debug);\n      } else if (typeof obj.debug === 'object' && obj.debug[key]) { // if debug: { functionName: true, ...}, log function time\n        console.time('time: ' + debug);\n      }\n\n      function trigger(when) {\n        var once  = events[when + func + '.once'] || [];\n        var funcs = (events[when + func] || []).concat(once, typeof mainObj[when + func] === 'function' ? mainObj[when + func] : []);\n\n        if (once.length) {\n          delete events[when + func + '.once'];\n        }\n\n        for (var i = 0; i < funcs.length; i++) {\n          funcs[i].apply(this, args);\n        }\n      }\n\n      trigger.call(this, 'before');\n      rtn = this.functions[key].apply(this, args);\n      trigger.call(this, 'after');\n\n      if (typeof obj.debug === 'object' && obj.debug[key]) {\n        console.timeEnd('time: ' + debug);\n      }\n\n      return rtn;\n    };\n  }\n});\n\nGenoverse.id = 0;\nGenoverse.prototype.origin = ($('script[src]:last').attr('src').match(/(.*)js\\/\\w+/) || [])[1];\n\n$(function () {\n  if (!$('link[href=\"' + Genoverse.prototype.origin + 'css/genoverse.css\"]').length) {\n    $('<link href=\"' + Genoverse.prototype.origin + 'css/genoverse.css\" rel=\"stylesheet\">').appendTo('body');\n  }\n});\n\nwindow.Genoverse = Genoverse;\n","Genoverse.Track = Base.extend({\n  height     : 12,        // The height of the track_container div\n  margin     : 2,         // The spacing between this track and the next\n  resizable  : true,      // Is the track resizable - can be true, false or 'auto'. Auto means the track will automatically resize to show all features, but the user cannot resize it themselves.\n  border     : true,      // Does the track have a bottom border\n  unsortable : false,     // Is the track unsortable\n  name       : undefined, // The name of the track, which appears in its label\n  autoHeight : undefined, // Does the track automatically resize so that all the features are visible\n  hideEmpty  : undefined, // If the track automatically resizes, should it be hidden when there are no features, or should an empty track still be shown\n\n  constructor: function (config) {\n    if (this.stranded || config.stranded) {\n      this.controller = this.controller || Genoverse.Track.Controller.Stranded;\n      this.model      = this.model      || Genoverse.Track.Model.Stranded;\n    }\n\n    this.setInterface();\n    this.extend(config);\n    this.setDefaults();\n    this.setEvents();\n\n    Genoverse.wrapFunctions(this);\n\n    this.setLengthMap();\n    this.setMVC();\n  },\n\n  setEvents: $.noop,\n\n  setDefaults: function () {\n    this.order             = typeof this.order !== 'undefined' ? this.order : this.index;\n    this.defaultHeight     = this.height;\n    this.defaultAutoHeight = this.autoHeight;\n    this.autoHeight        = typeof this.autoHeight !== 'undefined' ? this.autoHeight : this.browser.trackAutoHeight;\n    this.hideEmpty         = typeof this.hideEmpty  !== 'undefined' ? this.hideEmpty  : this.browser.hideEmptyTracks;\n    this.height           += this.margin;\n    this.initialHeight     = this.height;\n\n    if (this.resizable === 'auto') {\n      this.autoHeight = true;\n    }\n  },\n\n  setInterface: function () {\n    var mvc = [ 'Controller', 'Model', 'View', 'controller', 'model', 'view' ];\n    var prop;\n\n    this._interface = {};\n\n    for (var i = 0; i < 3; i++) {\n      for (prop in Genoverse.Track[mvc[i]].prototype) {\n        if (!/^(constructor|init)$/.test(prop)) {\n          this._interface[prop] = mvc[i + 3];\n        }\n      }\n    }\n  },\n\n  setMVC: function () {\n    // FIXME: if you zoom out quickly then hit the back button, the second zoom level (first one you zoomed out to) will not draw if the models/views are the same\n    if (this.model && typeof this.model.abort === 'function') { // TODO: don't abort unless model is changed?\n      this.model.abort();\n    }\n\n    var lengthSettings = this.getSettingsForLength();\n    var settings       = $.extend(true, {}, this.constructor.prototype, lengthSettings[1]); // model, view, options\n    var mvc            = [ 'model', 'view', 'controller' ];\n    var mvcSettings    = {};\n    var trackSettings  = {};\n    var obj, j;\n\n    settings.controller = settings.controller || this.controller || Genoverse.Track.Controller;\n    settings.model      = this.models[lengthSettings[0]] || settings.model || this.model || Genoverse.Track.Model;\n    settings.view       = this.views[lengthSettings[0]]  || settings.view  || this.view  || Genoverse.Track.View;\n\n    for (var i = 0; i < 3; i++) {\n      mvcSettings[mvc[i]] = { prop: {}, func: {} };\n    }\n\n    for (i in settings) {\n      if (!/^(constructor|init|reset|setDefaults|base|extend|lengthMap)$/.test(i) && isNaN(i)) {\n        if (this._interface[i]) {\n          mvcSettings[this._interface[i]][typeof settings[i] === 'function' ? 'func' : 'prop'][i] = settings[i];\n        } else if (!Genoverse.Track.prototype.hasOwnProperty(i) && !/^(controller|model|view)$/.test(i)) {\n          trackSettings[i] = settings[i];\n        }\n      }\n    }\n\n    this.extend(trackSettings);\n\n    for (i = 0; i < 3; i++) {\n      obj = mvc[i];\n\n      if (obj === 'controller') {\n        continue;\n      }\n\n      if (typeof settings[obj] === 'function' && (!this[obj] || this[obj].constructor.ancestor !== settings[obj])) {\n        // Make a new instance of model/view if there isn't one already, or the model/view in lengthSettings is different from the existing model/view\n        this[obj] = this.newMVC(settings[obj], mvcSettings[obj].func, mvcSettings[obj].prop);\n      } else {\n        // Update the model/view with the values in mvcSettings.\n        var test = typeof settings[obj] === 'object' && this[obj] !== settings[obj] ? this[obj] = settings[obj] : this[obj + 's'][lengthSettings[0]] && this.lengthMap.length > 1 ? this[obj + 's'][lengthSettings[0]] : false;\n\n        if (test) {\n          for (j in mvcSettings[obj].prop) {\n            if (typeof test[j] !== 'undefined') {\n              this[obj][j] = mvcSettings[obj].prop[j];\n            }\n          }\n\n          this[obj].constructor.extend(mvcSettings[obj].func);\n\n          if (obj === 'model' && typeof test.url !== 'undefined') {\n            this.model.setURL(); // make sure the URL is correct\n          }\n        }\n      }\n    }\n\n    if (!this.controller || typeof this.controller === 'function') {\n      this.controller = this.newMVC(settings.controller, mvcSettings.controller.func, $.extend(mvcSettings.controller.prop, { model: this.model, view: this.view }));\n    } else {\n      $.extend(this.controller, { model: this.model, view: this.view, threshold: mvcSettings.controller.prop.threshold || this.controller.constructor.prototype.threshold });\n    }\n\n    if (this.strand === -1 && this.orderReverse) {\n      this.order = this.orderReverse;\n    }\n\n    if (lengthSettings[1]) {\n      this.models[lengthSettings[0]] = this.model;\n      this.views[lengthSettings[0]]  = this.view;\n    }\n  },\n\n  newMVC: function (object, functions, properties) {\n    return new (object.extend(\n      $.extend(true, {}, object.prototype, functions, {\n        prop: $.proxy(this.prop, this)\n      })\n    ))(\n      $.extend(properties, {\n        browser : this.browser,\n        width   : this.width,\n        index   : this.index,\n        track   : this\n      })\n    );\n  },\n\n  setLengthMap: function () {\n    var value, j, deepCopy;\n\n    this.lengthMap = [];\n    this.models    = {};\n    this.views     = {};\n\n    for (var key in this) { // Find all scale-map like keys\n      if (!isNaN(key)) {\n        key   = parseInt(key, 10);\n        value = this[key];\n        delete this[key];\n        this.lengthMap.push([ key, value === false ? { threshold: key, resizable: 'auto', featureHeight: 0, model: Genoverse.Track.Model, view: Genoverse.Track.View } : value ]);\n      }\n    }\n\n    if (this.lengthMap.length) {\n      this.lengthMap.push([ -1, $.extend(true, {}, this, { view: this.view || Genoverse.Track.View, model: this.model || Genoverse.Track.Model }) ]);\n      this.lengthMap = this.lengthMap.sort(function (a, b) { return b[0] - a[0]; });\n    }\n\n    for (var i = 0; i < this.lengthMap.length; i++) {\n      if (this.lengthMap[i][1].model && this.lengthMap[i][1].view) {\n        continue;\n      }\n\n      deepCopy = {};\n\n      if (this.lengthMap[i][0] !== -1) {\n        for (j in this.lengthMap[i][1]) {\n          if (this._interface[j]) {\n            deepCopy[this._interface[j]] = true;\n          }\n        }\n      }\n\n      for (j = i + 1; j < this.lengthMap.length; j++) {\n        if (!this.lengthMap[i][1].model && this.lengthMap[j][1].model) {\n          this.lengthMap[i][1].model = deepCopy.model ? Genoverse.Track.Model.extend($.extend(true, {}, this.lengthMap[j][1].model.prototype)) : this.lengthMap[j][1].model;\n        }\n\n        if (!this.lengthMap[i][1].view && this.lengthMap[j][1].view) {\n          this.lengthMap[i][1].view = deepCopy.view ? Genoverse.Track.View.extend($.extend(true, {}, this.lengthMap[j][1].view.prototype)) : this.lengthMap[j][1].view;\n        }\n\n        if (this.lengthMap[i][1].model && this.lengthMap[i][1].view) {\n          break;\n        }\n      }\n    }\n  },\n\n  getSettingsForLength: function () {\n    for (var i = 0; i < this.lengthMap.length; i++) {\n      if (this.browser.length > this.lengthMap[i][0] || this.browser.length === 1 && this.lengthMap[i][0] === 1) {\n        return this.lengthMap[i];\n      }\n    }\n\n    return [];\n  },\n\n  prop: function (key, value) {\n    var mvc = [ 'controller', 'model', 'view' ];\n    var obj;\n\n    if (this._interface[key]) {\n      obj = this[this._interface[key]];\n    } else {\n      for (var i = 0; i < 3; i++) {\n        if (this[mvc[i]] && typeof this[mvc[i]][key] !== 'undefined') {\n          obj = this[mvc[i]];\n          break;\n        }\n      }\n\n      obj = obj || this;\n    }\n\n\n    if (typeof value !== 'undefined') {\n      if (value === null) {\n        delete obj[key];\n      } else {\n        obj[key] = value;\n      }\n    }\n\n    return obj ? obj[key] : undefined;\n  },\n\n  setHeight: function (height, forceShow) {\n    if (this.disabled || (forceShow !== true && height < this.prop('featureHeight')) || (this.prop('threshold') && !this.prop('thresholdMessage') && this.browser.length > this.prop('threshold'))) {\n      height = 0;\n    } else {\n      height = Math.max(height, this.prop('minLabelHeight'));\n    }\n\n    this.height = height;\n\n    return height;\n  },\n\n  resetHeight: function () {\n    if (this.resizable === true) {\n      var resizer = this.prop('resizer');\n\n      this.autoHeight = !!([ this.defaultAutoHeight, this.browser.trackAutoHeight ].sort(function (a, b) {\n        return (typeof a !== 'undefined' && a !== null ? 0 : 1) - (typeof b !== 'undefined' && b !== null ?  0 : 1);\n      })[0]);\n\n      this.controller.resize(this.autoHeight ? this.prop('fullVisibleHeight') : this.defaultHeight + this.margin + (resizer ? resizer.height() : 0));\n      this.initialHeight = this.height;\n    }\n  },\n\n  enable: function () {\n    if (this.disabled === true) {\n      this.disabled = false;\n      this.controller.resize(this.initialHeight);\n      this.reset();\n    }\n  },\n\n  disable: function () {\n    if (!this.disabled) {\n      this.disabled = true;\n      this.controller.resize(0);\n    }\n  },\n\n  reset: function () {\n    if (this.prop('url') !== false) {\n      this.model.init(true);\n    }\n\n    this.view.init();\n    this.setLengthMap();\n    this.controller.reset();\n  },\n\n  remove: function () {\n    this.browser.removeTrack(this);\n  },\n\n  destructor: function () {\n    this.controller.destroy();\n\n    var objs = [ this.view, this.model, this.controller, this ];\n\n    for (var obj in objs) {\n      for (var key in obj) {\n        delete obj[key];\n      }\n    }\n  }\n});","Genoverse.Track.Controller = Base.extend({\n  scrollBuffer : 1.2,       // Number of widths, if left or right closer to the edges of viewpoint than the buffer, start making more images\n  threshold    : Infinity,  // Length above which the track is not drawn\n  messages     : undefined,\n\n  constructor: function (properties) {\n    $.extend(this, properties);\n    Genoverse.wrapFunctions(this);\n    this.init();\n  },\n\n  init: function () {\n    this.setDefaults();\n    this.addDomElements();\n    this.addUserEventHandlers();\n  },\n\n  setDefaults: function () {\n    this.imgRange    = {};\n    this.scrollRange = {};\n    this.messages    = this.messages || {\n      error     : 'ERROR: ',\n      threshold : 'Data for this track is not displayed in regions greater than ',\n      resize    : 'Some features are currently hidden, <a class=\"gv-resize\">resize to see all</a>'\n    };\n  },\n\n  reset: function () {\n    this.setDefaults();\n    this.resetImages();\n    this.browser.closeMenus(this);\n    this.setScale();\n    this.makeFirstImage();\n  },\n\n  resetImages: function () {\n    this.scrollContainer.empty();\n    this.resetImageRanges();\n  },\n\n  resetImageRanges: function () {\n    this.left        = 0;\n    this.scrollStart = 'ss-' + this.browser.start + '-' + this.browser.end;\n\n    this.imgRange[this.scrollStart]    = this.imgRange[this.scrollStart]    || { left: this.width * -2, right: this.width * 2 };\n    this.scrollRange[this.scrollStart] = this.scrollRange[this.scrollStart] || { start: this.browser.start - this.browser.length, end: this.browser.end + this.browser.length };\n  },\n\n  setName: function (name) {\n    this.track.name = name;\n    this.labelName  = this.labelName || $('<span class=\"gv-name\">').appendTo(this.label);\n\n    this.labelName.attr('title', name).html(name);\n\n    this.minLabelHeight = Math.max(this.labelName.outerHeight(true), this.labelName.outerHeight());\n\n    if (this.minLabelHeight) {\n      this.label.height(this.prop('disabled') ? 0 : Math.max(this.prop('height'), this.minLabelHeight));\n    }\n  },\n\n  addDomElements: function () {\n    var name = this.track.name || '';\n\n    this.menus            = $();\n    this.container        = $('<div class=\"gv-track-container\">').appendTo(this.browser.wrapper);\n    this.scrollContainer  = $('<div class=\"gv-scroll-container\">').appendTo(this.container);\n    this.imgContainer     = $('<div class=\"gv-image-container\">').width(this.width);\n    this.messageContainer = $('<div class=\"gv-message-container\"><div class=\"gv-messages\"></div><span class=\"gv-control gv-collapse\">&laquo;</span><span class=\"gv-control gv-expand\">&raquo;</span></div>').appendTo(this.container);\n    this.label            = $('<li>').appendTo(this.browser.labelContainer).height(this.prop('height')).data('track', this.track);\n    this.context          = $('<canvas>')[0].getContext('2d');\n\n    if (this.prop('border')) {\n      $('<div class=\"gv-track-border\">').appendTo(this.container);\n    }\n\n    if (this.prop('unsortable')) {\n      this.label.addClass('gv-unsortable');\n    } else {\n      $('<div class=\"gv-handle\">').appendTo(this.label);\n    }\n\n    this.setName(name);\n\n    this.container.height(this.prop('disabled') ? 0 : Math.max(this.prop('height'), this.minLabelHeight));\n  },\n\n  addUserEventHandlers: function () {\n    var controller = this;\n    var browser    = this.browser;\n\n    this.container.on('mouseup', '.gv-image-container', function (e) {\n      if ((e.which && e.which !== 1) || (typeof browser.dragStart === 'number' && browser.start !== browser.dragStart) || (browser.dragAction === 'select' && browser.selector.outerWidth(true) > 2)) {\n        return; // Only show menus on left click when not dragging and not selecting\n      }\n\n      controller.click(e);\n    });\n\n    this.messageContainer.children().on('click', function () {\n      var collapsed = controller.messageContainer.children('.gv-messages').is(':visible') ? ' gv-collapsed' : '';\n      var code      = controller.messageContainer.find('.gv-msg')[0].className.replace('gv-msg', '').replace(' ', '');\n\n      controller.messageContainer.attr('class', 'gv-message-container' + collapsed);\n      controller.checkHeight();\n\n      if (code !== 'error') {\n        document.cookie = [ 'gv_msg', code, controller.prop('id') ].join('_') + '=1; expires=' + (collapsed ? 'Tue, 19 Jan 2038' : 'Thu, 01 Jan 1970') + ' 00:00:00 GMT; path=/';\n      }\n    });\n  },\n\n  click: function (e) {\n    var target = $(e.target);\n    var x      = e.pageX - this.container.parent().offset().left + this.browser.scaledStart;\n    var y      = e.pageY - target.offset().top;\n\n    if (this.imgContainer.hasClass('gv-flip')) {\n      y = target.height() - y;\n    }\n\n    var f = this[e.target.className === 'gv-labels' ? 'labelPositions' : 'featurePositions'].search({ x: x, y: y, w: 1, h: 1 }).sort(function (a, b) { return a.sort - b.sort; })[0];\n\n    if (f) {\n      this.browser.makeMenu(f, e, this.track);\n    }\n  },\n\n  // FIXME: messages are now hidden/shown instead of removed/added. This will cause a problem if a new message arrives with the same code as one that already exists.\n  showMessage: function (code, additionalText) {\n    var messages = this.messageContainer.children('.gv-messages');\n\n    if (!messages.children('.gv-' + code).show().length) {\n      var msg = $('<div class=\"gv-msg gv-' + code + '\">' + this.messages[code] + (additionalText || '') + '</div>').prependTo(messages);\n\n      if (code === 'resize') {\n        msg.children('a.gv-resize').on('click', $.proxy(function () {\n          this.resize(this.fullVisibleHeight);\n        }, this));\n      }\n\n      this.messageContainer[document.cookie.match([ 'gv_msg', code, this.prop('id') ].join('_') + '=1') ? 'addClass' : 'removeClass']('gv-collapsed');\n    }\n\n    var height = this.messageContainer.show().outerHeight(true);\n\n    if (height > this.prop('height')) {\n      this.resize(height);\n    }\n\n    messages = null;\n  },\n\n  hideMessage: function (code) {\n    var messages = this.messageContainer.find('.gv-msg');\n\n    if (code) {\n      messages = messages.filter('.gv-' + code).hide();\n\n      if (messages.length && !messages.siblings().filter(function () { return this.style.display !== 'none'; }).length) {\n        this.messageContainer.hide();\n      }\n    } else {\n      messages.hide();\n      this.messageContainer.hide();\n    }\n\n    messages = null;\n  },\n\n  showError: function (error) {\n    this.showMessage('error', error);\n  },\n\n  checkHeight: function () {\n    if (this.browser.length > this.threshold) {\n      if (this.thresholdMessage) {\n        this.showMessage('threshold', this.thresholdMessage);\n        this.fullVisibleHeight = Math.max(this.messageContainer.outerHeight(true), this.minLabelHeight);\n      } else {\n        this.fullVisibleHeight = 0;\n      }\n    } else if (this.thresholdMessage) {\n      this.hideMessage('threshold');\n    }\n\n    if (!this.prop('resizable')) {\n      return;\n    }\n\n    var autoHeight;\n\n    if (this.browser.length > this.threshold) {\n      autoHeight = this.prop('autoHeight');\n      this.prop('autoHeight', true);\n    } else {\n      var bounds    = { x: this.browser.scaledStart, w: this.width, y: 0, h: 9e99 };\n      var scale     = this.scale;\n      var features  = this.featurePositions.search(bounds);\n      var minHeight = this.prop('hideEmpty') ? 0 : this.minLabelHeight;\n      var height    = Math.max.apply(Math, $.map(features, function (feature) { return feature.position[scale].bottom; }).concat(minHeight));\n\n      if (this.prop('labels') === 'separate') {\n        this.labelTop = height;\n        height += Math.max.apply(Math, $.map(this.labelPositions.search(bounds).concat(this.prop('repeatLabels') ? features : []), function (feature) { return feature.position[scale].label.bottom; }).concat(minHeight));\n      }\n\n      this.fullVisibleHeight = height || (this.messageContainer.is(':visible') ? this.messageContainer.outerHeight(true) : minHeight);\n    }\n\n    this.autoResize();\n\n    if (typeof autoHeight !== 'undefined') {\n      this.prop('autoHeight', autoHeight);\n    }\n  },\n\n  autoResize: function () {\n    var autoHeight = this.prop('autoHeight');\n\n    if (autoHeight || this.prop('labels') === 'separate') {\n      this.resize(autoHeight ? this.fullVisibleHeight : this.prop('height'), this.labelTop, false);\n    } else {\n      this.toggleExpander();\n    }\n  },\n\n  resize: function (height, arg, saveConfig) {\n    height = this.track.setHeight(height, arg);\n\n    if (typeof arg === 'number') {\n      this.imgContainers.children('.gv-labels').css('top', arg);\n    }\n\n    this.container.add(this.label).height(height)[height ? 'show' : 'hide']();\n    this.toggleExpander();\n\n    if (saveConfig !== false) {\n      this.browser.saveConfig();\n    }\n  },\n\n  toggleExpander: function () {\n    if (this.prop('resizable') !== true) {\n      return;\n    }\n\n    var featureMargin = this.prop('featureMargin');\n    var height        = this.prop('height');\n\n    // Note: fullVisibleHeight - featureMargin.top - featureMargin.bottom is not actually the correct value to test against, but it's the easiest best guess to obtain.\n    // fullVisibleHeight is the maximum bottom position of the track's features in the region, which includes margin at the bottom of each feature and label\n    // Therefore fullVisibleHeight includes this margin for the bottom-most feature.\n    // The correct value (for a track using the default positionFeatures code) is:\n    // fullVisibleHeight - ([there are labels in this region] ? (labels === 'separate' ? 0 : featureMargin.bottom + 1) + 2 : featureMargin.bottom)\n    if (this.fullVisibleHeight - featureMargin.top - featureMargin.bottom > height && !this.prop('disabled')) {\n      this.showMessage('resize');\n\n      var controller = this;\n      var h          = this.messageContainer.outerHeight(true);\n\n      if (h > height) {\n        this.resize(h);\n      }\n\n      this.expander = (this.expander || $('<div class=\"gv-expander gv-static\">').width(this.width).appendTo(this.container).on('click', function () {\n        controller.resize(controller.fullVisibleHeight);\n      }))[this.prop('height') === 0 ? 'hide' : 'show']();\n    } else if (this.expander) {\n      this.hideMessage('resize');\n      this.expander.hide();\n    }\n  },\n\n  setWidth: function (width) {\n    var track = this.track;\n\n    $.each([ this, track, track.model, track.view ], function () {\n      this.width = width;\n    });\n\n    this.imgContainer.add(this.expander).width(width);\n\n  },\n\n  setScale: function () {\n    var controller = this;\n\n    this.scale = this.browser.scale;\n\n    this.track.setMVC();\n    this.resetImageRanges();\n\n    var labels = this.prop('labels');\n\n    if (labels && labels !== 'overlay') {\n      this.model.setLabelBuffer(this.browser.labelBuffer);\n    }\n\n    if (this.threshold !== Infinity && this.prop('resizable') !== 'auto') {\n      this.thresholdMessage = this.view.formatLabel(this.threshold);\n    }\n\n    $.each(this.view.setScaleSettings(this.scale), function (k, v) { controller[k] = v; });\n\n    this.hideMessage();\n  },\n\n  move: function (delta) {\n    this.left += delta;\n    this.scrollContainer.css('left', this.left);\n\n    var scrollStart = this.scrollStart;\n\n    if (this.imgRange[scrollStart].left + this.left > -this.scrollBuffer * this.width) {\n      var end = this.scrollRange[scrollStart].start - 1;\n\n      this.makeImage({\n        scale : this.scale,\n        start : end - this.browser.length + 1,\n        end   : end,\n        left  : this.imgRange[scrollStart].left,\n        cls   : scrollStart\n      });\n\n      this.imgRange[scrollStart].left     -= this.width;\n      this.scrollRange[scrollStart].start -= this.browser.length;\n    }\n\n    if (this.imgRange[scrollStart].right + this.left < this.scrollBuffer * this.width) {\n      var start = this.scrollRange[scrollStart].end + 1;\n\n      this.makeImage({\n        scale : this.scale,\n        start : start,\n        end   : start + this.browser.length - 1,\n        left  : this.imgRange[scrollStart].right,\n        cls   : scrollStart\n      });\n\n      this.imgRange[scrollStart].right  += this.width;\n      this.scrollRange[scrollStart].end += this.browser.length;\n    }\n  },\n\n  moveTo: function (start, end, delta) {\n    var scrollRange = this.scrollRange[this.scrollStart];\n    var scrollStart = 'ss-' + start + '-' + end;\n\n    if (this.scrollRange[scrollStart] || start > scrollRange.end || end < scrollRange.start) {\n      this.resetImageRanges();\n      this.makeFirstImage(scrollStart);\n    } else {\n      this.move(typeof delta === 'number' ? delta : (start - this.browser.start) * this.scale);\n      this.checkHeight();\n    }\n  },\n\n  makeImage: function (params) {\n    params.scaledStart   = params.scaledStart   || params.start * params.scale;\n    params.width         = params.width         || this.width;\n    params.height        = params.height        || this.prop('height');\n    params.featureHeight = params.featureHeight || 0;\n    params.labelHeight   = params.labelHeight   || 0;\n\n    var deferred;\n    var controller = this;\n    var tooLarge   = this.browser.length > this.threshold;\n    var div        = this.imgContainer.clone().addClass((params.cls + ' gv-loading').replace('.', '_')).css({ left: params.left, display: params.cls === this.scrollStart ? 'block' : 'none' });\n    var bgImage    = params.background ? $('<img class=\"gv-bg\">').hide().addClass(params.background).data(params).prependTo(div) : false;\n    var image      = $('<img class=\"gv-data\">').hide().data(params).appendTo(div).on('load', function () {\n      $(this).fadeIn('fast').parent().removeClass('gv-loading');\n      $(this).siblings('.gv-bg').show();\n    });\n\n    params.container = div;\n\n    this.imgContainers.push(div[0]);\n    this.scrollContainer.append(this.imgContainers);\n\n    if (!tooLarge && !this.model.checkDataRange(params.start, params.end)) {\n      var buffer = this.prop('dataBuffer');\n\n      params.start -= buffer.start;\n      params.end   += buffer.end;\n      deferred      = this.model.getData(params.start, params.end);\n    }\n\n    if (!deferred) {\n      deferred = $.Deferred();\n      setTimeout($.proxy(deferred.resolve, this), 1); // This defer makes scrolling A LOT smoother, pushing render call to the end of the exec queue\n    }\n\n    return deferred.done(function () {\n      var features = tooLarge ? [] : controller.model.findFeatures(params.start, params.end);\n      controller.render(features, image);\n\n      if (bgImage) {\n        controller.renderBackground(features, bgImage);\n      }\n    }).fail(function (e) {\n      controller.showError(e);\n    });\n  },\n\n  makeFirstImage: function (moveTo) {\n    if (this.scrollContainer.children().hide().filter('.' + (moveTo || this.scrollStart)).show().length) {\n      this.scrollContainer.css('left', 0);\n\n      return this.checkHeight();\n    }\n\n    var controller = this;\n    var start      = this.browser.start;\n    var end        = this.browser.end;\n    var length     = this.browser.length;\n    var scale      = this.scale;\n    var cls        = this.scrollStart;\n    var images     = [{ start: start, end: end, scale: scale, cls: cls, left: 0 }];\n    var left       = 0;\n    var width      = this.width;\n\n    if (!this.browser.isStatic) {\n      if (start > 1) {\n        images.push({ start: start - length, end: start - 1, scale: scale, cls: cls, left: -this.width });\n        left   = -this.width;\n        width += this.width;\n      }\n\n      if (end < this.browser.chromosomeSize) {\n        images.push({ start: end + 1, end: end + length, scale: scale, cls: cls, left: this.width });\n        width += this.width;\n      }\n    }\n\n    var loading = this.imgContainer.clone().addClass('gv-loading').css({ left: left, width: width }).prependTo(this.scrollContainer.css('left', 0));\n\n    function makeImages() {\n      for (var i = 0; i < images.length; i++) {\n        controller.makeImage(images[i]);\n      }\n\n      loading.remove();\n    }\n\n    // FIXME: on zoom out, making more than 1 request\n    if (length > this.threshold || this.model.checkDataRange(start, end)) {\n      makeImages();\n    } else {\n      var buffer = this.prop('dataBuffer');\n\n      this.model.getData(start - buffer.start - length, end + buffer.end + length).done(makeImages).fail(function (e) {\n        controller.showError(e);\n      });\n    }\n  },\n\n  render: function (features, img) {\n    var params         = img.data();\n        features       = this.view.positionFeatures(this.view.scaleFeatures(features, params.scale), params); // positionFeatures alters params.featureHeight, so this must happen before the canvases are created\n    var featureCanvas  = $('<canvas>').attr({ width: params.width, height: params.featureHeight || 1 });\n    var labelCanvas    = this.prop('labels') === 'separate' && params.labelHeight ? featureCanvas.clone().attr('height', params.labelHeight) : featureCanvas;\n    var featureContext = featureCanvas[0].getContext('2d');\n    var labelContext   = labelCanvas[0].getContext('2d');\n\n    featureContext.font = labelContext.font = this.prop('font');\n\n    switch (this.prop('labels')) {\n      case false     : break;\n      case 'overlay' : labelContext.textAlign = 'center'; labelContext.textBaseline = 'middle'; break;\n      default        : labelContext.textAlign = 'left';   labelContext.textBaseline = 'top';    break;\n    }\n\n    this.view.draw(features, featureContext, labelContext, params.scale);\n\n    img.attr('src', featureCanvas[0].toDataURL());\n\n    if (labelContext !== featureContext) {\n      img.clone(true).attr({ 'class': 'gv-labels', src: labelCanvas[0].toDataURL() }).insertAfter(img);\n    }\n\n    this.checkHeight();\n\n    featureCanvas = labelCanvas = img = null;\n  },\n\n  renderBackground: function (features, img, height) {\n    var canvas = $('<canvas>').attr({ width: this.width, height: height || 1 })[0];\n    this.view.drawBackground(features, canvas.getContext('2d'), img.data());\n    img.attr('src', canvas.toDataURL());\n    canvas = img = null;\n  },\n\n  populateMenu: function (feature) {\n    var f    = $.extend(true, {}, feature);\n    var menu = {\n      title    : f.label ? f.label[0] : f.id,\n      Location : this.browser.chr + ':' + f.start + '-' + f.end\n    };\n\n    delete f.start;\n    delete f.end;\n    delete f.sort;\n\n    for (var i in f) {\n      if (typeof f[i] === 'object' || menu.title === f[i]) {\n        delete f[i];\n      }\n    }\n\n    return $.extend(menu, f);\n  },\n\n  destroy: function () {\n    this.container.add(this.label).add(this.menus).remove();\n  }\n});\n","Genoverse.Track.Model = Base.extend({\n  dataType   : 'json',\n  allData    : false,\n  dataBuffer : undefined, // e.g. { start: 0, end: 0 } - basepairs to extend data region for, when getting data from the origin\n  xhrFields  : undefined,\n  url        : undefined,\n  urlParams  : undefined, // hash of URL params\n\n  constructor: function (properties) {\n    $.extend(this, properties);\n    Genoverse.wrapFunctions(this);\n    this.init();\n  },\n\n  init: function (reset) {\n    this.setDefaults(reset);\n\n    if (reset) {\n      for (var i in this.featuresById) {\n        delete this.featuresById[i].position;\n      }\n    } else {\n      this.dataRanges   = new RTree();\n      this.features     = new RTree();\n      this.featuresById = {};\n    }\n\n    this.dataLoading = []; // tracks incomplete requests for data\n  },\n\n  setDefaults: function (reset) {\n    this.dataBuffer = this.dataBuffer || { start: 0, end: 0 }; // basepairs to extend data region for, when getting data from the origin\n    this.urlParams  = this.urlParams  || {};                   // hash of URL params\n    this.xhrFields  = this.xhrFields  || {};\n\n    if (!this._url) {\n      this._url = this.url; // Remember original url\n    }\n\n    if (this.url || (this._url && reset)) {\n      this.setURL(undefined, reset);\n    }\n  },\n\n  setURL: function (urlParams, update) {\n    urlParams = urlParams || this.urlParams;\n\n    if (update && this._url) {\n      this.url = this._url;\n    }\n\n    this.url += (this.url.indexOf('?') === -1 ? '?' : '&') + decodeURIComponent($.param(urlParams, true));\n    this.url  = this.url.replace(/[&?]$/, '');\n  },\n\n  parseURL: function (start, end, url) {\n    if (this.allData) {\n      start = 1;\n      end   = this.browser.chromosomeSize;\n    }\n\n    return (url || this.url).replace(/__CHR__/, this.browser.chr).replace(/__START__/, start).replace(/__END__/, end);\n  },\n\n  setLabelBuffer: function (buffer) {\n    this.dataBuffer.start = Math.max(this.dataBuffer.start, buffer);\n  },\n\n  getData: function (start, end, done) {\n    start = Math.max(1, start);\n    end   = Math.min(this.browser.chromosomeSize, end);\n\n    var model    = this;\n    var deferred = $.Deferred();\n    var bins     = [];\n    var length   = end - start + 1;\n\n    if (!this.url) {\n      return deferred.resolveWith(this);\n    }\n\n    if (this.dataRequestLimit && length > this.dataRequestLimit) {\n      var i = Math.ceil(length / this.dataRequestLimit);\n\n      while (i--) {\n        bins.push([ start, i ? start += this.dataRequestLimit - 1 : end ]);\n        start++;\n      }\n    } else {\n      bins.push([ start, end ]);\n    }\n\n    $.when.apply($, $.map(bins, function (bin) {\n      var request = $.ajax({\n        url       : model.parseURL(bin[0], bin[1]),\n        dataType  : model.dataType,\n        context   : model,\n        xhrFields : model.xhrFields,\n        success   : function (data) { this.receiveData(data, bin[0], bin[1]); },\n        error     : function (xhr, statusText) { this.track.controller.showError(statusText + ' while getting the data, see console for more details', arguments); },\n        complete  : function (xhr) { this.dataLoading = $.grep(this.dataLoading, function (t) { return xhr !== t; }); }\n      });\n\n      request.coords = [ bin[0], bin[1] ]; // store actual start and end on the request, in case they are needed\n\n      if (typeof done === 'function') {\n        request.done(done);\n      }\n\n      model.dataLoading.push(request);\n\n      return request;\n    })).done(function () { deferred.resolveWith(model); });\n\n    return deferred;\n  },\n\n  receiveData: function (data, start, end) {\n    start = Math.max(start, 1);\n    end   = Math.min(end, this.browser.chromosomeSize);\n\n    this.setDataRange(start, end);\n    this.parseData(data, start, end);\n\n    if (this.allData) {\n      this.url = false;\n    }\n  },\n\n  /**\n  * parseData(data, start, end) - parse raw data from the data source (e.g. online web service)\n  * extract features and insert it into the internal features storage (RTree)\n  *\n  * >> data  - raw data from the data source (e.g. ajax response)\n  * >> start - start location of the data\n  * >> end   - end   location of the data\n  * << nothing\n  *\n  * every feature extracted this routine must construct a hash with at least 3 values:\n  *  {\n  *    id    : [unique feature id, string],\n  *    start : [chromosomal start position, integer],\n  *    end   : [chromosomal end position, integer],\n  *    [other optional key/value pairs]\n  *  }\n  *\n  * and call this.insertFeature(feature)\n  */\n  parseData: function (data, start, end) {\n    // Example of parseData function when data is an array of hashes like { start: ..., end: ... }\n    for (var i = 0; i < data.length; i++) {\n      var feature = data[i];\n\n      feature.sort = start + i;\n\n      this.insertFeature(feature);\n    }\n  },\n\n  setDataRange: function (start, end) {\n    if (this.allData) {\n      start = 1;\n      end   = this.browser.chromosomeSize;\n    }\n\n    this.dataRanges.insert({ x: start, w: end - start + 1, y: 0, h: 1 }, [ start, end ]);\n  },\n\n  checkDataRange: function (start, end) {\n    start = Math.max(1, start);\n    end   = Math.min(this.browser.chromosomeSize, end);\n\n    var ranges = this.dataRanges.search({ x: start, w: end - start + 1, y: 0, h: 1 }).sort(function (a, b) { return a[0] - b[0]; });\n\n    if (!ranges.length) {\n      return false;\n    }\n\n    var s = ranges.length === 1 ? ranges[0][0] : 9e99;\n    var e = ranges.length === 1 ? ranges[0][1] : -9e99;\n\n    for (var i = 0; i < ranges.length - 1; i++) {\n      // s0 <= s1 && ((e0 >= e1) || (e0 + 1 >= s1))\n      if (ranges[i][0] <= ranges[i + 1][0] && ((ranges[i][1] >= ranges[i + 1][1]) || (ranges[i][1] + 1 >= ranges[i + 1][0]))) {\n        s = Math.min(s, ranges[i][0]);\n        e = Math.max(e, ranges[i + 1][1]);\n      } else {\n        return false;\n      }\n    }\n\n    return start >= s && end <= e;\n  },\n\n  insertFeature: function (feature) {\n    // Make sure we have a unique ID, this method is not efficient, so better supply your own id\n    if (!feature.id) {\n      feature.id = feature.ID || this.hashCode(JSON.stringify(feature));\n    }\n\n    if (!this.featuresById[feature.id]) {\n      this.features.insert({ x: feature.start, y: 0, w: feature.end - feature.start + 1, h: 1 }, feature);\n      this.featuresById[feature.id] = feature;\n    }\n  },\n\n  findFeatures: function (start, end) {\n    return this.features.search({ x: start - this.dataBuffer.start, y: 0, w: end - start + this.dataBuffer.start + this.dataBuffer.end + 1, h: 1 }).sort(function (a, b) { return a.sort - b.sort; });\n  },\n\n  abort: function () {\n    for (var i = 0; i < this.dataLoading.length; i++) {\n      this.dataLoading[i].abort();\n    }\n\n    this.dataLoading = [];\n  },\n\n  hashCode: function (string) {\n    var hash = 0;\n    var chr;\n\n    if (!string.length) {\n      return hash;\n    }\n\n    for (var i = 0; i < string.length; i++) {\n      chr  = string.charCodeAt(i);\n      hash = ((hash << 5) - hash) + chr;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n\n    return '' + hash;\n  }\n});\n","Genoverse.Track.View = Base.extend({\n  fontHeight      : 10,\n  fontFamily      : 'sans-serif',\n  fontWeight      : 'normal',\n  fontColor       : '#000000',\n  color           : '#000000',\n  minScaledWidth  : 0.5,\n  widthCorrection : 1, // Pixels to add to the end of a feature when scale > 1 - ensures that 1bp features are always at least 1px wide\n  labels          : true,\n  repeatLabels    : false,\n  bump            : false,\n  depth           : undefined,\n  featureHeight   : undefined, // defaults to track height\n  featureMargin   : undefined, // e.g. { top: 3, right: 1, bottom: 1, left: 0 }\n\n  constructor: function (properties) {\n    $.extend(this, properties);\n    Genoverse.wrapFunctions(this);\n    this.init();\n  },\n\n  // difference between init and constructor: init gets called on reset, if reset is implemented\n  init: function () {\n    this.setDefaults();\n    this.scaleSettings = {};\n  },\n\n  setDefaults: function () {\n    this.featureMargin = this.featureMargin || { top: 3, right: 1, bottom: 1, left: 0 };\n\n    var margin = [ 'Top', 'Right', 'Bottom', 'Left' ];\n\n    for (var i = 0; i < margin.length; i++) {\n      if (typeof this['featureMargin' + margin[i]] === 'number') {\n        this.featureMargin[margin[i].toLowerCase()] = this['featureMargin' + margin[i]];\n      }\n    }\n\n    this.context       = $('<canvas>')[0].getContext('2d');\n    this.featureHeight = typeof this.featureHeight !== 'undefined' ? this.featureHeight : this.prop('defaultHeight');\n    this.font          = this.fontWeight + ' ' + this.fontHeight + 'px ' + this.fontFamily;\n    this.labelUnits    = [ 'bp', 'kb', 'Mb', 'Gb', 'Tb' ];\n\n    if (this.labels && this.labels !== 'overlay' && (this.depth || this.bump === 'labels')) {\n      this.labels = 'separate';\n    }\n  },\n\n  setScaleSettings: function (scale) {\n    var featurePositions, labelPositions;\n\n    if (!this.scaleSettings[scale]) {\n      featurePositions = featurePositions || new RTree();\n\n      this.scaleSettings[scale] = {\n        imgContainers    : $(),\n        featurePositions : featurePositions,\n        labelPositions   : this.labels === 'separate' ? labelPositions || new RTree() : featurePositions\n      };\n    }\n\n    return this.scaleSettings[scale];\n  },\n\n  scaleFeatures: function (features, scale) {\n    var add = Math.max(scale, this.widthCorrection);\n    var feature;\n\n    for (var i = 0; i < features.length; i++) {\n      feature = features[i];\n\n      if (!feature.position) {\n        feature.position = {};\n      }\n\n      if (!feature.position[scale]) {\n        feature.position[scale] = {\n          start  : feature.start * scale,\n          width  : Math.max((feature.end - feature.start) * scale + add, this.minScaledWidth),\n          height : feature.height || this.featureHeight\n        };\n      }\n    }\n\n    return features;\n  },\n\n  positionFeatures: function (features, params) {\n    params.margin = this.prop('margin');\n\n    for (var i = 0; i < features.length; i++) {\n      this.positionFeature(features[i], params);\n    }\n\n    params.width         = Math.ceil(params.width);\n    params.height        = Math.ceil(params.height);\n    params.featureHeight = Math.max(Math.ceil(params.featureHeight), this.prop('resizable') ? Math.max(this.prop('height'), this.prop('minLabelHeight')) : 0);\n    params.labelHeight   = Math.ceil(params.labelHeight);\n\n    return features;\n  },\n\n  positionFeature: function (feature, params) {\n    var scale = params.scale;\n\n    feature.position[scale].X = feature.position[scale].start - params.scaledStart; // FIXME: always have to reposition for X, in case a feature appears in 2 images. Pass scaledStart around instead?\n\n    if (!feature.position[scale].positioned) {\n      feature.position[scale].H = feature.position[scale].height + this.featureMargin.bottom;\n      feature.position[scale].W = feature.position[scale].width + (feature.marginRight || this.featureMargin.right);\n      feature.position[scale].Y = (typeof feature.y === 'number' ? feature.y * feature.position[scale].H : 0) + this.featureMargin.top;\n\n      if (feature.label) {\n        if (typeof feature.label === 'string') {\n          feature.label = feature.label.split('\\n');\n        }\n\n        var context = this.context;\n\n        feature.labelHeight = feature.labelHeight || (this.fontHeight + 2) * feature.label.length;\n        feature.labelWidth  = feature.labelWidth  || Math.max.apply(Math, $.map(feature.label, function (l) { return Math.ceil(context.measureText(l).width); })) + 1;\n\n        if (this.labels === true) {\n          feature.position[scale].H += feature.labelHeight;\n          feature.position[scale].W  = Math.max(feature.labelWidth, feature.position[scale].W);\n        } else if (this.labels === 'separate' && !feature.position[scale].label) {\n          feature.position[scale].label = {\n            x: feature.position[scale].start,\n            y: feature.position[scale].Y,\n            w: feature.labelWidth,\n            h: feature.labelHeight\n          };\n        }\n      }\n\n      var bounds = {\n        x: feature.position[scale].start,\n        y: feature.position[scale].Y,\n        w: feature.position[scale].W,\n        h: feature.position[scale].H + this.featureMargin.top\n      };\n\n      if (this.bump === true) {\n        this.bumpFeature(bounds, feature, scale, this.scaleSettings[scale].featurePositions);\n      }\n\n      this.scaleSettings[scale].featurePositions.insert(bounds, feature);\n\n      feature.position[scale].bottom = feature.position[scale].Y + feature.position[scale].H + params.margin;\n\n      if (feature.position[scale].label) {\n        var f = $.extend(true, {}, feature); // FIXME: hack to avoid changing feature.position[scale].Y in bumpFeature\n\n        this.bumpFeature(feature.position[scale].label, f, scale, this.scaleSettings[scale].labelPositions);\n\n        f.position[scale].label        = feature.position[scale].label;\n        f.position[scale].label.bottom = f.position[scale].label.y + f.position[scale].label.h + params.margin;\n\n        feature = f;\n\n        this.scaleSettings[scale].labelPositions.insert(feature.position[scale].label, feature);\n\n        params.labelHeight = Math.max(params.labelHeight, feature.position[scale].label.bottom);\n      }\n\n      feature.position[scale].positioned = true;\n    }\n\n    params.featureHeight = Math.max(params.featureHeight, feature.position[scale].bottom);\n    params.height        = Math.max(params.height, params.featureHeight + params.labelHeight);\n  },\n\n  bumpFeature: function (bounds, feature, scale, tree) {\n    var depth = 0;\n    var bump;\n\n    do {\n      if (this.depth && ++depth >= this.depth) {\n        if ($.grep(this.scaleSettings[scale].featurePositions.search(bounds), function (f) { return f.position[scale].visible !== false; }).length) {\n          feature.position[scale].visible = false;\n        }\n\n        break;\n      }\n\n      bump = false;\n\n      if ((tree.search(bounds)[0] || feature).id !== feature.id) {\n        bounds.y += bounds.h;\n        bump      = true;\n      }\n    } while (bump);\n\n    feature.position[scale].Y = bounds.y;\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var feature;\n\n    for (var i = 0; i < features.length; i++) {\n      feature = features[i];\n\n      if (feature.position[scale].visible !== false) {\n        // TODO: extend with feature.position[scale], rationalize keys\n        this.drawFeature($.extend({}, feature, {\n          x             : feature.position[scale].X,\n          y             : feature.position[scale].Y,\n          width         : feature.position[scale].width,\n          height        : feature.position[scale].height,\n          labelPosition : feature.position[scale].label\n        }), featureContext, labelContext, scale);\n      }\n    }\n  },\n\n  drawFeature: function (feature, featureContext, labelContext, scale) {\n    if (feature.x < 0 || feature.x + feature.width > this.width) {\n      this.truncateForDrawing(feature);\n    }\n\n    if (feature.color !== false) {\n      if (!feature.color) {\n        this.setFeatureColor(feature);\n      }\n\n      featureContext.fillStyle = feature.color;\n      featureContext.fillRect(feature.x, feature.y, feature.width, feature.height);\n    }\n\n    if (this.labels && feature.label) {\n      this.drawLabel(feature, labelContext, scale);\n    }\n\n    if (feature.borderColor) {\n      featureContext.strokeStyle = feature.borderColor;\n      featureContext.strokeRect(feature.x, feature.y + 0.5, feature.width, feature.height);\n    }\n\n    if (feature.decorations) {\n      this.decorateFeature(feature, featureContext, scale);\n    }\n  },\n\n  drawLabel: function (feature, context, scale) {\n    var original = feature.untruncated;\n    var width    = (original || feature).width;\n\n    if (this.labels === 'overlay' && feature.labelWidth >= Math.floor(width)) {\n      return;\n    }\n\n    if (typeof feature.label === 'string') {\n      feature.label = [ feature.label ];\n    }\n\n    var x       = (original || feature).x;\n    var n       = this.repeatLabels ? Math.ceil((width - Math.max(scale, 1) - (this.labels === 'overlay' ? feature.labelWidth : 0)) / this.width) : 1;\n    var spacing = width / n;\n    var label, start, j, y, h;\n\n    if (this.repeatLabels && scale > 1) {\n      spacing = this.browser.length * scale;\n      n = Math.ceil(width / spacing);\n    }\n\n    if (!feature.labelColor) {\n      this.setLabelColor(feature);\n    }\n\n    context.fillStyle = feature.labelColor;\n\n    if (this.labels === 'overlay') {\n      label = [ feature.label.join(' ') ];\n      y     = feature.y + (feature.height + 1) / 2;\n      h     = 0;\n    } else {\n      label = feature.label;\n      y     = feature.labelPosition ? feature.labelPosition.y : feature.y + feature.height + this.featureMargin.bottom;\n      h     = this.fontHeight + 2;\n    }\n\n    var i      = context.textAlign === 'center' ? 0.5 : 0;\n    var offset = feature.labelWidth * i;\n\n    if (n > 1) {\n      i += Math.max(Math.floor(-(feature.labelWidth + x) / spacing), 0);\n    }\n\n    for (; i < n; i++) {\n      start = x + (i * spacing);\n\n      if (start + feature.labelWidth >= 0) {\n        if (start - offset > this.width) {\n          break;\n        }\n\n        for (j = 0; j < label.length; j++) {\n          context.fillText(label[j], start, y + (j * h));\n        }\n      }\n    }\n  },\n\n  setFeatureColor: function (feature) {\n    feature.color = this.color;\n  },\n\n  setLabelColor: function (feature) {\n    feature.labelColor = feature.color || this.fontColor || this.color;\n  },\n\n  // truncate features - make the features start at 1px outside the canvas to ensure no lines are drawn at the borders incorrectly\n  truncateForDrawing: function (feature) {\n    var start = Math.min(Math.max(feature.x, -1), this.width + 1);\n    var width = feature.x - start + feature.width;\n\n    if (width + start > this.width) {\n      width = this.width - start + 1;\n    }\n\n    feature.untruncated = { x: feature.x, width: feature.width };\n    feature.x           = start;\n    feature.width       = Math.max(width, 0);\n  },\n\n  formatLabel: function (label) {\n    var power = Math.floor((label.toString().length - 1) / 3);\n    var unit  = this.labelUnits[power];\n\n    label /= Math.pow(10, power * 3);\n\n    return Math.floor(label) + (unit === 'bp' ? '' : '.' + (label.toString().split('.')[1] || '').concat('00').substring(0, 2)) + ' ' + unit;\n  },\n\n  drawBackground  : $.noop,\n  decorateFeature : $.noop // decoration for the features\n});\n","Genoverse.Track.Controller.Static = Genoverse.Track.Controller.extend({\n  addDomElements: function () {\n    this.base();\n    \n    this.image = $('<img>').appendTo(this.imgContainer);\n    \n    this.container.toggleClass('gv-track-container gv-track-container-static').prepend(this.imgContainer);\n    this.scrollContainer.add(this.messageContainer).remove();\n  },\n  \n  reset: $.noop,\n  \n  setWidth: function (width) {\n    this.base(width);\n    this.image.width = width;\n  },\n  \n  makeFirstImage: function () {\n    this.base.apply(this, arguments);\n    this.container.css('left', 0);\n    this.imgContainer.show();\n  },\n  \n  makeImage: function (params) {\n    if (this.prop('disabled')) {\n      return $.Deferred().resolve();\n    }\n    \n    var features = this.view.positionFeatures(this.model.findFeatures(params.start, params.end), params);\n    \n    if (features) {\n      var string = JSON.stringify(features);\n      \n      if (this.stringified !== string) {\n        var height = this.prop('height');\n        \n        params.width         = this.width;\n        params.featureHeight = height;\n        \n        this.render(features, this.image.data(params));\n        this.imgContainer.children(':last').show();\n        this.resize(height, undefined, false);\n\n        this.stringified = string;\n      }\n    }\n    \n    return $.Deferred().resolve();\n  }\n});\n\nGenoverse.Track.Model.Static = Genoverse.Track.Model.extend({\n  url            : false,\n  checkDataRange : function () { return true; }\n});\n\nGenoverse.Track.View.Static = Genoverse.Track.View.extend({\n  featureMargin : { top: 0, right: 1, bottom: 0, left: 1 },\n  \n  positionFeature : $.noop,\n  scaleFeatures   : function (features) { return features; },\n  \n  draw: function (features, featureContext, labelContext, scale) {\n    for (var i = 0; i < features.length; i++) {\n      this.drawFeature(features[i], featureContext, labelContext, scale);\n    }\n  }\n});\n\nGenoverse.Track.Static = Genoverse.Track.extend({\n  controls   : 'off',\n  resizable  : false,\n  controller : Genoverse.Track.Controller.Static,\n  model      : Genoverse.Track.Model.Static,\n  view       : Genoverse.Track.View.Static\n});\n","Genoverse.Track.Model.Stranded = Genoverse.Track.Model.extend({\n  init: function (reset) {\n    this.base(reset);\n    \n    if (!reset) {\n      var otherTrack = this.prop('forwardTrack');\n      \n      if (otherTrack) {\n        this.features     = otherTrack.prop('features');\n        this.featuresById = otherTrack.prop('featuresById');\n      }\n    }\n  },\n  \n  setURL: function (urlParams, update) {\n    this.base($.extend(urlParams || this.urlParams, { strand: this.track.featureStrand }), update);\n  },\n  \n  findFeatures: function () {\n    var strand = this.track.featureStrand;\n    return $.grep(this.base.apply(this, arguments), function (feature) { return feature.strand === strand; });\n  }\n});\n","Genoverse.Track.View.Sequence = Genoverse.Track.View.extend({\n  featureMargin : { top: 0, right: 0, bottom: 0, left: 0 },\n  colors        : { 'default': '#CCCCCC', A: '#00986A', T: '#0772A1', G: '#FF8E00', C: '#FFDD73' },\n  labelColors   : { 'default': '#000000', A: '#FFFFFF', T: '#FFFFFF' },\n  \n  constructor: function () {\n    this.base.apply(this, arguments);\n    \n    var lowerCase = this.prop('lowerCase');\n    \n    this.labelWidth   = {};\n    this.widestLabel  = lowerCase ? 'g' : 'G';\n    this.labelYOffset = (this.featureHeight + (lowerCase ? 0 : 1)) / 2;\n    \n    if (lowerCase) {\n      for (var key in this.colors) {\n        this.colors[key.toLowerCase()] = this.colors[key];\n      }\n      \n      for (key in this.labelColors) {\n        this.colors[key.toLowerCase()] = this.colors[key];\n      }      \n    }\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    featureContext.textBaseline = 'middle';\n    featureContext.textAlign    = 'left';\n    \n    if (!this.labelWidth[this.widestLabel]) {\n      this.labelWidth[this.widestLabel] = Math.ceil(this.context.measureText(this.widestLabel).width) + 1;\n    }\n    \n    var width = Math.max(scale, this.minScaledWidth);\n    \n    for (var i = 0; i < features.length; i++) {\n      this.drawSequence(features[i], featureContext, scale, width);\n    }\n  },\n  \n  drawSequence: function (feature, context, scale, width) {\n    var drawLabels = this.labelWidth[this.widestLabel] < width - 1;\n    var start, bp;\n    \n    for (var i = 0; i < feature.sequence.length; i++) {\n      start = feature.position[scale].X + i * scale;\n      \n      if (start < -scale || start > context.canvas.width) {\n        continue;\n      }\n      \n      bp = feature.sequence.charAt(i);\n      \n      context.fillStyle = this.colors[bp] || this.colors['default'];\n      context.fillRect(start, feature.position[scale].Y, width, this.featureHeight);\n      \n      if (!this.labelWidth[bp]) {\n        this.labelWidth[bp] = Math.ceil(context.measureText(bp).width) + 1;\n      }\n      \n      if (drawLabels) {\n        context.fillStyle = this.labelColors[bp] || this.labelColors['default'];\n        context.fillText(bp, start + (width - this.labelWidth[bp]) / 2, feature.position[scale].Y + this.labelYOffset);\n      }\n    }\n  }\n});","Genoverse.Track.Model.Sequence.Fasta = Genoverse.Track.Model.Sequence.extend({\n  url  : 'http://genoverse.org/data/Homo_sapiens.GRCh37.72.dna.chromosome.1.fa', // Example url\n  \n  // Following settings could be left undefined and will be detected automatically via .getStartByte()\n  startByte  : undefined, // Byte in the file where the sequence actually starts\n  lineLength : undefined, // Length of the sequence line in the file\n  \n  // TODO: Check if URL provided\n  \n  getData: function (start, end) {\n    var deferred = $.Deferred();\n    \n    $.when(this.getStartByte()).done(function () {\n      start = start - start % this.chunkSize + 1;\n      end   = end + this.chunkSize - end % this.chunkSize;\n      \n      var startByte = start - 1 + Math.floor((start - 1) / this.lineLength) + this.startByte;\n      var endByte   = end   - 1 + Math.floor((end   - 1) / this.lineLength) + this.startByte;\n      \n      $.ajax({\n        url       : this.parseURL(start, end),\n        dataType  : this.dataType,\n        context   : this,\n        headers   : { 'Range' : 'bytes=' + startByte + '-' + endByte },\n        xhrFields : this.xhrFields,\n        success   : function (data) { this.receiveData(data, start, end); },\n        error     : this.track.controller.showError\n      }).done(function () { deferred.resolveWith(this); }).fail(function () { deferred.rejectWith(this); });\n    }).fail(function () { deferred.rejectWith(this); });\n    \n    return deferred;\n  },\n  \n  getStartByte: function () {\n    if (this.startByteRequest) {\n      return this.startByteRequest;\n    }\n    \n    if (this.startByte === undefined || this.lineLength === undefined) {\n      this.startByteRequest = $.ajax({\n        url       : this.parseURL(),\n        dataType  : 'text',\n        context   : this,\n        headers   : { 'Range': 'bytes=0-300' },\n        xhrFields : this.xhrFields,        \n        success   : function (data) {\n          if (data.indexOf('>') === 0) {\n            this.startByte = data.indexOf('\\n') + 1;\n          } else {\n            this.startByte = 0;\n          }\n          \n          this.lineLength = data.indexOf('\\n', this.startByte) - this.startByte;\n        }\n      });\n      \n      return this.startByteRequest;\n    }\n  }\n});\n","Genoverse.Track.View.SequenceVariation = Genoverse.Track.View.Sequence.extend({\n  featureHeight : 15,\n  featureMargin : { top: 0, right: 0, bottom: 4, left: 0 },\n  bump          : true,\n  showLegend    : false,\n  \n  positionFeature: function (feature, params) {\n    var position = feature.position[params.scale];\n    \n    if (feature.alt_allele) {\n      if (!position.positioned) {\n        position.reference = { end: position.start + feature.ref_allele.length * params.scale };\n      }\n      \n      position.reference.x = position.reference.end - params.scaledStart;\n    }\n    \n    this.base(feature, params);\n  },\n  \n  bumpFeature: function (bounds, feature) {\n    if (feature.alt_allele) {\n      this.base.apply(this, arguments);\n    }\n  },\n  \n  draw: function (features, featureContext, labelContext, scale) {\n    var drawing = { seq: [], snv: [] };\n    \n    for (var i = 0; i < features.length; i++) {\n      drawing[features[i].alt_allele ? 'snv' : 'seq'].push(features[i]);\n    }\n    \n    this.base(drawing.seq, featureContext, labelContext, scale);\n    this.highlightSNVs(drawing.snv, featureContext, scale);\n    this.base(drawing.snv, featureContext, labelContext, scale);\n    this.outlineSNVs(drawing.snv, featureContext, scale); // Redraw the outline for SNVs, since the feature will have been drawn on top of some of the outline created by highlightSNVs\n  },\n  \n  highlightSNVs: function (features, context, scale) {\n    var position, positionX, positionY;\n    \n    for (var i = 0; i < features.length; i++) {\n      position  = features[i].position[scale];\n      positionX = [ position.X, position.reference.x, position.X + position.width ];\n      \n      if (positionX[2] < 0 || positionX[0] > this.width) {\n        continue;\n      }\n      \n      if (positionX[0] < 0 || positionX[2] > this.width) {\n        this.truncateForDrawing(positionX);\n      }\n      \n      positionY = [ 0, position.Y - this.featureMargin.bottom / 2, position.Y, position.Y + this.featureHeight ];\n      \n      if (!features[i].highlightColor) {\n        this.setHighlightColor(features[i]);\n      }\n      \n      context.strokeStyle = context.fillStyle = features[i].highlightColor;\n      context.lineWidth   = 2;\n      \n      context.beginPath();\n      context.moveTo(positionX[0], positionY[0]);\n      context.lineTo(positionX[1], positionY[0]);\n      context.lineTo(positionX[1], positionY[1]);\n      context.lineTo(positionX[2], positionY[2]);\n      context.lineTo(positionX[2], positionY[3]);\n      context.lineTo(positionX[0], positionY[3]);\n      context.closePath();\n      context.stroke();\n      \n      context.lineWidth   = 1;\n      context.globalAlpha = 0.5;\n      \n      context.fill();\n      \n      context.globalAlpha = 1;\n    }\n  },\n  \n  outlineSNVs: function (features, context, scale) {\n    var position, positionX, positionY;\n    \n    for (var i = 0; i < features.length; i++) {\n      position  = features[i].position[scale];\n      positionX = [ position.X, position.X + position.width ];\n      positionY = [ position.Y, position.Y + this.featureHeight ];\n      \n      context.strokeStyle = features[i].highlightColor;\n      \n      context.lineWidth = 2;\n      \n      context.beginPath();\n      context.moveTo(positionX[1], positionY[0]);\n      context.lineTo(positionX[1], positionY[1]);\n      context.lineTo(positionX[0], positionY[1]);\n      context.lineTo(positionX[0], positionY[0]);\n      context.stroke();\n      \n      context.lineWidth = 1;\n    }\n  },\n  \n  truncateForDrawing: function (positionX) {\n    for (var i in positionX) {\n      positionX[i] = Math.min(Math.max(positionX[i], -1), this.width + 1);\n    }\n  },\n  \n  setHighlightColor: function (feature) {\n    feature.highlightColor = feature.alt_allele === '.' || feature.alt_allele.length < feature.ref_allele.length ? '#D31D00' : '#1DD300';\n  }\n});","Genoverse.Track.Model.SequenceVariation = Genoverse.Track.Model.extend({\n  seqModel: Genoverse.Track.Model.Sequence.Ensembl,\n  \n  constructor: function () {\n    this.base.apply(this, arguments);\n    this.prop('models').seq = this.track.newMVC(this.seqModel);\n  },\n  \n  getData: function (start, end) {\n    var deferred = $.Deferred();\n    var seqData  = this.prop('models').seq.checkDataRange(start, end);\n    \n    this.base(start, end).done(function () {\n      if (seqData) {\n        deferred.resolve();\n      } else {\n        this.prop('models').seq.getData(start, end).done(deferred.resolve);\n      }\n    });\n    \n    return deferred;\n  },\n  \n  checkDataRange: function (start, end) {\n    return this.base(start, end) && this.prop('models').seq.checkDataRange(start, end);\n  },\n  \n  findFeatures: function (start, end) {\n    return this.prop('models').seq.findFeatures(start, end).concat(this.base(start, end));\n  }\n});","Genoverse.Track.View.Transcript.Ensembl = Genoverse.Track.View.Transcript.extend({\n  setFeatureColor: function (feature) {\n    Genoverse.Track.View.Gene.Ensembl.prototype.setFeatureColor(feature);\n  }\n});","Genoverse.Track.View.Transcript = Genoverse.Track.View.extend({\n  featureHeight : 10,\n  labels        : true,\n  repeatLabels  : true,\n  bump          : true,\n  intronStyle   : 'bezierCurve',\n  lineWidth     : 0.5,\n  \n  drawFeature: function(transcript, featureContext, labelContext, scale) {\n    this.setFeatureColor(transcript);\n    \n    var exons = (transcript.exons || []).sort(function (a, b) { return a.start - b.start; });\n    var exon, cds, i;\n    \n    if (!exons.length || exons[0].start > transcript.start) {\n      exons.unshift({ start: transcript.start, end: transcript.start });\n    }\n    \n    if (!exons.length || exons[exons.length - 1].end < transcript.end) {\n      exons.push({ start: transcript.end, end: transcript.end  });\n    }\n    \n    for (i = 0; i < exons.length; i++) {\n      exon = exons[i];\n      \n      featureContext.strokeStyle = exon.color || transcript.color || this.color;\n      featureContext.lineWidth   = 1;\n      \n      featureContext.strokeRect(\n        transcript.x + (exon.start - transcript.start) * scale,\n        transcript.y + 1.5,\n        Math.max(1, (exon.end - exon.start) * scale), \n        transcript.height - 3\n      );\n      \n      if (i) {\n        this.drawIntron({\n          x: transcript.x + (exons[i - 1].end - transcript.start) * scale,\n          y: transcript.y + transcript.height / 2 + 0.5,\n          width: (exon.start - exons[i - 1].end) * scale,\n          height: transcript.strand > 0 ? -transcript.height / 2 : transcript.height / 2\n        }, featureContext);\n      }\n    }\n\n    if (transcript.cds && transcript.cds.length) {\n      for (i = 0; i < transcript.cds.length; i++) {\n        cds = transcript.cds[i];\n        \n        featureContext.fillStyle = cds.color || transcript.color || this.color;\n        \n        featureContext.fillRect(\n          transcript.x + (cds.start - transcript.start) * scale,\n          transcript.y, \n          Math.max(1, (cds.end - cds.start) * scale),\n          transcript.height\n        );\n      }\n    }\n    \n    if (this.labels && transcript.label) {\n      this.drawLabel(transcript, labelContext, scale);\n    }\n  },  \n  \n  drawIntron: function (intron, context) {\n    context.beginPath();\n    context.lineWidth = this.lineWidth;\n    \n    switch (this.intronStyle) {\n      case 'line':\n        context.moveTo(intron.x, intron.y);\n        context.lineTo(intron.x + intron.width, intron.y);\n        break;\n      case 'hat':\n        context.moveTo(intron.x, intron.y);\n        context.lineTo(intron.x + intron.width / 2, intron.y + intron.height);\n        context.lineTo(intron.x + intron.width, intron.y);\n        break;\n      case 'bezierCurve':\n        context.moveTo(intron.x, intron.y);\n        context.bezierCurveTo(intron.x, intron.y + intron.height, intron.x + intron.width, intron.y + intron.height, intron.x + intron.width, intron.y);\n        break;\n      default: break;\n    }\n    \n    context.stroke();\n    context.closePath();\n  }\n});\n","Genoverse.Track.File = Genoverse.Track.extend({\n  setInterface: function () {\n    this.base();\n    this._interface.data = 'model';\n  }\n});\n","Genoverse.Track.File.BED = Genoverse.Track.File.extend({\n  name          : 'BED',\n  model         : Genoverse.Track.Model.File.BED,\n  bump          : true,\n  featureHeight : 6,\n  \n  populateMenu: function (feature) {\n    return {\n      title       : '<a target=_blank href=\"https://genome.ucsc.edu/FAQ/FAQformat.html#format1\">BED feature details</a>',\n      chrom       : feature.originalFeature[0],\n      chromStart  : feature.originalFeature[1],\n      chromEnd    : feature.originalFeature[2],\n      name        : feature.originalFeature[3],\n      score       : feature.originalFeature[4],\n      strand      : feature.originalFeature[5],\n      thickStart  : feature.originalFeature[6],\n      thickEnd    : feature.originalFeature[7],\n      itemRgb     : feature.originalFeature[8],\n      blockCount  : feature.originalFeature[9],\n      blockSizes  : feature.originalFeature[10],\n      blockStarts : feature.originalFeature[11]\n    };\n  }\n});","Genoverse.Track.Model.File.GFF = Genoverse.Track.Model.File.extend({\n  parseData: function (text) {\n    var lines = text.split('\\n');\n    \n    for (var i = 0; i < lines.length; i++) {\n      if (!lines[i].length || lines[i].indexOf('#') === 0) {\n        continue;\n      }\n      \n      var fields = lines[i].split('\\t');\n\n      if (fields.length < 5) {\n        continue;\n      }\n      \n      if (fields[0] === this.browser.chr || fields[0].toLowerCase() === 'chr' + this.browser.chr || fields[0].match('[^1-9]' + this.browser.chr + '$')) {\n        this.insertFeature({\n          id     : fields.slice(0, 5).join('|'),\n          start  : parseInt(fields[3], 10),\n          end    : parseInt(fields[4], 10),\n          source : fields[1],\n          type   : fields[2],\n          score  : fields[5],\n          strand : fields[6] + '1',\n          label  : fields[1] + ' ' + fields[2] + ' ' + fields[3] + '-' + fields[4]\n        });\n      }\n    }\n  }\n});\n\nGenoverse.Track.Model.File.GTF = Genoverse.Track.Model.File.GFF;","Genoverse.Track.Chromosome = Genoverse.Track.extend({\n  id            : 'chromosome',\n  margin        : 1,\n  featureMargin : { top: 0, right: 0, bottom: 0, left: 0 },\n  labels        : 'overlay',\n  url           : false,\n  allData       : true,\n  colors        : {\n    acen    : '#708090',\n    gneg    : '#FFFFFF',\n    gpos    : '#000000',\n    gpos100 : '#000000',\n    gpos25  : '#D9D9D9',\n    gpos33  : '#BFBFBF',\n    gpos50  : '#999999',\n    gpos66  : '#7F7F7F',\n    gpos75  : '#666666',\n    gvar    : '#E0E0E0',\n    stalk   : '#708090'\n  },\n  labelColors: {\n    gneg   : '#000000',\n    gvar   : '#000000',\n    gpos25 : '#000000',\n    gpos33 : '#000000'\n  },\n\n  getData: function (start, end) {\n    this.receiveData($.extend(true, [], this.browser.genome[this.browser.chr].bands), start, end);\n    return $.Deferred().resolveWith(this);\n  },\n\n  insertFeature: function (feature) {\n    feature.label      = feature.type === 'acen' || feature.type === 'stalk' ? false : feature.id;\n    feature.menuTitle  = feature.id ? this.browser.chr + feature.id : this.browser.chr + ':' + feature.start + '-' + feature.end;\n    feature.color      = this.prop('colors')[feature.type]      || '#FFFFFF';\n    feature.labelColor = this.prop('labelColors')[feature.type] || '#FFFFFF';\n\n    this.base(feature);\n  },\n\n  drawFeature: function (feature, featureContext, labelContext, scale) {\n    featureContext.fillStyle   = feature.color;\n    featureContext.strokeStyle = '#000000';\n\n    if (feature.type === 'acen') {\n      featureContext.beginPath();\n\n      if (this.drawnAcen) {\n        featureContext.moveTo(feature.x + feature.width, 0);\n        featureContext.lineTo(feature.x + feature.width, feature.height + 0.5);\n        featureContext.lineTo(feature.x, feature.height / 2);\n      } else {\n        featureContext.moveTo(feature.x, 0);\n        featureContext.lineTo(feature.x + feature.width, feature.height / 2);\n        featureContext.lineTo(feature.x, feature.height + 0.5);\n        this.drawnAcen = true;\n      }\n\n      featureContext.closePath();\n      featureContext.fill();\n      featureContext.stroke();\n    } else if (feature.type === 'stalk') {\n      for (var i = 0; i < 2; i++) {\n        featureContext.beginPath();\n\n        featureContext.moveTo(feature.x, 0);\n        featureContext.lineTo(feature.x + feature.width * 0.25, feature.height * 0.25 + 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.75, feature.height * 0.25 + 0.5);\n        featureContext.lineTo(feature.x + feature.width, 0);\n\n        featureContext[i ? 'moveTo' : 'lineTo'](feature.x + feature.width, feature.height);\n        featureContext.lineTo(feature.x + feature.width * 0.75, feature.height * 0.75 - 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.25, feature.height * 0.75 - 0.5);\n        featureContext.lineTo(feature.x, feature.height);\n\n        featureContext[i ? 'stroke' : 'fill']();\n      }\n    } else {\n      this.base(feature, featureContext, labelContext, scale);\n\n      featureContext.beginPath();\n\n      if (feature.start === 1 && feature.end === this.browser.chromosomeSize) {\n        featureContext.clearRect(0, 0, 5, this.prop('height'));\n        featureContext.clearRect(feature.width - 5, 0, 10, this.prop('height'));\n\n        featureContext.fillStyle = feature.color;\n        featureContext.moveTo(5, 0.5);\n        featureContext.lineTo(feature.width - 5, 0.5);\n        featureContext.bezierCurveTo(this.width + 1, 0.5, this.width + 1, feature.height + 0.5, feature.width - 5, feature.height + 0.5);\n        featureContext.lineTo(5, feature.height + 0.5);\n        featureContext.bezierCurveTo(-1, feature.height + 0.5, -1, 0.5, 5, 0.5);\n        featureContext.fill();\n      } else if (feature.start === 1) {\n        featureContext.clearRect(0, 0, 5, this.prop('height'));\n\n        featureContext.fillStyle = feature.color;\n        featureContext.moveTo(5, 0.5);\n        featureContext.lineTo(feature.x + feature.width, 0.5);\n        featureContext.moveTo(5, feature.height + 0.5);\n        featureContext.lineTo(feature.x + feature.width, feature.height + 0.5);\n        featureContext.moveTo(5, 0.5);\n        featureContext.bezierCurveTo(-1, 0.5, -1, feature.height + 0.5, 5, feature.height + 0.5);\n        featureContext.fill();\n      } else if (feature.end === this.browser.chromosomeSize) {\n        featureContext.clearRect(feature.x + feature.width - 5, 0, 10, this.prop('height'));\n\n        featureContext.fillStyle = feature.color;\n        featureContext.moveTo(feature.x, 0.5);\n        featureContext.lineTo(feature.x + feature.width - 5, 0.5);\n        featureContext.moveTo(feature.x, feature.height + 0.5);\n        featureContext.lineTo(feature.x + feature.width - 5, feature.height + 0.5);\n        featureContext.moveTo(feature.x + feature.width - 5, 0.5);\n        featureContext.bezierCurveTo(this.width + 1, 0.5, this.width + 1, feature.height + 0.5, feature.x + feature.width - 5, feature.height + 0.5);\n        featureContext.fill();\n      } else {\n        featureContext.moveTo(feature.x, 0.5);\n        featureContext.lineTo(feature.x + feature.width, 0.5);\n        featureContext.moveTo(feature.x, feature.height + 0.5);\n        featureContext.lineTo(feature.x + feature.width, feature.height + 0.5);\n      }\n\n      featureContext.stroke();\n    }\n  },\n\n  drawLabel: function (feature) {\n    if ((feature.start === 1 || feature.end === this.browser.chromosomeSize) && feature.labelWidth >= Math.floor(feature.width - 5)) {\n      return;\n    }\n\n    this.base.apply(this, arguments);\n  },\n\n  populateMenu: function (feature) {\n    return {\n      title    : feature.menuTitle,\n      Position : this.browser.chr + ':' + feature.start + '-' + feature.end\n    };\n  }\n});","Genoverse.Track.File.VCF = Genoverse.Track.File.extend({\n  name       : 'VCF',\n  model      : Genoverse.Track.Model.SequenceVariation.VCF,\n  autoHeight : false,\n  \n  populateMenu: function (feature) {\n    return {\n      title  : '<a target=\"_blank\" href=\"http://www.1000genomes.org/node/101\">VCF feature details</a>',\n      CHROM  : feature.originalFeature[0],\n      POS    : feature.originalFeature[1],\n      ID     : feature.originalFeature[2],\n      REF    : feature.originalFeature[3],\n      ALT    : feature.originalFeature[4],\n      QUAL   : feature.originalFeature[5],\n      FILTER : feature.originalFeature[6],\n      INFO   : feature.originalFeature[7].split(';').join('<br />')\n    };\n  },\n  \n  1: { \n    view: Genoverse.Track.View.Sequence.extend({\n      bump          : true,\n      labels        : false,\n      featureMargin : { top: 0, right: 0, bottom: 0, left: 0 },\n      \n      draw: function (features, featureContext, labelContext, scale) {\n        this.base.apply(this, arguments);\n        this.highlightRef(features, featureContext, scale);\n      },\n\n      highlightRef: function (features, context, scale) {\n        context.strokeStyle = 'black';\n        \n        for (var i = 0; i < features.length; i++) {\n          if (features[i].allele === 'REF') {\n            context.strokeRect(features[i].position[scale].X, features[i].position[scale].Y, features[i].position[scale].width, features[i].position[scale].height);\n          }\n        }\n      }\n    })\n  },\n  \n  1000: {\n    view: Genoverse.Track.View.extend({\n      bump   : false,\n      labels : false,\n      \n      drawFeature: function (feature) {\n        if (!feature.color) {\n          var QUAL  = feature.originalFeature[5];\n          var heat  = Math.min(255, Math.floor(255 * QUAL / this.maxQUAL)) - 127;\n          var red   = heat > 0 ? 255 : 127 + heat;\n          var green = heat < 0 ? 255 : 127 - heat;\n\n          feature.color = 'rgb(' + red + ',' + green + ',0)';\n        }\n        \n        this.base.apply(this, arguments);\n      }\n    })\n  }\n});\n","Genoverse.Track.Gene = Genoverse.Track.extend({\n  id     : 'genes',\n  name   : 'Genes',\n  height : 200,\n\n  populateMenu: function (feature) {\n    var url  = 'http://grch37.ensembl.org/Homo_sapiens/' + (feature.feature_type === 'transcript' ? 'Transcript' : 'Gene') + '/Summary?' + (feature.feature_type === 'transcript' ? 't' : 'g') + '=' + feature.id;\n    var menu = {\n      title    : '<a target=\"_blank\" href=\"' + url + '\">' + (feature.external_name ? feature.external_name + ' (' + feature.id + ')' : feature.id) + '</a>',\n      Location : this.browser.chr + ':' + feature.start + '-' + feature.end,\n      Source   : feature.source,\n      Biotype  : feature.biotype\n    };\n\n    if (feature.feature_type === 'transcript') {\n      menu.Gene = '<a target=\"_blank\" href=\"http://grch37.ensembl.org/Homo_sapiens/Gene/Summary?g=' + feature.Parent + '\">' + feature.Parent + '</a>';\n    }\n\n    return menu;\n  },\n\n  // Different settings for different zoom level\n  2000000: { // This one applies when > 2M base-pairs per screen\n    labels : false\n  },\n  100000: { // more than 100K but less then 2M\n    labels : true,\n    model  : Genoverse.Track.Model.Gene.Ensembl,\n    view   : Genoverse.Track.View.Gene.Ensembl\n  },\n  1: { // > 1 base-pair, but less then 100K\n    labels : true,\n    model  : Genoverse.Track.Model.Transcript.Ensembl,\n    view   : Genoverse.Track.View.Transcript.Ensembl,\n  }\n});\n","Genoverse.Track.HighlightRegion = Genoverse.Track.extend({\n  unsortable    : true,\n  repeatLabels  : true,\n  resizable     : false,\n  border        : false,\n  height        : 15,\n  featureHeight : 2,\n  order         : -1,\n  orderReverse  : 9e99,\n  controls      : 'off',\n  color         : '#555',\n  background    : '#DDD',\n  labels        : 'separate',\n  featureMargin : { top: 13, right: 0, bottom: 0, left: 0 },\n  margin        : 0,\n\n  controller: Genoverse.Track.Controller.Stranded.extend({\n    setDefaults: function () {\n      if (this.prop('strand') === -1) {\n        this.prop('labels', false);\n        this.prop('border', false);\n        this.prop('height', 2);\n        this.prop('featureMargin').top = 0;\n      }\n\n      this.base();\n    },\n\n    setName: function (name) {\n      if (this.prop('strand') === -1) {\n        this.base('');\n        this.minLabelHeight = 0;\n        this.label.height(0);\n      } else {\n        this.base(name);\n      }\n    },\n\n    makeImage: function (params) {\n      if (this.prop('strand') === 1) {\n        params.background = 'gv-full-height';\n      }\n\n      var rtn = this.base(params);\n      params.container.addClass(params.background);\n      return rtn;\n    },\n\n    render: function (features, img) {\n      this.base(features, img);\n      img.siblings('.gv-labels').css('top', this.prop('featureHeight') - this.prop('featureMargin').top);\n    },\n\n    renderBackground: function (f, img) {\n      this.base(f, img);\n      img.height(this.browser.wrapper.outerHeight(true));\n    },\n\n    click: $.noop\n  }),\n\n  model: Genoverse.Track.Model.Stranded.extend({\n    findFeatures: function () {\n      return Genoverse.Track.Model.prototype.findFeatures.apply(this, arguments);\n    }\n  }),\n\n  view: Genoverse.Track.View.extend({\n    positionFeatures: function (originalFeatures, params) {\n      if (this.prop('strand') === -1) {\n        var scale    = params.scale;\n        var features = $.extend(true, [], originalFeatures);\n        var i        = features.length;\n\n        while (i--) {\n          delete features[i].position[scale].H;\n          delete features[i].position[scale].Y;\n          delete features[i].position[scale].bottom;\n          delete features[i].position[scale].positioned;\n        }\n\n        return this.base(features, params);\n      } else {\n        return this.base(originalFeatures.reverse(), params);\n      }\n    },\n\n    draw: function (features, featureContext, labelContext, scale) {\n      if (this.prop('strand') === 1) {\n        featureContext.fillStyle = '#FFF';\n        featureContext.fillRect(0, 0, featureContext.canvas.width, featureContext.canvas.height);\n      }\n\n      this.base(features, featureContext, labelContext, scale);\n    },\n\n    drawBackground: function (features, context, params) {\n      for (var i = 0; i < features.length; i++) {\n        this.drawFeature($.extend({}, features[i], {\n          x           : features[i].position[params.scale].X,\n          y           : 0,\n          width       : features[i].position[params.scale].width,\n          height      : context.canvas.height,\n          color       : this.prop('background'),\n          label       : false,\n          decorations : true\n        }), context, false, params.scale);\n      }\n    },\n\n    decorateFeature: function (feature, context, scale) {\n      var x1 = feature.x + 0.5;\n      var x2 = x1 + feature.width;\n\n      context.strokeStyle = this.color;\n      context.lineWidth   = 2;\n\n      if (x1 >= 0 && x1 <= this.width) {\n        context.moveTo(x1, feature.y);\n        context.lineTo(x1, feature.y + feature.height);\n      }\n\n      if (x2 >= 0 && x2 <= this.width) {\n        context.moveTo(x2, feature.y)\n        context.lineTo(x2, feature.y + feature.height)\n      }\n\n      context.stroke();\n\n      context.lineWidth = 1;\n    }\n  })\n});","Genoverse.Track.Legend = Genoverse.Track.Static.extend({\n  textColor     : '#000000',\n  labels        : 'overlay',\n  unsortable    : true,\n  lockToTrack   : true,  // Always put the legend just below the last track that the legend is for\n  featureHeight : 12,\n\n  controller: Genoverse.Track.Controller.Static.extend({\n    init: function () {\n      this.base();\n\n      this.container.addClass('gv-track-container-legend');\n\n      if (!this.browser.legends) {\n        this.browser.legends = {};\n      }\n\n      this.browser.legends[this.track.id] = this;\n      this.track.setTracks();\n    }\n  }),\n\n  setEvents: function () {\n    this.browser.on({\n      'afterInit afterAddTracks afterRemoveTracks': function () {\n        for (var i in this.legends) {\n          this.legends[i].track.setTracks();\n        }\n      },\n      afterRemoveTracks: function (tracks) {\n        for (var i in tracks) {\n          if (tracks[i].controller.legend && tracks[i].controller.legend.track.tracks.length === 0) {\n            tracks[i].controller.legend.track.remove();\n          }\n        }\n\n        for (var i in this.legends) {\n          this.legends[i].makeImage({});\n        }\n      },\n      afterUpdateTrackOrder: function () {\n        for (var i in this.legends) {\n          this.legends[i].track.updateOrder();\n        }\n      }\n    });\n\n    this.browser.on({\n      afterPositionFeatures: function (features, params) {\n        var legend = this.prop('legend');\n\n        if (legend) {\n          setTimeout(function () { legend.makeImage(params); }, 1);\n        }\n      },\n      afterResize: function (height, userResize) {\n        var legend = this.prop('legend');\n\n        if (legend && userResize === true) {\n          legend.makeImage({});\n        }\n      },\n      afterCheckHeight: function () {\n        var legend = this.prop('legend');\n\n        if (legend) {\n          legend.makeImage({});\n        }\n      }\n    }, this);\n  },\n\n  setTracks: function () {\n    var legend = this;\n    var type   = this.featureType;\n\n    this.tracks = $.grep(this.browser.tracks, function (t) { if (t.type === type && t.controller) { t.controller.legend = legend.controller; return true; } });\n\n    this.updateOrder();\n\n    if (typeof this.controller === 'object') {\n      this[this.tracks.length ? 'enable' : 'disable']();\n    }\n  },\n\n  updateOrder: function () {\n    if (!this.tracks.length || this.browser._constructing) {\n      return;\n    }\n\n    if (this.lockToTrack) {\n      this.order = this.tracks[this.tracks.length - 1].order + 0.1;\n    }\n\n    this.browser.sortTracks();\n  },\n\n  findFeatures: function () {\n    var bounds   = { x: this.browser.scaledStart, y: 0, w: this.width };\n    var features = {};\n\n    $.each($.map(this.track.tracks, function (track) {\n      var featurePositions = track.prop('featurePositions');\n      bounds.h = track.prop('height');\n      return featurePositions ? featurePositions.search(bounds).concat(track.prop('labelPositions').search(bounds)) : [];\n    }), function () {\n      if (this.legend) {\n        features[this.legend] = this.color;\n      }\n    });\n\n    // sort legend alphabetically\n    return $.map(features, function (color, text) { return [[ text, color ]]; }).sort(function (a, b) {\n      var x = a[0].toLowerCase();\n      var y = b[0].toLowerCase();\n      return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n    });\n  },\n\n  positionFeatures: function (f, params) {\n    if (params.positioned) {\n      return f;\n    }\n\n    var cols     = 2;\n    var pad      = 5;\n    var w        = 20;\n    var x        = 0;\n    var y        = 0;\n    var xScale   = this.width / cols;\n    var yScale   = this.fontHeight + pad;\n    var features = [];\n    var xPos, yPos, labelWidth;\n\n    for (var i = 0; i < f.length; i++) {\n      xPos       = (x * xScale) + pad;\n      yPos       = (y * yScale) + pad;\n      labelWidth = this.context.measureText(f[i][0]).width;\n\n      features.push(\n        { x: xPos,           y: yPos, width: w,              height: this.featureHeight, color: f[i][1] },\n        { x: xPos + pad + w, y: yPos, width: labelWidth + 1, height: this.featureHeight, color: false, labelColor: this.textColor, labelWidth: labelWidth, label: f[i][0] }\n      );\n\n      if (++x === cols) {\n        x = 0;\n        y++;\n      }\n    }\n\n    params.height     = this.prop('height', f.length ? ((y + (x ? 1 : 0)) * yScale) + pad : 0);\n    params.width      = this.width;\n    params.positioned = true;\n\n    return this.base(features, params);\n  },\n\n  enable: function () {\n    this.base();\n    this.controller.makeImage({});\n  },\n\n  disable: function () {\n    delete this.controller.stringified;\n    this.base();\n  },\n\n  destroy: function () {\n    delete this.browser.legends[this.id];\n    this.base();\n  }\n});\n","Genoverse.Track.Scaleline = Genoverse.Track.Static.extend({\n  strand     : 1,\n  color      : '#000000',\n  height     : 12,\n  labels     : 'overlay',\n  unsortable : true,\n  \n  resize: $.noop,\n  \n  makeFirstImage: function () {\n    this.prop('scaleline', false);\n    this.base.apply(this, arguments);\n  },\n  \n  render: function (f, img) {\n    this.base(f, img);\n    this.prop('drawnScale', img.data('scale'));\n  },\n  \n  positionFeatures: function (features, params) {\n    var scaleline = this.prop('scaleline');\n    \n    if (params.scale === this.drawnScale) {\n      return false;\n    } else if (scaleline) {\n      return scaleline;\n    }\n    \n    var strand = this.prop('strand');\n    var height = this.prop('height');\n    var text   = this.formatLabel(this.browser.length);\n    var text2  = strand === 1 ? 'Forward strand' : 'Reverse strand';\n    var width1 = this.context.measureText(text).width;\n    var width2 = this.context.measureText(text2).width;\n    var bg     = this.prop('imgContainer').css('backgroundColor');\n    var x1, x2;\n    \n    if (strand === 1) {\n      x1 = 0;\n      x2 = this.width - width2 - 40;\n    } else {\n      x1 = 25;\n      x2 = 30;\n    }\n    \n    scaleline = [\n      { x: x1,                             y: height / 2, width: this.width - 25, height: 1, decorations: true },\n      { x: (this.width - width1 - 10) / 2, y: 0,          width: width1 + 10,     height: height, color: bg, labelColor: this.color, labelWidth: width1, label: text  },\n      { x: x2,                             y: 0,          width: width2 + 10,     height: height, color: bg, labelColor: this.color, labelWidth: width2, label: text2 }\n    ];\n    \n    return this.base(this.prop('scaleline', scaleline), params);\n  },\n  \n  decorateFeature: function (feature, context) {\n    var strand = this.prop('strand');\n    var height = this.prop('height');\n    var x      = strand === 1 ? this.width - 25 : 25;\n    \n    context.strokeStyle = this.color;\n    \n    context.beginPath();\n    context.moveTo(x,                 height * 0.25);\n    context.lineTo(x + (strand * 20), height * 0.5);\n    context.lineTo(x,                 height * 0.75);\n    context.closePath();\n    context.stroke();\n    context.fill();\n  }\n});","Genoverse.Track.Scalebar = Genoverse.Track.extend({\n  unsortable     : true,\n  order          : 0,\n  orderReverse   : 1e5,\n  featureStrand  : 1,\n  controls       : 'off',\n  height         : 20,\n  featureHeight  : 3,\n  featureMargin  : { top: 0, right: 0, bottom: 2, left: 0 },\n  margin         : 0,\n  minPixPerMajor : 100, // Least number of pixels per written number\n  color          : '#000000',\n  autoHeight     : false,\n  labels         : true,\n  bump           : false,\n  resizable      : false,\n  click          : $.noop,\n  colors         : {\n    majorGuideLine : '#CCCCCC',\n    minorGuideLine : '#E5E5E5'\n  },\n\n  setEvents: function () {\n    var browser = this.browser;\n\n    function resize() {\n      $('.gv-bg.gv-full-height', browser.container).height(function () {\n        return browser.wrapper.outerHeight(true) - $(this).parents('.gv-track-container').position().top;\n      });\n    }\n\n    browser.on('afterAddTracks', resize);\n    browser.on('afterResize', this, resize);\n  },\n\n  setScale: function () {\n    var max       = this.prop('width') / this.prop('minPixPerMajor');\n    var divisor   = 5;\n    var majorUnit = -1;\n    var fromDigit = ('' + this.browser.start).split(''); // Split into array of digits\n    var toDigit   = ('' + this.browser.end).split('');\n    var divisions, i;\n\n    for (i = fromDigit.length; i < toDigit.length; i++) {\n      fromDigit.unshift('0');\n    }\n\n    for (i = toDigit.length; i < fromDigit.length; i++) {\n      toDigit.unshift('0');\n    }\n\n    // How many divisions would there be if we only kept i digits?\n    for (i = 0; i < fromDigit.length; i++) {\n      divisions = parseInt(toDigit.slice(0, fromDigit.length - i).join(''), 10) - parseInt(fromDigit.slice(0, fromDigit.length - i).join(''), 10);\n\n      if (divisions && divisions <= max) {\n        majorUnit = parseInt('1' + $.map(new Array(i), function () { return '0'; }).join(''), 10);\n        break;\n      }\n    }\n\n    if (majorUnit === -1) {\n      majorUnit = this.browser.length === 1 ? 1 : parseInt('1' + $.map(new Array(fromDigit.length), function () { return '0'; }).join(''), 10);\n      divisor   = 1;\n    } else {\n      // Improve things by trying simple multiples of 1<n zeroes>.\n      // (eg if 100 will fit will 200, 400, 500).\n      if (divisions * 5 <= max) {\n        majorUnit /= 5;\n        divisor    = 2;\n      } else if (divisions * 4 <= max) {\n        majorUnit /= 4;\n        divisor    = 1;\n      } else if (divisions * 2 <= max) {\n        majorUnit /= 2;\n      }\n    }\n\n    majorUnit = Math.max(majorUnit, 1);\n\n    this.prop('minorUnit',    Math.max(majorUnit / divisor, 1));\n    this.prop('majorUnit',    majorUnit);\n    this.prop('features',     new RTree());\n    this.prop('featuresById', {});\n    this.prop('seen',         {});\n\n    this.base();\n  },\n\n  setFeatures: function (start, end) {\n    var minorUnit = this.prop('minorUnit');\n    var majorUnit = this.prop('majorUnit');\n    var seen      = this.prop('seen');\n\n    start = Math.max(start - (start % minorUnit) - majorUnit, 0);\n\n    var flip  = (start / minorUnit) % 2 ? 1 : -1;\n    var feature, major, label;\n\n    for (var x = start; x < end + minorUnit; x += minorUnit) {\n      flip *= -1;\n\n      if (seen[x]) {\n        continue;\n      }\n\n      seen[x] = 1;\n\n      feature = { id: x, strand: 1, sort: x };\n      major   = x && x % majorUnit === 0;\n\n      if (flip === 1) {\n        feature.start = x;\n        feature.end   = x + minorUnit - 1;\n      }\n\n      if (major) {\n        label = this.track.view.formatLabel(x);\n\n        if (label !== this.lastLabel) {\n          feature.label = label;\n\n          if (!feature.end) {\n            feature.start = x;\n            feature.end   = x - 1;\n          }\n        }\n\n        this.lastLabel = label;\n      }\n\n      if (feature.end) {\n        this.insertFeature(feature);\n      }\n    }\n  },\n\n  makeFirstImage: function (moveTo) {\n    if (this.prop('strand') === -1) {\n      moveTo = this.track.forwardTrack.scrollStart;\n    }\n\n    return this.base(moveTo);\n  },\n\n  makeImage: function (params) {\n    params.background    = 'gv-guidelines gv-full-height';\n    params.featureHeight = this.prop('height');\n\n    this.track.setFeatures.apply(this.track.model, [ params.start, params.end ]);\n\n    var rtn = this.base(params);\n\n    params.container.addClass('gv-full-height');\n\n    return rtn;\n  },\n\n  makeReverseImage: function (params) {\n    this.imgContainers.push(params.container.clone().html(params.container.children('.gv-data').clone(true).css('background', this.browser.wrapper.css('backgroundColor')))[0]);\n    this.scrollContainer.append(this.imgContainers);\n  },\n\n  renderBackground: function (f, bgImage) {\n    this.base(f, bgImage);\n    bgImage.height(this.browser.wrapper.outerHeight(true));\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var i         = features.length;\n    var minorUnit = this.prop('minorUnit');\n    var width     = Math.ceil(minorUnit * scale);\n    var feature, start;\n\n    featureContext.textBaseline = 'top';\n    featureContext.fillStyle    = this.color;\n\n    this.guideLines = { major: {} }; // FIXME: pass params to draw, rather than scale. set guideLines on params\n\n    while (i--) {\n      feature = features[i];\n      start   = Math.round(feature.position[scale].X);\n\n      this.drawFeature($.extend({}, feature, {\n        x      : start,\n        y      : 0,\n        width  : Math.ceil(feature.position[scale].width),\n        height : this.featureHeight\n      }), featureContext, labelContext, scale);\n\n      if (feature.label) {\n        if (start > -1) {\n          featureContext.fillRect(start, this.featureHeight, 1, this.featureHeight);\n        }\n\n        this.guideLines.major[feature.start] = true;\n      }\n\n      this.guideLines[feature.start] = start;\n      this.guideLines[feature.start + minorUnit] = start + width - 1;\n    }\n\n    featureContext.fillRect(0, 0, featureContext.canvas.width, 1);\n    featureContext.fillRect(0, this.featureHeight, featureContext.canvas.width, 1);\n  },\n\n  // Draw guidelines\n  drawBackground: function (f, context) {\n    for (var i in this.guideLines) {\n      if (this.guideLines[i] >= 0 && this.guideLines[i] <= this.width) {\n        context.fillStyle = this.track.colors[this.guideLines.major[i] ? 'majorGuideLine' : 'minorGuideLine' ];\n        context.fillRect(this.guideLines[i], 0, 1, context.canvas.height);\n      }\n    }\n  },\n\n  formatLabel: function (label) {\n    return this.prop('minorUnit') < 1000 ? label.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,') : this.base(label);\n  }\n});"]}