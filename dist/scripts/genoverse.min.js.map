{"version":3,"sources":["Genoverse.js","Track.js","Track/Controller.js","Track/Model.js","Track/View.js","genomes/grch37.js","genomes/grch38.js","lib/BWReader.js","lib/Base.js","lib/VCFReader.js","lib/dalliance-lib.js","lib/dalliance-lib.min.js","lib/jDataView.js","lib/jParser.js","lib/jquery-ui.js","lib/jquery.js","lib/jquery.mousehold.js","lib/jquery.mousewheel.js","lib/jquery.tipsy.js","lib/rtree.js","plugins/controlPanel.js","plugins/fileDrop.js","plugins/focusRegion.js","plugins/fullscreen.js","plugins/karyotype.js","plugins/resizer.js","plugins/tooltips.js","plugins/trackControls.js","Track/Controller/Sequence.js","Track/Controller/Stranded.js","Track/Model/File.js","Track/Model/Gene.js","Track/Model/Sequence.js","Track/Model/SequenceVariation.js","Track/Model/Stranded.js","Track/Model/Transcript.js","Track/View/Gene.js","Track/View/Sequence.js","Track/View/Transcript.js","Track/library/Chromosome.js","Track/library/File.js","Track/library/Gene.js","Track/library/Graph.js","Track/library/HighlightRegion.js","Track/library/Legend.js","Track/library/Scalebar.js","Track/library/Scaleline.js","Track/library/Static.js","Track/library/dbSNP.js","Track/Model/File/BAM.js","Track/Model/File/BED.js","Track/Model/File/GFF.js","Track/Model/File/VCF.js","Track/Model/File/WIG.js","Track/Model/Gene/Ensembl.js","Track/Model/Sequence/Ensembl.js","Track/Model/Sequence/Fasta.js","Track/Model/Transcript/Ensembl.js","Track/View/Gene/Ensembl.js","Track/View/Sequence/Variation.js","Track/View/Transcript/Ensembl.js","Track/library/File/BAM.js","Track/library/File/BED.js","Track/library/File/BIGBED.js","Track/library/File/BIGWIG.js","Track/library/File/GFF.js","Track/library/File/VCF.js","Track/library/File/WIG.js","Track/library/Graph/Bar.js","Track/library/Graph/Line.js","lib/dalliance/js/bam.js","lib/dalliance/js/bin.js","lib/dalliance/js/das.js","lib/dalliance/js/utils.js"],"names":["Genoverse","Base","extend","urlParamTemplate","width","longestLabel","defaultLength","defaultScrollDelta","tracks","highlights","plugins","dragAction","wheelAction","isStatic","saveable","saveKey","storageType","autoHideMessages","trackAutoHeight","hideEmptyTracks","genome","undefined","useHash","chr","start","end","constructor","config","browser","this","supported","die","container","$","length","appendTo","addClass","data","eventNamespace","id","events","when","ready","loadGenome","loadPlugins","always","wrapFunctions","init","genomeName","ajax","url","origin","dataType","context","success","Genomes","loadPluginsTask","Deferred","i","loadedPlugins","Plugins","initializePlugin","plugin","requires","deferred","call","replace","toLowerCase","resolve","done","apply","map","css","js","getCSS","noCSS","on","getScript","pluginsLoaded","arguments","push","addDomElements","addUserEventHandlers","tracksById","prev","legends","window","history","pushState","textWidth","document","createElement","getContext","measureText","labelWidth","labelContainer","outerWidth","paramRegex","RegExp","urlCoords","getURLCoords","coords","chromosomeSize","size","canChangeChr","loadConfig","addTracks","setRange","addHighlights","defaultTracks","getItem","JSON","parse","prop","track","tracksByNamespace","getAllTrackTypes","savedConfig","setConfig","conf","parseInt","isNaN","prototype","_fromStorage","namespace","trackIds","saveConfig","_constructing","j","Track","Legend","HighlightRegion","order","autoHeight","height","initialHeight","defaultHeight","setItem","stringify","e","resetConfig","unremovableHighlights","removeHighlights","h","removeItem","removeTracks","menus","sortable","items","handle","axis","helper","cursor","update","proxy","updateTrackOrder","ui","placeholder","item","visibility","html","hide","wrapper","selector","selectorControls","zoomInHighlight","zoomOutHighlight","clone","toggleClass","documentEvents","mousedown","hideMessages","which","target","mousewheel","delta","deltaX","deltaY","noWheelZoom","startDragScroll","move","stopDragScroll","mousewheelZoom","dblclick","pos","getSelectorPosition","className","moveTo","cancelSelect","addHighlight","mouseup","mousemove","keydown","keyup","wheelTimeout","clearTimeout","setTimeout","popState","onTracks","mvc","args","func","shift","disabled","_interface","reset","concat","slice","scale","setWidth","controlPanel","superContainer","zoomDeltaTimeout","zoomTimeout","left","pageX","top","pageY","display","animate","complete","offset","moveSelector","dragging","scrolling","dragOffset","dragStart","scrollDelta","Math","max","updateURL","checkTrackHeights","startDragSelect","x","selectorStalled","selectorStart","removeClass","stopDragSelect","min","outerHeight","find","show","keepDragging","dragSelect","setDragAction","action","keepSelect","hasClass","toggleSelect","setWheelAction","closeMenus","shiftKey","round","minLeft","maxLeft","keepLength","floor","center","setScale","scaledStart","labelBuffer","ceil","resetTrackHeights","zoomIn","zoomOut","addTrack","after","defaults","grep","t","insertAfter","sort","a","b","getTrackNamespace","sortTracks","removeTrack","splice","destructor","sorted","labels","containers","position","append","each","diff","next","p","n","o","abs","location","hash","getQueryString","match","search","split","tmp","getChromosomeSize","el","error","failed","menuTemplate","fadeOut","not","makeMenu","features","event","Array","isArray","makeFeatureMenu","menu","contentEl","table","remove","feature","title","menuLabel","name","label","join","of","my","collision","add","content","loading","getMenu","isDeferred","linkData","key","columns","colspan","focus","highlight","menuEl","controller","populateMenu","promise","properties","v","color","test","obj","filter","children","trigger","fn","once","f","fnString","eventMap","makeEventMap","types","handler","makeFnString","toString","compare","type","destroy","empty","off","src","attr","ancestor","functionWrap","functions","debug","substring","toUpperCase","isBrowser","mainObj","Controller","Model","rtn","currentConfig","_currentConfig","funcs","console","log","time","base","timeEnd","trackTypes","subtype","namespaces","module","exports","margin","resizable","border","unsortable","fixedOrder","invert","legend","hideEmpty","stranded","Stranded","model","models","views","setInterface","setDefaults","setEvents","setLengthMap","setMVC","makeFirstImage","addChildTracks","addLegend","noop","configSettings","defaultConfig","controls","defaultAutoHeight","setDefaultConfig","_setCurrentConfig","abort","_defaults","settings","getSettingsForLength","controllerSettings","trackSettings","hasOwnProperty","isEmptyObject","changed","setChrProps","threshold","view","newMVC","object","value","deepCopy","prevLengthMap","mvSettings","prevType","mv","lengthMap","checked","featureHeight","View","setHeight","forceShow","resetHeight","resizer","resize","_config","configChanged","forEach","featureFilters","getConfig","featureFilter","child","parentTrack","childTracks","setLabelHeight","now","legendType","shared","makeLegendTrack","legendTrack","changeChr","updateName","setName","enable","disable","objs","scrollBuffer","Infinity","clickTolerance","messages","deferreds","imgRange","scrollRange","resetImages","scrollContainer","resetImageRanges","scrollStart","right","labelName","minLabelHeight","imgContainer","messageContainer","click","collapsed","is","code","checkHeight","cookie","parent","y","getClickedFeatures","bounds","w","tolerance","sortFeatures","showMessage","additionalText","msg","prependTo","fullVisibleHeight","hideMessage","siblings","style","showError","thresholdMessage","visibleFeatureHeight","autoResize","featurePositions","minHeight","bottom","labelTop","labelPositions","toggleExpander","arg","imgContainers","featureMargin","expander","enforceMinHeight","reduce","setLabelBuffer","formatLabel","setScaleSettings","k","makeImage","cls","params","labelHeight","tooLarge","div","bgImage","background","image","fadeIn","checkDataRange","buffer","getData","findFeatures","render","renderBackground","fail","images","makeImages","img","positionFeatures","scaleFeatures","featureCanvas","labelCanvas","featureContext","labelContext","font","textAlign","textBaseline","draw","toDataURL","class","canvas","drawBackground","Location","state","reject","allData","dataBuffer","xhrFields","urlParams","dataRequestLimit","featuresById","dataRangesByChr","featuresByChr","dataLoading","dataBufferStart","_url","RTree","dataRanges","parseURL","assembly","receiveData","resolveWith","bins","bin","request","xhr","statusText","setDataRange","parseData","insertFeature","updateData","insert","ranges","s","ID","hashCode","subFeatures","unshift","fake","filters","string","charCodeAt","fontHeight","fontFamily","fontWeight","fontColor","minScaledWidth","widthCorrection","repeatLabels","bump","alwaysReposition","depth","subFeatureJoinStyle","subFeatureJoinLineWidth","scaleSettings","labelUnits","positionFeature","X","positioned","H","W","marginRight","Y","marginTop","l","bumpFeature","c","strand","tree","clash","visible","labelPosition","drawFeature","legendColor","setFeatureColor","drawSubFeatures","truncateForDrawing","fillStyle","fillRect","clear","clearRect","borderColor","strokeStyle","strokeRect","drawLabel","decorations","decorateFeature","joinColor","drawSubFeatureJoin","original","untruncated","currentY","spacing","labelColor","setLabelColor","fillText","shadeColor","percent","R","G","B","truncateSubFeatureJoinForDrawing","lineWidth","beginPath","x1","y1","lineTo","x3","x2","y2","y3","quadraticCurveTo","stroke","xMid","yScale","power","unit","pow","grch37","1","bands","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","MT","grch38","BWReader","callback","BIG_WIG_MAGIC","BIG_WIG_MAGIC_BE","BIG_BED_MAGIC","BIG_BED_MAGIC_BE","CIRTREE_MAGIC","IDXTREE_MAGIC","BIG_WIG_TYPE_GRAPH","BIG_WIG_TYPE_VSTEP","BIG_WIG_TYPE_FSTEP","M1","M2","M3","M4","bbi","fetchedData","cb","fetched","d","fetch","readChromTree","len","unzoomedDataOffset","chromTreeOffset","ba","Uint8Array","sa","Uint16Array","la","Uint32Array","bpTree","itemsPerBlock","keySize","valueSize","itemCount","read64Bit","chroms","lengths","nodeOffset","chrom","idx","String","fromCharCode","readChromTreeLeaf","unzoomedIndexOffset","magic","Rheader","blockSize","nItems","chrIdxStart","baseStart","chrIdxEnd","baseEnd","endFileOffset","nItemsPerSlot","rootOffset","getValues","vals","chromid","indexOf","query","fetchBlocks","b0","b1","getBlocks","totalSize","fb","blockData","ioffset","bi","uncompressBufSize","dallianceLib","inflateBuffer","parser","WiggleParser","BEDParser","result","outstanding","fetchRTreeKids","level","maxNodeSize","treedata","traverseRTreeKids","node","lo","isLeaf","dataOffset","getRTreeNode","overlaps","startChrom","startBase","endChrom","endBase","findOverlaps","traverseRTree","score","arr","Int16Array","Int32Array","fa","Float32Array","chromId","blockStart","itemStep","itemSpan","blockType","bbRecord","ch","rest","header","reduction","indexOffset","version","numZoomLevels","fieldCount","definedFieldCount","asOffset","totalSummaryOffset","extHeaderOffset","compressed","summary","extHeader","zoomHeaders","reductionLevel","field_re","headerMatch","exec","as","declType","comment","fields","m","schema","global","definition","define","amd","_instance","_static","_prototyping","proto","klass","implement","valueOf","source","method","previous","returnValue","toSource","hidden","Object","block","tabi_fmt","string0","n_ref","format","col_seq","col_beg","col_end","meta","skip","l_nm","names","current","chunk","cnk_beg","cnk_end","n_chunk","chunkseq","index","n_bin","binseq","n_intv","intervseq","tabix","head","indexseq","bgzf_hd_fmt","id1","id2","cm","flg","mtime","xfl","os","xlen","subheader","si1","si2","slen","bsize","bgzfHd","subhead","inflate","_2p16","VCFReader","vcf","tbi","vcf_data","tbi_data","readTabix","bins2hash","inflateRegion","tabix_buffer","jParser","bhash","getRecords","ref","beg","records","chunks","getChunks","vcfThis","loop","record","ebsz","last","byteLength","inner_end","buffer2String","inner_start","rec","cnks","reg2bins","bin2Ranges","V","remove_duplicates","cbfn","blocks","nextBlockOffset","appendBuffers","inflateBlock","blockOffset","getBGZFHD","hdobj","inflated_block","hdSize","buf","bufferVec","set","resultBuffer","resultBB","objectsArray","usedObjects","so","binid","cnk","cnkseq","list","DEF_WBITS","MANY","Z_NO_FLUSH","Z_OK","Z_STREAM_END","Z_BUF_ERROR","inflate_mask","IB_TYPE","fixed_bl","fixed_bd","fixed_tl","fixed_td","cplens","cplext","cpdist","cpdext","ZStream","Inflate","was","inflateInit","nowrap","istate","inflateEnd","ret","inflateSync","inflateSetDictionary","dictionary","dictLength","inflateReset","z","total_in","total_out","mode","free","wbits","InfBlocks","r","next_in","avail_in","next_in_index","marker","need","adler","proc","_adler","adler32","set_dictionary","mark","inflateSyncPoint","sync_point","INFBLOCKS_BORDER","checkfn","hufts","blens","bb","tb","codes","InfCodes","bitk","bitb","read","write","check","inftree","InfTree","q","inflate_flush","inflate_trees_fixed","bl","bd","tl","td","arrayCopy","inflate_trees_bits","inflate_trees_dynamic","next_out_index","avail_out","next_out","tl_index","td_index","lbits","dbits","ltree","ltree_index","dtree","dtree_index","tindex","inflate_fast","tree_index","lit","get","dist","tp","tp_index","ml","md","tp_index_t_3","huft_build","bindex","hp","hn","g","mask","xp","u","initWorkArea","nl","nd","vsize","BMAX","hasSubarray","subarray","srcOffset","dest","destOffset","count","arrayCopy_fast","BYTES_PER_ELEMENT","byteOffset","arrayCopy_slow","afterUncOffset","oBlockList","obuf","status","newob","out","Vob","readVob","allowZero","bint","unbgzf","lim","ptr","unc","Chunk","minv","maxv","BlobFetchable","blob","URLFetchable","opts","webkitSlice","salted","reader","FileReader","onloadend","ev","bstringToBuffer","readAsBinaryString","FileReaderSync","res","readAsArrayBuffer","ns","ne","navigator","userAgent","readFloat","convertBuffer","ArrayBuffer","readInt","readShort","readByte","fetchAsText","thisB","getURL","then","req","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","responseText","credentials","withCredentials","send","err","shallowCopy","salt","resolver","urlOrObj","attempt","truncatedLength","timeout","overrideMimeType","responseType","response","mozResponseArrayBuffer","BAM_MAGIC","BAI_MAGIC","BamFile","_getBaiRefLength","uncba","nbin","nintv","minBlockIndex","blocksForRange","refId","indices","intBinsL","intBins","leafChunks","otherChunks","nchnk","cs","ce","lowest","minLin","maxLin","lb","prunedOtherChunks","chnk","intChunks","c0","c1","dif","mergedChunks","cur","nc","chrId","chrToIndex","indexChunks","start_stop","bai","bind","tramp","finished","readBamRecords","fetchMin","fetchMax","SEQRET_DECODER","CIGAR_DECODER","BamRecord","sink","blockEnd","refID","bmn","mq","flag_nc","flag","lseq","nextRef","nextPos","segment","indexToChr","light","seqLength","nextSegment","readName","cigar","cigop","seq","seqBytes","sb","qseq","quals","tag","cc","elen","atype","alen","makeBam","attempted","makeBam2","bam","parseBamHeader","headLen","nRef","lName","baiMagic","nref","parseBai","C","A","D","E","T","J","K","L","M","F","N","O","P","Z","aa","ca","da","U","S","ea","Q","I","jDataView","_littleEndian","wrapBuffer","_isArrayBuffer","_isPixelData","PixelData","CanvasPixelArray","_isDataView","DataView","_isNodeBuffer","TypeError","_offset","_bitOffset","_view","_checkBounds","_engineAction","_dataViewAction","_arrayBufferAction","_arrayAction","hi","NodeBuffer","TextEncoder","TextDecoder","createImageData","Int8","Int16","Int32","Uint8","Uint16","Uint32","Float32","Float64","from","Uint64","Number","fromNumber","Int64","create","compatibility","RangeError","_action","getBytes","_setBytes","_getBytes","reverse","setBytes","getString","decode","decodeURIComponent","escape","setString","encode","unescape","encodeURIComponent","getChar","setChar","tell","seek","alignBy","_getFloat64","_getFloat32","_get64","getUint32","getInt64","getUint64","_getInt32","_getUint32","_getInt16","_getUint16","_getInt8","_getUint8","_getBitRangeData","bytes","wideValue","getSigned","getUnsigned","_setBinaryFloat","LN2","_setFloat32","_setFloat64","_set64","setUint32","setInt64","setUint64","_setUint32","_setUint16","_setUint8","setUnsigned","_setInt32","_setInt16","_setInt8","setSigned","structure","callee","Error","_bitShift","ClonedObject","inherit","toInt","val","Function","all","require","uint8","getUint8","uint16","getUint16","uint32","uint64","int8","getInt8","int16","getInt16","int32","getInt32","float32","getFloat32","float64","getFloat64","char","array","results","old_position","if","predicate","fieldValue","bitSize","byteShift","output","self","jQuery","cleanData","_data","triggerHandler","widget","Widget","expr","_createWidget","_proto","_childConstructors","options","isFunction","_super","_superApply","widgetEventPrefix","widgetName","widgetFullName","bridge","isPlainObject","charAt","jquery","pushStack","option","_init","defaultElement","classes","element","uuid","bindings","hoverable","focusable","classesElementLookup","_on","ownerDocument","defaultView","parentWindow","_getCreateOptions","_create","_setOptionDisabled","_trigger","_getCreateEventData","_destroy","_removeClass","removeData","removeAttr","pop","_setOptions","_setOption","_setOptionClasses","_classes","keys","_toggleClass","unique","extra","_untrackClassesElement","inArray","_addClass","guid","_off","_delay","_hoverable","mouseenter","currentTarget","mouseleave","_focusable","focusin","focusout","Event","originalEvent","isDefaultPrevented","effect","duration","delay","effects","easing","queue","parseFloat","scrollbarWidth","offsetWidth","clientWidth","getScrollInfo","isWindow","isDocument","scrollWidth","scrollHeight","getWithinInfo","nodeType","scrollLeft","scrollTop","_","within","preventDefault","at","marginLeft","targetWidth","targetHeight","elemWidth","elemHeight","collisionPosition","collisionWidth","collisionHeight","elem","using","horizontal","vertical","important","fit","flip","flipfit","createPseudo","disableSelection","enableSelection","scrollParent","parents","eq","ie","cancel","distance","_mouseInit","_mouseDown","stopImmediatePropagation","started","_mouseDestroy","_mouseMoveDelegate","_mouseUpDelegate","_mouseMoved","_mouseStarted","_mouseUp","_mouseDownEvent","nodeName","closest","_mouseCapture","mouseDelayMet","_mouseDelayTimer","_mouseDistanceMet","_mouseDelayMet","_mouseStart","_mouseMove","documentMode","button","altKey","ctrlKey","metaKey","ignoreMissingWhich","_mouseDrag","_mouseStop","parentNode","safeActiveElement","activeElement","body","safeBlur","mouse","addClasses","connectToSortable","containment","cursorAt","grid","iframeFix","opacity","refreshPositions","revert","revertDuration","scope","scroll","scrollSensitivity","scrollSpeed","snap","snapMode","snapTolerance","stack","zIndex","drag","stop","_setPositionRelative","_setHandleClassName","_removeHandleClassName","destroyOnClear","_getHandle","_blurActiveElement","_blockFrames","iframeBlocks","_unblockFrames","_createHelper","_cacheHelperProportions","ddmanager","_cacheMargins","cssPosition","offsetParent","hasFixedAncestor","positionAbs","_refreshOffsets","originalPosition","_generatePosition","originalPageX","originalPageY","_adjustOffsetFromHelper","_setContainment","_clear","dropBehaviour","prepareOffsets","margins","_getParentOffset","relative","_getRelativeOffset","_convertPositionTo","_uiHash","drop","dropped","dragStop","handleElement","helperProportions","_isRootNode","tagName","contains","relativeContainer","offsetHeight","cancelHelperRemoval","sortables","isOver","_storedCSS","_helper","_intersectsWith","containerCache","_parent","currentItem","fromOutside","_revert","_cursor","_opacity","scrollParentNotHidden","overflowOffset","snapElements","snapping","release","snapItem","makeArray","_zIndex","draggable","alsoResize","animateDuration","animateEasing","aspectRatio","autoHide","ui-resizable-se","ghost","handles","maxHeight","maxWidth","minWidth","_num","_isNumber","_hasScroll","_aspectRatio","originalElement","_proportionallyResizeElements","wrap","elementIsWrapper","marginBottom","originalResizeStyle","zoom","_proportionallyResize","_setupHandles","_handles","resizing","_removeHandles","se","sw","nw","trim","_renderAxis","first","_renderProxy","originalSize","sizeDiff","originalMousePosition","_propagate","_change","_updatePrevProperties","_updateVirtualBoundaries","_updateRatio","_respectSize","_updateCache","_applyChanges","prevPosition","prevSize","_vBoundaries","_getPaddingPlusBorderDimensions","outerDimensions","elementOffset","step","containerElement","containerOffset","containerPosition","parentData","containerSize","innerHeight","innerWidth","uiBackCompat","removeChild","connectWith","dropOnEmpty","forcePlaceholderSize","forceHelperSize","activate","beforeStop","change","deactivate","over","receive","_isOverAxis","_isFloating","refresh","instance","reverting","_refreshItems","addBack","_removeCurrentsFromItems","currentContainer","domPosition","_createPlaceholder","storedCursor","storedStylesheet","_storedOpacity","_storedZIndex","_preserveHelperProportions","lastPositionAbs","_intersectsWithPointer","direction","_intersectsWithSides","_rearrange","_contactContainers","_noFinalSort","prepend","serialize","_getItemsAsjQuery","connected","attribute","expression","toArray","forcePointerForContainers","floating","_getDragVerticalDirection","_getDragHorizontalDirection","_connectWith","toleranceElement","custom","refreshContainers","_createTrPlaceholder","appendChild","insertBefore","nextSibling","counter","before","sender","getPrototypeOf","text","merge","prevObject","expando","random","isReady","isNumeric","globalEval","camelCase","Date","support","Symbol","iterator","ha","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","ta","dir","childNodes","ga","getElementById","getElementsByTagName","getElementsByClassName","qsa","getAttribute","setAttribute","qa","querySelectorAll","removeAttribute","cacheLength","ia","ja","ka","attrHandle","sourceIndex","ma","na","oa","isDisabled","pa","isXML","documentElement","setDocument","addEventListener","attachEvent","attributes","createComment","getById","getElementsByName","getAttributeNode","innerHTML","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","sortDetached","specified","uniqueSort","detectDuplicates","sortStable","getText","textContent","firstChild","nodeValue","selectors",">"," ","+","~","preFilter","lastChild","uniqueID","pseudos","setFilters","has","innerText","lang","root","hasFocus","href","tabIndex","enabled","selected","selectedIndex","input","even","odd","lt","gt","nth","radio","checkbox","file","password","submit","ra","ua","wa","xa","va","ya","tokenize","compile","select","defaultValue","isXMLDoc","escapeSelector","parseHTML","contents","prevAll","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","Callbacks","stopOnFalse","memory","lock","locked","fireWith","fire","fired","catch","pipe","progress","notify","notifyWith","exceptionHook","stackTrace","rejectWith","getStackHook","warn","message","readyException","removeEventListener","readyWait","doScroll","uid","cache","defineProperty","configurable","access","hasData","_removeData","dequeue","_queueHooks","clearQueue","cssNumber","toggle","thead","col","tr","_default","optgroup","tbody","tfoot","colgroup","caption","th","createDocumentFragment","htmlPrefilter","createTextNode","checkClone","cloneNode","noCloneChecked","triggered","dispatch","special","delegateType","bindType","origType","delegateCount","setup","teardown","removeEvent","fix","delegateTarget","preDispatch","handlers","isPropagationStopped","isImmediatePropagationStopped","rnamespace","handleObj","stopPropagation","postDispatch","addProp","enumerable","writable","load","noBubble","blur","beforeunload","defaultPrevented","relatedTarget","timeStamp","isSimulated","bubbles","cancelable","changedTouches","detail","eventPhase","charCode","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","pointerenter","pointerleave","one","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ja","_evalUrl","Ka","detach","replaceWith","replaceChild","replaceAll","La","Ma","Na","opener","getComputedStyle","Oa","getPropertyValue","pixelMarginRight","Pa","cssText","backgroundClip","clearCloneStyle","pixelPosition","boxSizingReliable","reliableMarginLeft","Qa","Ra","Sa","Ta","letterSpacing","Ua","Va","Xa","cssProps","Wa","Ya","Za","$a","_a","cssHooks","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","orphans","widows","float","setProperty","isFinite","getClientRects","getBoundingClientRect","padding","expand","Tween","propHooks","run","fx","linear","swing","cos","PI","ab","db","eb","requestAnimationFrame","interval","tick","gb","hb","kb","tweeners","prefilters","startTime","tweens","props","specialEasing","originalProperties","originalOptions","createTween","jb","timer","anim","Animation","*","tweener","unqueued","overflow","overflowX","overflowY","prefilter","speed","speeds","old","fadeTo","finish","timers","slideDown","slideUp","slideToggle","fadeToggle","slow","fast","checkOn","optSelected","radioValue","mb","attrHooks","nb","ob","pb","qb","removeProp","propFix","for","rb","valHooks","isTrigger","simulate","hover","ub","vb","parseXML","DOMParser","parseFromString","wb","xb","yb","zb","Ab","param","serializeArray","Bb","Cb","Db","Eb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","dataTypes","Ob","ajaxSettings","flatOptions","active","lastModified","etag","isLocal","protocol","processData","async","contentType","accepts","xml","json","responseFields","converters","* text","text html","text json","text xml","ajaxSetup","ajaxPrefilter","ajaxTransport","statusCode","getResponseHeader","getAllResponseHeaders","mimeType","crossDomain","host","traditional","hasContent","ifModified","headers","beforeSend","Pb","dataFilter","Qb","getJSON","throws","wrapAll","firstElementChild","wrapInner","unwrap","Rb","0","1223","Sb","cors","username","onload","onerror","onabort","binary","script","text script","charset","scriptCharset","Tb","Ub","jsonp","jsonpCallback","createHTMLDocument","implementation","animated","setOffset","pageYOffset","clientTop","pageXOffset","clientLeft","scrollTo","Height","Width","","unbind","delegate","undelegate","holdReady","parseJSON","Vb","Wb","noConflict","mousehold","fireStep","ctr","setInterval","clearMousehold","clearInterval","mouseout","fixHooks","mouseHooks","orgEvent","wheelDelta","HORIZONTAL_AXIS","wheelDeltaY","wheelDeltaX","onmousewheel","unmousewheel","maybeCall","thing","ctx","Tipsy","$element","fixTitle","getTitle","$tip","tip","actualWidth","actualHeight","gravity","fade","$e","fallback","validate","toggleEnabled","tipsy","ele","elementOptions","live","binder","eventIn","eventOut","hoverState","delayIn","delayOut","revalidate","pointee","isElementInDOM","metadata","autoNS","autoWE","autoBounds","prefer","ew","boundTop","boundLeft","$this","_dereq_","rectangle","bbox","ar","leaf","temp","geoJSON","point","insertSubtree","geometry","coordinates","multiPointLineString","multiLineStringPolygon","multiPolygon","makeRec","geometryCollection","geos","geometries","prelim","./rectangle","geojson","Rectangle","./geojson","./rtree","overlap","nx","ny","ax","ay","ax2","ay2","overlapRectangle","containsRectangle","expandRectangle","axw","bxw","ayh","byh","makeMBR","nodes","rect","squarifiedRatio","fill","lperi","larea","rootTree","flatten","todo","removeSubtree","hitStack","countStack","retArray","retObj","currentDepth","searchSubtree","linearSplit","pickLinear","pickNext","highAreaDelta","highAreaNode","lowestGrowthGroup","areaA","areaB","newAreaA","changeNewAreaA","newAreaB","changeNewAreaB","tempNode","t1","t2","lowestHighX","highestLowX","lowestHighY","highestLowY","returnNode","returnArray","bc","pbc","treeStack","bestChoiceArea","bestChoiceIndex","bestChoiceStack","oldLRatio","nh","lratio","chooseLeafSubtree","ai","getTree","setTree","newTree","where","moreTree","deleted","numberDeleted","removeArea","toJSON","printing","fromJSON","rt","icon","beforeInit","tracksLibrary","panel","control","buttonSet","afterInit","tracksButton","Currently enabled tracks:","<div class=\"gv-current-tracks\"></div>","str","tags","getTrackTags","availableTracks","currentTracks","reload","listTracks","removable","afterAddDomElements","afterAddTracks afterRemoveTracks","fileDrop","dataTransfer","fileDropDiv","totalDropOverlay","dragleave","files","indexFile","parts","gz","ext","File","indexExt","info","dataFile","focusRegion","fullscreen","eventName","elemName","requestName","cancelName","onmsfullscreenchange","mozRequestFullScreen","webkitRequestFullscreen","onfullscreenchange","fullscreenVars","enterEvent","preFullscreenWidth","exitEvent","eventListener","karyotype","createKaryotype","chromosome","Chromosome","hoverFeature","hideTooltip","viewPoint","afterSetName","updatePosition","afterAddTracks","updateLocation","karyotypeLabel","recreateKaryotype","afterSetRange","afterSetWidth","afterMoveTo","tooltips","toggleTooltips","updateTooltips","trackControls","defaultControls","toggleState","controlsContainer","toggler","afterResize","afterResetHeight","heightToggler","afterSetMVC","Sequence","makeSeqFeatureMenu","featureMenus","sequence","_makeImage","featureStrand","makeReverseImage","makeForwardImage","reverseTrack","orderReverse","forwardTrack","_deferredReverseTrackImages","_makeReverseTrackImage","removing","largeFile","readAsText","Gene","chunkSize","chunksByChr","substr","SequenceVariation","seqModel","Ensembl","getSeqModel","seqData","alt_allele","otherTrack","Transcript","colors","default","labelColors","lowerCase","labelYOffset","widestLabel","drawSequence","bp","drawLabels","utrHeight","utr","acen","gneg","gpos","gpos100","gpos25","gpos33","gpos50","gpos66","gpos75","gvar","stalk","menuTitle","drawnAcen","chrSize","bezierCurveTo","Position","feature_type","external_name","Source","Biotype","biotype","Parent","2000000","100000","Graph","setYRange","yMinMaxFromFeatures","getYScale","prevHeight","prevRange","maxDP","prevRangeSize","rangeChange","toFixed","visibleFeatures","range","minY","maxY","typeWrapper","featureDataSets","datasets","setNames","sets","dataset","yAxisLabels","yRange","showZeroY","globalAlpha","axesSettings","axisColor","axisLabelColor","scaleLineColor","rescaleableY","rescaleable","hadController","yAxisPlaceholder","yAxisCanvas","guidelinesCanvas","offsetContainer","drawAxes","wasDisabled","axisContext","linesContext","axisWidth","colorIndex","seen","Static","setTracks","textColor","xPos","yPos","xScale","xOffest","xOffset","lockToTrack","afterRemoveTracks","afterUpdateTrackOrder","updateOrder","afterPositionFeatures","userResize","afterCheckHeight","stringified","Scalebar","minPixPerMajor","majorGuideLine","minorGuideLine","divisions","divisor","majorUnit","fromDigit","toDigit","setFeatures","major","minorUnit","lastLabel","guideLines","Scaleline","scaleline","drawnScale","text2","width1","width2","closePath","dbSNP","colorMap","transcript_ablation","splice_acceptor_variant","splice_donor_variant","stop_gained","frameshift_variant","stop_lost","start_lost","transcript_amplification","inframe_insertion","inframe_deletion","missense_variant","protein_altering_variant","splice_region_variant","incomplete_terminal_codon_variant","stop_retained_variant","synonymous_variant","coding_sequence_variant","mature_miRNA_variant","5_prime_UTR_variant","3_prime_UTR_variant","non_coding_transcript_exon_variant","intron_variant","NMD_transcript_variant","non_coding_transcript_variant","upstream_gene_variant","downstream_gene_variant","TFBS_ablation","TFBS_amplification","TF_binding_site_variant","regulatory_region_ablation","regulatory_region_amplification","feature_elongation","regulatory_region_variant","feature_truncation","intergenic_variant","consequence_type","Consequence","Alleles","alleles","populationGenotypes","population_genotypes","population","frequencies","frequency","Genotype","genotype","5000","BAM","bamFile","baiFile","makeBamError","fetchBamError","BED","subfeatures","subfeature","blockSizes","blockStarts","thinFeature","thinFeature1","thinFeature2","thickFeature","lines","thinHeight","thickHeight","filterNumber","originalFeature","thickStart","thickEnd","drawThick","scoreColor","blockCount","GFF","seqId","GTF","VCF","vcfFile","tbiFile","makeVCF","cachedVCF","maxQual","allele","WIG","Bar","span","line","transcripts","Fasta","startByte","lineLength","getStartByte","endByte","Range","startByteRequest","geneIds","seenGenes","ids","logic_name","cdsStart","cdsEnd","exons","cds","exon","sense_intronic","sense_overlapping","processed_transcript","nonsense_mediated_decay","non_stop_decay","antisense","retained_intron","tec","non_coding","ambiguous_orf","disrupted_domain","3prime_overlapping_ncrna","showLegend","reference","ref_allele","drawing","snv","highlightSNVs","outlineSNVs","positionX","positionY","highlightColor","setHighlightColor","BIGBED","bigbedFile","bwReader","BB","BIGWIG","bigwigFile","BW","CHROM","POS","REF","ALT","QUAL","FILTER","INFO","highlightRef","1000","heat","red","green","yZero","values","avg","_features","featuresByDataset","Average","Min","Max","Value","zeroY","binnedFeatures","binStart","binSize","10000","Line","50000","xRange","clickedCoords","setCoords","coordPositions","lastBinSize","baseline","showPopups","dlog","readInt64","jszlib_inflate_buffer","reg2bin","MAX_BIN","seed","isIOS","dasLibErrorHandler","errMsg","alert","dasLibRequestQueue","DASSegment","description","DASSource","a1","a2","uri","dasBaseURI","DASCoords","coordsMatch","c2","taxon","auth","DASSequence","alpha","alphabet","DASFeature","DASGroup","DASLink","desc","DASAlignment","objects","DASStylesheet","styles","DASStyle","DASRegistry","elementValue","childElementOf","hasChildNodes","Node","ELEMENT_NODE","dasLinksOf","links","maybeLinkChilden","ci","linkXML","dasNotesOf","notes","maybeNotes","ni","doCrossDomainRequest","custAuth","XDomainRequest","dom","ActiveXObject","loadXML","responseXML","isBounded","toDASQuery","entryPoints","dasURI","segs","segMin","segMax","seg","segId","segSize","segDesc","seqs","segSeq","rawSeq","space","features_uri","group","gi","adjacent","adj","ti","maxbins","segmentMap","si","segmentXML","segmentID","featureXMLs","dasFeature","spos","epos","te","typeId","typeCv","ori","orientation","pec","groups","groupXML","dasGroup","gg","pi","alignments","aliXMLs","aliXML","ali","objXMLs","oi","objXML","accession","dbSource","dbVersion","blockXMLs","blockXML","segments","segXMLs","segXML","pushStyle","styleHolder","stylesheet","successCB","failureCB","creds","stylesheet_uri","typeXMLs","typeStyle","glyphXMLs","glyphXML","glyph","localName","sources","failure","quri","sourceXMLs","sourceXML","versionXMLs","versionXML","coordXMLs","coordXML","coord","caps","capXMLs","capXML","fep","propXMLs","pusho","source_uri","capabilities","errHandler","xUser","btoa","xPass","NUM_REGEXP","stringToNumbersArray","nums","STRICT_NUM_REGEXP","stringToInt","pushnew","pushnewo","pick","maybeConcat","arrayIndexOf","arrayRemove","makeElement","attribs","makeElementNS","createElementNS","setAttrs","attr_name_cache","setAttr","_attr","lcc","removeChildren","miniJSONify","exc","Observed","listeners","Awaited","textXHR","relativeURL","rel","li","lastIndexOf","addListener","addListenerAndFire","removeListener","provide","await"],"mappings":"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AAA,GAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAEA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,E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","file":"genoverse.min.js","sourcesContent":["var Genoverse = Base.extend({\n  // Defaults\n  urlParamTemplate   : 'r=__CHR__:__START__-__END__', // Overwrite this for your URL style\n  width              : 1000,\n  longestLabel       : 30,\n  defaultLength      : 5000,\n  defaultScrollDelta : 100,\n  tracks             : [],\n  highlights         : [],\n  plugins            : [],\n  dragAction         : 'scroll',         // Options are: scroll, select, off\n  wheelAction        : 'off',            // Options are: zoom, off\n  isStatic           : false,            // If true, will stop drag, select and zoom actions occurring\n  saveable           : false,            // If true, track configuration and ordering will be saved in sessionStorage/localStorage\n  saveKey            : '',               // Default key for sessionStorage/localStorage configuration is 'genoverse'. saveKey will be appended to this if it is set\n  storageType        : 'sessionStorage', // Set to localStorage for permanence\n  autoHideMessages   : true,             // Determines whether to collapse track messages by default\n  trackAutoHeight    : false,            // Determines whether to automatically resize tracks to show all their features (can be overridden by track.autoHeight)\n  hideEmptyTracks    : true,             // Determines whether to hide an automatically resized tracks if it has no features, or to show it empty (can be overridden by track.hideEmpty)\n  genome             : undefined,        // The genome used in the browser - can be an object or a string, which will be used to obtain a javascript file\n  useHash            : undefined,        // If true, window.location.hash is changed on navigation. If false, window.history.pushState is used. If undefined, pushState will be used if present in the browser\n\n  // Default coordinates for initial view, overwrite in your config\n  chr   : 1,\n  start : 1,\n  end   : 1000000,\n\n  constructor: function (config) {\n    var browser = this;\n\n    if (!this.supported()) {\n      return this.die('Your browser does not support this functionality');\n    }\n\n    config = config || {};\n\n    config.container = $(config.container); // Make sure container is a jquery object, jquery recognises itself automatically\n\n    if (!(config.container && config.container.length)) {\n      config.container = $('<div>').appendTo('body');\n    }\n\n    config.container.addClass('genoverse').data('genoverse', this);\n\n    $.extend(this, config);\n\n    this.eventNamespace = '.genoverse.' + (++Genoverse.id);\n    this.events         = { browser: {}, tracks: {} };\n\n    $.when(Genoverse.ready, this.loadGenome(), this.loadPlugins()).always(function () {\n      Genoverse.wrapFunctions(browser);\n      browser.init();\n    });\n  },\n\n  loadGenome: function () {\n    if (typeof this.genome === 'string') {\n      var genomeName = this.genome;\n\n      return $.ajax({\n        url      : Genoverse.origin + 'js/genomes/' + genomeName + '.js',\n        dataType : 'script',\n        context  : this,\n        success  : function () {\n          this.genome = Genoverse.Genomes[genomeName];\n\n          if (!this.genome) {\n            this.die('Unable to load genome ' + genomeName);\n          }\n        }\n      });\n    }\n  },\n\n  loadPlugins: function (plugins) {\n    var browser         = this;\n    var loadPluginsTask = $.Deferred();\n\n    plugins = plugins || this.plugins;\n\n    this.loadedPlugins = this.loadedPlugins || {};\n\n    for (var i in Genoverse.Plugins) {\n      this.loadedPlugins[i] = this.loadedPlugins[i] || 'script';\n    }\n\n    if (typeof plugins === 'string') {\n      plugins = [ plugins ];\n    }\n\n    function loadPlugin(plugin) {\n      var css      = Genoverse.origin + 'css/'        + plugin + '.css';\n      var js       = Genoverse.origin + 'js/plugins/' + plugin + '.js';\n      var deferred = $.Deferred();\n\n      function getCSS() {\n        function done() {\n          browser.loadedPlugins[plugin] = browser.loadedPlugins[plugin] || 'script';\n          deferred.resolve(plugin);\n        }\n\n        if (Genoverse.Plugins[plugin].noCSS || $('link[href=\"' + css + '\"]').length) {\n          return done();\n        }\n\n        $('<link href=\"' + css + '\" rel=\"stylesheet\">').on('load', done).appendTo('body');\n      }\n\n      if (browser.loadedPlugins[plugin] || $('script[src=\"' + js + '\"]').length) {\n        getCSS();\n      } else {\n        $.getScript(js, getCSS);\n      }\n\n      return deferred;\n    }\n\n    function initializePlugin(plugin) {\n      if (typeof Genoverse.Plugins[plugin] !== 'function' || browser.loadedPlugins[plugin] === true) {\n        return [];\n      }\n\n      var requires = Genoverse.Plugins[plugin].requires;\n      var deferred = $.Deferred();\n\n      function init() {\n        if (browser.loadedPlugins[plugin] !== true) {\n          Genoverse.Plugins[plugin].call(browser);\n          browser.container.addClass('gv-' + plugin.replace(/([A-Z])/g, '-$1').toLowerCase() + '-plugin');\n          browser.loadedPlugins[plugin] = true;\n        }\n\n        deferred.resolve();\n      }\n\n      if (requires) {\n        $.when(browser.loadPlugins(requires)).done(init);\n      } else {\n        init();\n      }\n\n      return deferred;\n    }\n\n    // Load plugins css file\n    $.when.apply($, $.map(plugins, loadPlugin)).done(function () {\n      var pluginsLoaded = [];\n      var plugin;\n\n      for (var i = 0; i < arguments.length; i++) {\n        plugin = arguments[i];\n\n        if (browser.loadedPlugins[plugin] !== true) {\n          pluginsLoaded.push(initializePlugin(plugin));\n        }\n      }\n\n      $.when.apply($, pluginsLoaded).always(loadPluginsTask.resolve);\n    });\n\n    return loadPluginsTask;\n  },\n\n  init: function () {\n    var width = this.width;\n\n    this.addDomElements(width);\n    this.addUserEventHandlers();\n\n    if (this.isStatic) {\n      this.dragAction       = this.wheelAction = 'off';\n      this.urlParamTemplate = false;\n    }\n\n    this.tracksById       = {};\n    this.prev             = {};\n    this.legends          = {};\n    this.saveKey          = this.saveKey ? 'genoverse-' + this.saveKey : 'genoverse';\n    this.urlParamTemplate = this.urlParamTemplate || '';\n    this.useHash          = typeof this.useHash === 'boolean' ? this.useHash : typeof window.history.pushState !== 'function';\n    this.textWidth        = document.createElement('canvas').getContext('2d').measureText('W').width;\n    this.labelWidth       = this.labelContainer.outerWidth(true);\n    this.width           -= this.labelWidth;\n    this.paramRegex       = this.urlParamTemplate ? new RegExp('([?&;])' + this.urlParamTemplate\n      .replace(/(\\b(\\w+=)?__CHR__(.)?)/,   '$2([\\\\w\\\\.]+)$3')\n      .replace(/(\\b(\\w+=)?__START__(.)?)/, '$2(\\\\d+)$3')\n      .replace(/(\\b(\\w+=)?__END__(.)?)/,   '$2(\\\\d+)$3') + '([;&])'\n    ) : '';\n\n    var urlCoords = this.getURLCoords();\n    var coords    = urlCoords.chr && urlCoords.start && urlCoords.end ? urlCoords : { chr: this.chr, start: this.start, end: this.end };\n\n    this.chr = coords.chr;\n\n    if (this.genome) {\n      this.chromosomeSize = this.genome[this.chr].size;\n    }\n\n    this.canChangeChr = !!this.genome;\n\n    if (this.saveable) {\n      this.loadConfig();\n    } else {\n      this.addTracks();\n    }\n\n    this.setRange(coords.start, coords.end);\n\n    if (this.highlights.length) {\n      this.addHighlights(this.highlights);\n    }\n  },\n\n  loadConfig: function () {\n    this.defaultTracks = $.extend([], true, this.tracks);\n\n    var config = window[this.storageType].getItem(this.saveKey);\n\n    if (config) {\n      config = JSON.parse(config);\n    } else {\n      return this.addTracks();\n    }\n\n    var tracksByNamespace = Genoverse.getAllTrackTypes();\n    var tracks            = [];\n    var tracksById        = {};\n    var savedConfig       = {};\n    var i, prop, track;\n\n    function setConfig(track, conf) {\n      for (prop in conf) {\n        if (prop === 'config') {\n          savedConfig[conf.id] = conf[prop];\n        } else {\n          if (prop === 'height') {\n            conf[prop] = parseInt(conf[prop], 10);\n\n            if (isNaN(conf[prop])) {\n              continue;\n            }\n          }\n\n          track.prototype[prop] = conf[prop];\n        }\n      }\n    }\n\n    for (i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].prototype.id) {\n        tracksById[this.tracks[i].prototype.id] = this.tracks[i];\n      }\n    }\n\n    for (i = 0; i < config.length; i++) {\n      track = tracksById[config[i].id];\n\n      if (track) {\n        setConfig(track, config[i]);\n        track._fromStorage = true;\n      } else if (tracksByNamespace[config[i].namespace]) {\n        track = tracksByNamespace[config[i].namespace];\n\n        this.trackIds = this.trackIds || {};\n        this.trackIds[track.prototype.id] = this.trackIds[track.prototype.id] || 1;\n\n        config[i].id = config[i].id || track.prototype.id;\n\n        track = track.extend({ id: !tracksById[config[i].id] ? config[i].id : track.prototype.id + (tracksById[track.prototype.id] ? this.trackIds[track.prototype.id]++ : '') });\n\n        setConfig(track, config[i]);\n        tracks.push(track);\n      }\n    }\n\n    for (i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].prototype.id && !this.tracks[i]._fromStorage) {\n        continue;\n      }\n\n      tracks.push(this.tracks[i]);\n    }\n\n    this.tracks      = tracks;\n    this.savedConfig = savedConfig;\n\n    this.addTracks();\n  },\n\n  saveConfig: function () {\n    if (this._constructing || !this.saveable) {\n      return;\n    }\n\n    var config = [];\n    var conf, j;\n\n    for (var i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].id && !(this.tracks[i] instanceof Genoverse.Track.Legend) && !(this.tracks[i] instanceof Genoverse.Track.HighlightRegion)) {\n        // when saving height, initialHeight is the height of the track once margins have been added, while defaultHeight is the DEFINED height of the track.\n        // Subtracting the difference between them gives you back the correct height to input back into the track when loading configuration\n        conf = {\n          id         : this.tracks[i].id,\n          namespace  : this.tracks[i].namespace,\n          order      : this.tracks[i].order,\n          autoHeight : this.tracks[i].autoHeight,\n          height     : this.tracks[i].height - (this.tracks[i].initialHeight - this.tracks[i].defaultHeight)\n        };\n\n        if (this.tracks[i].config) {\n          for (j in this.tracks[i].config) {\n            conf.config    = conf.config || {};\n            conf.config[j] = this.tracks[i].config[j];\n          }\n        }\n\n        config.push(conf);\n      }\n    }\n\n    // Safari in private browsing mode does not allow writes to storage, so wrap in a try/catch to stop errors occuring\n    try {\n      window[this.storageType].setItem(this.saveKey, JSON.stringify(config));\n    } catch (e) {}\n  },\n\n  resetConfig: function () {\n    // Non removable highlights should be re-added after reset\n    var unremovableHighlights = [];\n\n    if (this.tracksById.highlights) {\n      this.tracksById.highlights.removeHighlights();\n      unremovableHighlights = $.map(this.tracksById.highlights.prop('featuresById'), function (h) { return h; });\n    }\n\n    window[this.storageType].removeItem(this.saveKey);\n\n    this._constructing = true;\n    this.savedConfig   = {};\n\n    this.removeTracks($.extend([],    this.tracks)); // Shallow clone to ensure that removeTracks doesn't hit problems when splicing this.tracks\n    this.addTracks($.extend(true, [], this.defaultTracks));\n\n    if (unremovableHighlights.length) {\n      this.addHighlights(unremovableHighlights);\n    }\n\n    this._constructing = false;\n  },\n\n  addDomElements: function (width) {\n    this.menus          = $();\n    this.labelContainer = $('<ul class=\"gv-label-container\">').appendTo(this.container).sortable({\n      items  : 'li:not(.gv-unsortable)',\n      handle : '.gv-handle',\n      axis   : 'y',\n      helper : 'clone',\n      cursor : 'move',\n      update : $.proxy(this.updateTrackOrder, this),\n      start  : function (e, ui) {\n        ui.placeholder.css({ height: ui.item.height(), visibility: 'visible' }).html(ui.item.html());\n        ui.helper.hide();\n      }\n    });\n\n    this.wrapper  = $('<div class=\"gv-wrapper\">').appendTo(this.container);\n    this.selector = $('<div class=\"gv-selector gv-crosshair\">').appendTo(this.wrapper);\n\n    this.selectorControls = this.zoomInHighlight = this.zoomOutHighlight = $();\n\n    this.container.addClass('gv-canvas-container').width(width);\n\n    if (!this.isStatic) {\n      this.selectorControls = $(\n        '<div class=\"gv-selector-controls gv-panel\">'         +\n        '  <div class=\"gv-button-set\">'                       +\n        '  <div class=\"gv-position\">'                         +\n        '    <div class=\"gv-chr\"></div>'                      +\n        '    <div class=\"gv-start-end\">'                      +\n        '      <div class=\"gv-start\"></div>'                  +\n        '      <div class=\"gv-end\"></div>'                    +\n        '    </div>'                                          +\n        '  </div>'                                            +\n        '  </div>'                                            +\n        '  <div class=\"gv-button-set\">'                       +\n        '    <button class=\"gv-zoom-here\">Zoom here</button>' +\n        '  </div>'                                            +\n        '  <div class=\"gv-button-set\">'                       +\n        '    <button class=\"gv-center\">Center</button>'       +\n        '  </div>'                                            +\n        '  <div class=\"gv-button-set\">'                       +\n        '    <button class=\"gv-highlight\">Highlight</button>' +\n        '  </div>'                                            +\n        '  <div class=\"gv-button-set\">'                       +\n        '    <button class=\"gv-cancel\">Cancel</button>'       +\n        '  </div>'                                            +\n        '</div>'\n      ).appendTo(this.selector);\n\n      this.zoomInHighlight = $(\n        '<div class=\"gv-canvas-zoom gv-i\">' +\n        '  <div class=\"gv-t gv-l gv-h\"></div>' +\n        '  <div class=\"gv-t gv-r gv-h\"></div>' +\n        '  <div class=\"gv-t gv-l gv-v\"></div>' +\n        '  <div class=\"gv-t gv-r gv-v\"></div>' +\n        '  <div class=\"gv-b gv-l gv-h\"></div>' +\n        '  <div class=\"gv-b gv-r gv-h\"></div>' +\n        '  <div class=\"gv-b gv-l gv-v\"></div>' +\n        '  <div class=\"gv-b gv-r gv-v\"></div>' +\n        '</div>'\n      ).appendTo('body');\n\n      this.zoomOutHighlight = this.zoomInHighlight.clone().toggleClass('gv-i gv-o').appendTo('body');\n    }\n  },\n\n  addUserEventHandlers: function () {\n    var browser        = this;\n    var documentEvents = {};\n\n    this.container.on({\n      mousedown: function (e) {\n        browser.hideMessages();\n\n        // Only scroll on left click, and do nothing if clicking on a button in selectorControls\n        if ((!e.which || e.which === 1) && !(this === browser.selector[0] && e.target !== this)) {\n          browser.mousedown(e);\n        }\n\n        return false;\n      },\n      mousewheel: function (e, delta, deltaX, deltaY) {\n        if (browser.noWheelZoom) {\n          return true;\n        }\n\n        browser.hideMessages();\n\n        if (deltaY === 0 && deltaX !== 0) {\n          browser.startDragScroll(e);\n          browser.move(-deltaX * 10);\n          browser.stopDragScroll(false);\n        } else if (browser.wheelAction === 'zoom') {\n          return browser.mousewheelZoom(e, delta);\n        }\n      },\n      dblclick: function (e) {\n        if (browser.isStatic) {\n          return true;\n        }\n\n        browser.hideMessages();\n        browser.mousewheelZoom(e, 1);\n      }\n    }, '.gv-image-container, .gv-selector');\n\n    this.selectorControls.on('click', function (e) {\n      var pos = browser.getSelectorPosition();\n\n      switch (e.target.className) {\n        case 'gv-zoom-here' : browser.setRange(pos.start, pos.end, true); break;\n        case 'gv-center'    : browser.moveTo(browser.chr, pos.start, pos.end, true, true); browser.cancelSelect(); break;\n        case 'gv-highlight' : browser.addHighlight({ chr: browser.chr, start: pos.start, end: pos.end });\n        case 'gv-cancel'    : browser.cancelSelect(); break;\n        default             : break;\n      }\n    });\n\n    documentEvents['mouseup'    + this.eventNamespace] = $.proxy(this.mouseup,   this);\n    documentEvents['mousemove'  + this.eventNamespace] = $.proxy(this.mousemove, this);\n    documentEvents['keydown'    + this.eventNamespace] = $.proxy(this.keydown,   this);\n    documentEvents['keyup'      + this.eventNamespace] = $.proxy(this.keyup,     this);\n    documentEvents['mousewheel' + this.eventNamespace] = function (e) {\n      if (browser.wheelAction === 'zoom') {\n        if (browser.wheelTimeout) {\n          clearTimeout(browser.wheelTimeout);\n        }\n\n        browser.noWheelZoom  = browser.noWheelZoom || e.target !== browser.container[0];\n        browser.wheelTimeout = setTimeout(function () { browser.noWheelZoom = false; }, 300);\n      }\n    };\n\n    $(document).on(documentEvents);\n    $(window).on((this.useHash ? 'hashchange' : 'popstate') + this.eventNamespace, $.proxy(this.popState, this));\n  },\n\n  onTracks: function () {\n    var args = $.extend([], arguments);\n    var func = args.shift();\n    var mvc;\n\n    for (var i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].disabled) {\n        continue;\n      }\n\n      mvc = this.tracks[i]._interface[func];\n\n      if (mvc) {\n        this.tracks[i][mvc][func].apply(this.tracks[i][mvc], args);\n      } else if (this.tracks[i][func]) {\n        this.tracks[i][func].apply(this.tracks[i], args);\n      }\n    }\n  },\n\n  reset: function () {\n    this.onTracks.apply(this, [ 'reset' ].concat([].slice.call(arguments)));\n    this.prev  = {};\n    this.scale = 9e99; // arbitrary value so that setScale resets track scales as well\n    this.setRange(this.start, this.end);\n  },\n\n  setWidth: function (width) {\n    this.width  = width;\n    this.width -= this.labelWidth;\n\n    if (this.controlPanel) {\n      this.width -= this.controlPanel.width();\n    }\n\n    if (this.superContainer) {\n      this.superContainer.width(width);\n      this.container.width(this.width);\n    } else {\n      this.container.width(width);\n    }\n\n    this.onTracks('setWidth', this.width);\n    this.reset('resizing');\n  },\n\n  mousewheelZoom: function (e, delta) {\n    var browser = this;\n\n    clearTimeout(this.zoomDeltaTimeout);\n    clearTimeout(this.zoomTimeout);\n\n    this.zoomDeltaTimeout = setTimeout(function () {\n      if (delta > 0) {\n        browser.zoomInHighlight.css({ left: e.pageX - 20, top: e.pageY - 20, display: 'block' }).animate({\n          width: 80, height: 80, top: '-=20', left: '-=20'\n        }, {\n          complete: function () { $(this).css({ width: 40, height: 40, display: 'none' }); }\n        });\n      } else {\n        browser.zoomOutHighlight.css({ left: e.pageX - 40, top: e.pageY - 40, display: 'block' }).animate({\n          width: 40, height: 40, top: '+=20', left: '+=20'\n        }, {\n          complete: function () { $(this).css({ width: 80, height: 80, display: 'none' }); }\n        });\n      }\n    }, 100);\n\n    this.zoomTimeout = setTimeout(function () {\n      browser[delta > 0 ? 'zoomIn' : 'zoomOut'](e.pageX - browser.container.offset().left - browser.labelWidth);\n\n      if (browser.dragAction === 'select') {\n        browser.moveSelector(e);\n      }\n    }, 300);\n\n    return false;\n  },\n\n  startDragScroll: function (e) {\n    this.dragging    = 'scroll';\n    this.scrolling   = !e;\n    this.dragOffset  = e ? e.pageX - this.left : 0;\n    this.dragStart   = this.start;\n    this.scrollDelta = Math.max(this.scale, this.defaultScrollDelta);\n  },\n\n  stopDragScroll: function (update) {\n    this.dragging  = false;\n    this.scrolling = false;\n\n    if (update !== false) {\n      if (this.start !== this.dragStart) {\n        this.updateURL();\n      }\n\n      this.checkTrackHeights();\n    }\n  },\n\n  startDragSelect: function (e) {\n    if (!e) {\n      return false;\n    }\n\n    var x = Math.max(0, e.pageX - this.wrapper.offset().left - 2);\n\n    this.dragging        = 'select';\n    this.selectorStalled = false;\n    this.selectorStart   = x;\n\n    this.selector.css({ left: x, width: 0 }).removeClass('gv-crosshair');\n    this.selectorControls.hide();\n  },\n\n  stopDragSelect: function (e) {\n    if (!e) {\n      return false;\n    }\n\n    this.dragging        = false;\n    this.selectorStalled = true;\n\n    if (this.selector.outerWidth(true) < 2) {\n      return this.cancelSelect();\n    }\n\n    // Calculate the position, so that selectorControls appear near the mouse cursor\n    var top = Math.min(e.pageY - this.wrapper.offset().top, this.wrapper.outerHeight(true) - 1.2 * this.selectorControls.outerHeight(true));\n    var pos = this.getSelectorPosition();\n\n    this.selectorControls.find('.gv-chr').html(this.chr);\n    this.selectorControls.find('.gv-start').html(pos.start);\n    this.selectorControls.find('.gv-end').html(pos.end);\n\n    this.selectorControls.find('.gv-selector-location').html(this.chr + ':' + pos.start + '-' + pos.end).end().css({\n      top  : top,\n      left : this.selector.outerWidth(true) / 2 - this.selectorControls.outerWidth(true) / 2\n    }).show();\n  },\n\n  cancelSelect: function (keepDragging) {\n    if (!keepDragging) {\n      this.dragging = false;\n    }\n\n    this.selectorStalled = false;\n\n    this.selector.addClass('gv-crosshair').width(0);\n    this.selectorControls.hide();\n\n    if (this.dragAction === 'scroll') {\n      this.selector.hide();\n    }\n  },\n\n  dragSelect: function (e) {\n    var x = e.pageX - this.wrapper.offset().left;\n\n    if (x > this.selectorStart) {\n      this.selector.css({\n        left  : this.selectorStart,\n        width : Math.min(x - this.selectorStart, this.width - this.selectorStart - 1)\n      });\n    } else {\n      this.selector.css({\n        left  : Math.max(x, 1),\n        width : Math.min(this.selectorStart - x, this.selectorStart - 1)\n      });\n    }\n  },\n\n  setDragAction: function (action, keepSelect) {\n    this.dragAction = action;\n\n    if (this.dragAction === 'select') {\n      this.selector.addClass('gv-crosshair').width(0).show();\n    } else if (keepSelect && !this.selector.hasClass('gv-crosshair')) {\n      this.selectorStalled = false;\n    } else {\n      this.cancelSelect();\n      this.selector.hide();\n    }\n  },\n\n  toggleSelect: function (on) {\n    if (on) {\n      this.prev.dragAction = 'scroll';\n      this.setDragAction('select');\n    } else {\n      this.setDragAction(this.prev.dragAction, true);\n      delete this.prev.dragAction;\n    }\n  },\n\n  setWheelAction: function (action) {\n    this.wheelAction = action;\n  },\n\n  keydown: function (e) {\n    if (e.which === 16 && !this.prev.dragAction && this.dragAction === 'scroll') { // shift key\n      this.toggleSelect(true);\n    } else if (e.which === 27) { // escape key\n      this.cancelSelect();\n      this.closeMenus();\n    }\n  },\n\n  keyup: function (e) {\n    if (e.which === 16 && this.prev.dragAction) { // shift key\n      this.toggleSelect();\n    }\n  },\n\n  mousedown: function (e) {\n    if (e.shiftKey) {\n      if (this.dragAction === 'scroll') {\n        this.toggleSelect(true);\n      }\n    } else if (this.prev.dragAction) {\n      this.toggleSelect();\n    }\n\n    switch (this.dragAction) {\n      case 'select' : this.startDragSelect(e); break;\n      case 'scroll' : this.startDragScroll(e); break;\n      default       : break;\n    }\n  },\n\n  mouseup: function (e) {\n    switch (this.dragging) {\n      case 'select' : this.stopDragSelect(e); break;\n      case 'scroll' : this.stopDragScroll();  break;\n      default       : break;\n    }\n  },\n\n  mousemove: function (e) {\n    if (this.dragging && !this.scrolling) {\n      switch (this.dragAction) {\n        case 'scroll' : this.move(e.pageX - this.dragOffset - this.left); break;\n        case 'select' : this.dragSelect(e); break;\n        default       : break;\n      }\n    } else if (this.dragAction === 'select') {\n      this.moveSelector(e);\n    }\n  },\n\n  moveSelector: function (e) {\n    if (!this.selectorStalled) {\n      this.selector.css('left', e.pageX - this.wrapper.offset().left - 2);\n    }\n  },\n\n  move: function (delta) {\n    var scale = this.scale;\n    var start, end, left;\n\n    if (scale > 1) {\n      delta = Math.round(delta / scale) * scale; // Force stepping by base pair when in small regions\n    }\n\n    left = this.left + delta;\n\n    if (left <= this.minLeft) {\n      left  = this.minLeft;\n      delta = this.minLeft - this.left;\n    } else if (left >= this.maxLeft) {\n      left  = this.maxLeft;\n      delta = this.maxLeft - this.left;\n    }\n\n    start = Math.max(Math.round(this.start - delta / scale), 1);\n    end   = start + this.length - 1;\n\n    if (end > this.chromosomeSize) {\n      end   = this.chromosomeSize;\n      start = end - this.length + 1;\n    }\n\n    this.left = left;\n\n    if (start !== this.dragStart) {\n      this.closeMenus();\n      this.cancelSelect(true);\n    }\n\n    this.onTracks('move', delta);\n    this.setRange(start, end);\n  },\n\n  moveTo: function (chr, start, end, update, keepLength) {\n    if (typeof chr !== 'undefined' && chr != this.chr) {\n      if (this.canChangeChr) {\n        if (this.genome && this.genome[chr]) {\n          this.chr            = chr;\n          this.chromosomeSize = this.genome[chr].size;\n          this.start          = this.end = this.scale = -1;\n        } else {\n          this.die('Chromosome cannot be found in genome');\n        }\n\n        this.onTracks('changeChr');\n      } else {\n        this.die('Chromosome changing is not allowed');\n      }\n    }\n\n    this.setRange(start, end, update, keepLength);\n\n    if (this.prev.scale === this.scale) {\n      this.left = Math.max(Math.min(this.left + Math.round((this.prev.start - this.start) * this.scale), this.maxLeft), this.minLeft);\n      this.onTracks('moveTo', this.chr, this.start, this.end, (this.prev.start - this.start) * this.scale);\n    }\n  },\n\n  setRange: function (start, end, update, keepLength) {\n    this.prev.start = this.start;\n    this.prev.end   = this.end;\n    this.start      = Math.min(Math.max(typeof start === 'number' ? Math.floor(start) : parseInt(start, 10), 1), this.chromosomeSize);\n    this.end        = Math.max(Math.min(typeof end   === 'number' ? Math.floor(end)   : parseInt(end,   10), this.chromosomeSize), 1);\n\n    if (this.end < this.start) {\n      this.end = Math.min(this.start + this.defaultLength - 1, this.chromosomeSize);\n    }\n\n    if (keepLength && this.end - this.start + 1 !== this.length) {\n      if (this.end === this.chromosomeSize) {\n        this.start = this.end - this.length + 1;\n      } else {\n        var center = (this.start + this.end) / 2;\n        this.start = Math.max(Math.floor(center - this.length / 2), 1);\n        this.end   = this.start + this.length - 1;\n\n        if (this.end > this.chromosomeSize) {\n          this.end   = this.chromosomeSize;\n          this.start = this.end - this.length + 1;\n        }\n      }\n    } else {\n      this.length = this.end - this.start + 1;\n    }\n\n    this.setScale();\n\n    if (update === true && (this.prev.start !== this.start || this.prev.end !== this.end)) {\n      this.updateURL();\n    }\n  },\n\n  setScale: function () {\n    this.prev.scale  = this.scale;\n    this.scale       = this.width / this.length;\n    this.scaledStart = this.start * this.scale;\n\n    if (this.prev.scale !== this.scale) {\n      this.left        = 0;\n      this.minLeft     = Math.round((this.end   - this.chromosomeSize) * this.scale);\n      this.maxLeft     = Math.round((this.start - 1) * this.scale);\n      this.labelBuffer = Math.ceil(this.textWidth / this.scale) * this.longestLabel;\n\n      if (this.prev.scale) {\n        this.cancelSelect();\n        this.closeMenus();\n      }\n\n      this.onTracks('setScale');\n      this.onTracks('makeFirstImage');\n    }\n  },\n\n  checkTrackHeights: function () {\n    if (this.dragging) {\n      return;\n    }\n\n    this.onTracks('checkHeight');\n  },\n\n  resetTrackHeights: function () {\n    this.onTracks('resetHeight');\n  },\n\n  zoomIn: function (x) {\n    if (!x) {\n      x = this.width / 2;\n    }\n\n    var start = Math.round(this.start + x / (2 * this.scale));\n    var end   = this.length === 2 ? start : Math.round(start + (this.length - 1) / 2);\n\n    this.setRange(start, end, true);\n  },\n\n  zoomOut: function (x) {\n    if (!x) {\n      x = this.width / 2;\n    }\n\n    var start = Math.round(this.start - x / this.scale);\n    var end   = this.length === 1 ? start + 1 : Math.round(start + 2 * (this.length - 1));\n\n    this.setRange(start, end, true);\n  },\n\n  addTrack: function (track, after) {\n    return this.addTracks([ track ], after)[0];\n  },\n\n  addTracks: function (tracks, after) {\n    var defaults = {\n      browser : this,\n      width   : this.width\n    };\n\n    var push = !!tracks;\n    var order;\n\n    tracks = tracks || $.extend([], this.tracks);\n\n    if (push && !$.grep(this.tracks, function (t) { return typeof t === 'function'; }).length) {\n      var insertAfter = (after ? $.grep(this.tracks, function (t) { return t.order < after; }) : this.tracks).sort(function (a, b) { return b.order - a.order; })[0];\n\n      if (insertAfter) {\n        order = insertAfter.order + 0.1;\n      }\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      tracks[i] = new tracks[i]($.extend(defaults, {\n        namespace : Genoverse.getTrackNamespace(tracks[i]),\n        order     : typeof order === 'number' ? order : i,\n        config    : this.savedConfig ? $.extend(true, {}, this.savedConfig[tracks[i].prototype.id]) : undefined\n      }));\n\n      if (tracks[i].id) {\n        this.tracksById[tracks[i].id] = tracks[i];\n      }\n\n      if (push) {\n        this.tracks.push(tracks[i]);\n      } else {\n        this.tracks[i] = tracks[i];\n      }\n    }\n\n    this.sortTracks();\n    this.saveConfig();\n\n    return tracks;\n  },\n\n  removeTrack: function (track) {\n    this.removeTracks((track.prop('childTracks') || []).concat(track));\n  },\n\n  removeTracks: function (tracks) {\n    var i = tracks.length;\n    var track, j;\n\n    while (i--) {\n      track = tracks[i];\n      j     = this.tracks.length;\n\n      while (j--) {\n        if (track === this.tracks[j]) {\n          this.tracks.splice(j, 1);\n          break;\n        }\n      }\n\n      if (track.id) {\n        delete this.tracksById[track.id];\n      }\n\n      track.destructor(); // Destroy DOM elements and track itself\n    }\n\n    this.saveConfig();\n  },\n\n  sortTracks: function () {\n    if ($.grep(this.tracks, function (t) { return typeof t !== 'object'; }).length) {\n      return;\n    }\n\n    var sorted     = $.extend([], this.tracks).sort(function (a, b) { return a.order - b.order; });\n    var labels     = $();\n    var containers = $();\n    var container;\n\n    for (var i = 0; i < sorted.length; i++) {\n      if (sorted[i].prop('parentTrack')) {\n        continue;\n      }\n\n      if (!sorted[i].prop('fixedOrder')) {\n        sorted[i].prop('order', i);\n      }\n\n      container = sorted[i].prop('superContainer') || sorted[i].prop('container');\n\n      if (sorted[i].prop('menus').length) {\n        sorted[i].prop('top', container.position().top);\n      }\n\n      labels.push(sorted[i].prop('label')[0]);\n      containers.push(container[0]);\n    }\n\n    this.labelContainer.append(labels);\n    this.wrapper.append(containers);\n\n    // Correct the order\n    this.tracks = sorted;\n\n    labels.map(function () { return $(this).data('track'); }).each(function () {\n      if (this.prop('menus').length) {\n        var diff = (this.prop('superContainer') || this.prop('container')).position().top - this.prop('top');\n        this.prop('menus').css('top', function (i, top) { return parseInt(top, 10) + diff; });\n        this.prop('top', null);\n      }\n    });\n\n    sorted = labels = containers = null;\n  },\n\n  updateTrackOrder: function (e, ui) {\n    var track = ui.item.data('track');\n\n    if (track.prop('unsortable') || track.prop('fixedOrder')) {\n      return;\n    }\n\n    var prev = ui.item.prev().data('track');\n    var next = ui.item.next().data('track');\n    var p    = prev ? prev.prop('order') : 0;\n    var n    = next ? next.prop('order') : 0;\n    var o    = p || n;\n    var order;\n\n    if (prev && next && Math.floor(n) === Math.floor(p)) {\n      order = p + (n - p) / 2;\n    } else {\n      order = o + (p ? 1 : -1) * Math.abs(Math.round(o) - o || 1) / 2;\n    }\n\n    track.prop('order', order);\n\n    this.sortTracks();\n    this.saveConfig();\n  },\n\n  updateURL: function () {\n    if (this.urlParamTemplate) {\n      if (this.useHash) {\n        window.location.hash = this.getQueryString();\n      } else {\n        window.history.pushState({}, '', this.getQueryString());\n      }\n    }\n  },\n\n  popState: function () {\n    var coords = this.getURLCoords();\n    var start  = parseInt(coords.start, 10);\n    var end    = parseInt(coords.end,   10);\n\n    if (\n      (coords.chr && coords.chr != this.chr) ||\n      (coords.start && !(start === this.start && end === this.end))\n    ) {\n      // FIXME: a back action which changes scale or a zoom out will reset tracks, since scrollStart will not be the same as it was before\n      this.moveTo(coords.chr, start, end);\n    }\n\n    this.closeMenus();\n    this.hideMessages();\n  },\n\n  getURLCoords: function () {\n    var match  = ((this.useHash ? window.location.hash.replace(/^#/, '?') || window.location.search : window.location.search) + '&').match(this.paramRegex);\n    var coords = {};\n    var i      = 0;\n\n    if (!match) {\n      return coords;\n    }\n\n    match = match.slice(2, -1);\n\n    $.each(this.urlParamTemplate.split('__'), function () {\n      var tmp = this.match(/^(CHR|START|END)$/);\n\n      if (tmp) {\n        coords[tmp[1].toLowerCase()] = tmp[1] === 'CHR' ? match[i++] : parseInt(match[i++], 10);\n      }\n    });\n\n    return coords;\n  },\n\n  getQueryString: function () {\n    var location = this.urlParamTemplate\n      .replace('__CHR__',   this.chr)\n      .replace('__START__', this.start)\n      .replace('__END__',   this.end);\n\n    return this.useHash ? location : window.location.search ? (window.location.search + '&').replace(this.paramRegex, '$1' + location + '$5').slice(0, -1) : '?' + location;\n  },\n\n  getChromosomeSize: function (chr) {\n    return chr && this.genome && this.genome[chr] ? this.genome[chr].size : this.chromosomeSize;\n  },\n\n  supported: function () {\n    var el = document.createElement('canvas');\n    return !!(el.getContext && el.getContext('2d'));\n  },\n\n  die: function (error, el) {\n    if (el && el.length) {\n      el.html(error);\n    } else {\n      throw error;\n    }\n\n    this.failed = true;\n  },\n\n  menuTemplate: $(\n    '<div class=\"gv-menu\">'                                            +\n      '<div class=\"gv-close gv-menu-button fa fa-times-circle\"></div>' +\n      '<div class=\"gv-menu-loading\">Loading...</div>'                  +\n      '<div class=\"gv-menu-content\">'                                  +\n        '<div class=\"gv-title\"></div>'                                 +\n        '<a class=\"gv-focus\" href=\"#\">Focus here</a>'                  +\n        '<a class=\"gv-highlight\" href=\"#\">Highlight this feature</a>'  +\n        '<table></table>'                                              +\n      '</div>'                                                         +\n    '</div>'\n  ).on('click', function (e) {\n    if ($(e.target).hasClass('gv-close')) {\n      $(this).fadeOut('fast', function () {\n        var data = $(this).data();\n\n        if (data.track) {\n          data.track.prop('menus', data.track.prop('menus').not(this));\n        }\n\n        data.browser.menus = data.browser.menus.not(this);\n      });\n    }\n  }),\n\n  makeMenu: function (features, event, track) {\n    if (!features) {\n      return false;\n    }\n\n    if (!Array.isArray(features)) {\n      features = [ features ];\n    }\n\n    if (features.length === 0) {\n      return false;\n    } else if (features.length === 1) {\n      return this.makeFeatureMenu(features[0], event, track);\n    }\n\n    var browser   = this;\n    var menu      = this.menuTemplate.clone(true).data({ browser: this });\n    var contentEl = $('.gv-menu-content', menu).addClass('gv-menu-content-first');\n    var table     = $('table', contentEl);\n\n    $('.gv-focus, .gv-highlight, .gv-menu-loading', menu).remove();\n    $('.gv-title', menu).html(features.length + ' features');\n\n    $.each(features.sort(function (a, b) { return a.start - b.start; }), function (i, feature) {\n      var location = feature.chr + ':' + feature.start + (feature.end === feature.start ? '' : '-' + feature.end);\n      var title    = feature.menuLabel || feature.name || (Array.isArray(feature.label) ? feature.label.join(' ') : feature.label) || (feature.id + '');\n\n      $('<a href=\"#\">').html(title.match(location) ? title : (location + ' ' + title)).on('click', function (e) {\n        browser.makeFeatureMenu(feature, e, track);\n        return false;\n      }).appendTo($('<td>').appendTo($('<tr>').appendTo(table)));\n    });\n\n    $('<div class=\"gv-menu-scroll-wrapper\">').append(table).appendTo(contentEl)\n\n    menu.appendTo(this.superContainer || this.container).show();\n\n    if (event) {\n      menu.css({ left: 0, top: 0 }).position({ of: event, my: 'left top', collision: 'flipfit' });\n    }\n\n    this.menus = this.menus.add(menu);\n\n    if (track) {\n      track.prop('menus', track.prop('menus').add(menu));\n    }\n\n    return menu;\n  },\n\n  makeFeatureMenu: function (feature, e, track) {\n    var browser   = this;\n    var container = this.superContainer || this.container;\n    var menu, content, loading, getMenu, isDeferred, i, j,  el, chr, start, end, linkData, key, columns, colspan;\n\n    function focus() {\n      var data    = $(this).data();\n      var length  = data.end - data.start + 1;\n      var context = Math.max(Math.round(length / 4), 25);\n\n      browser.moveTo(data.chr, data.start - context, data.end + context, true);\n\n      return false;\n    }\n\n    function highlight() {\n      browser.addHighlight($(this).data());\n      return false;\n    }\n\n    if (!feature.menuEl) {\n      menu       = browser.menuTemplate.clone(true).data({ browser: browser, feature: feature });\n      content    = $('.gv-menu-content', menu).remove();\n      loading    = $('.gv-menu-loading', menu);\n      getMenu    = track ? track.controller.populateMenu(feature) : feature;\n      isDeferred = typeof getMenu === 'object' && typeof getMenu.promise === 'function';\n\n      if (isDeferred) {\n        loading.show();\n      }\n\n      $.when(getMenu).done(function (properties) {\n        if (!Array.isArray(properties)) {\n          properties = [ properties ];\n        }\n\n        for (i = 0; i < properties.length; i++) {\n          table   = '';\n          el      = content.clone().addClass(i ? '' : 'gv-menu-content-first').appendTo(menu);\n          chr     = typeof properties[i].chr !== 'undefined' ? properties[i].chr : feature.chr;\n          start   = parseInt(typeof properties[i].start !== 'undefined' ? properties[i].start : feature.start, 10);\n          end     = parseInt(typeof properties[i].end   !== 'undefined' ? properties[i].end   : feature.end,   10);\n          columns = Math.max.apply(Math, $.map(properties[i], function (v) { return Array.isArray(v) ? v.length : 1; }));\n\n          $('.gv-title', el)[properties[i].title ? 'html' : 'remove'](properties[i].title);\n\n          if (track && start && end && !browser.isStatic) {\n            linkData = { chr: chr, start: start, end: Math.max(end, start), label: feature.label || (properties[i].title || '').replace(/<[^>]+>/g, ''), color: feature.color };\n\n            $('.gv-focus',     el).data(linkData).on('click', focus);\n            $('.gv-highlight', el).data(linkData).on('click', highlight);\n          } else {\n            $('.gv-focus, .gv-highlight', el).remove();\n          }\n\n          for (key in properties[i]) {\n            if (/^start|end$/.test(key) && properties[i][key] === false) {\n              continue;\n            }\n\n            if (key !== 'title') {\n              colspan = properties[i][key] === '' ? ' colspan=\"' + (columns + 1) + '\"' : '';\n              table  += '<tr><td' + colspan + '>' + key + '</td>';\n\n              if (!colspan) {\n                if (Array.isArray(properties[i][key])) {\n                  for (j = 0; j < properties[i][key].length; j++) {\n                    table += '<td>' + properties[i][key][j] + '</td>';\n                  }\n                } else if (columns === 1) {\n                  table += '<td>' + properties[i][key] + '</td>';\n                } else {\n                  table += '<td colspan=\"' + columns + '\">' + properties[i][key] + '</td>';\n                }\n              }\n\n              table += '</tr>';\n            }\n          }\n\n          $('table', el)[table ? 'html' : 'remove'](table);\n        }\n\n        if (isDeferred) {\n          loading.hide();\n        }\n      });\n\n      if (track) {\n        menu.addClass(track.id).data('track', track);\n      }\n\n      feature.menuEl = menu.appendTo(container);\n    } else {\n      feature.menuEl.appendTo(container); // Move the menu to the end of the container again, so that it will always be on top of other menus\n    }\n\n    browser.menus = browser.menus.add(feature.menuEl);\n\n    if (track) {\n      track.prop('menus', track.prop('menus').add(feature.menuEl));\n    }\n\n    feature.menuEl.show(); // Must show before positioning, else position will be wrong\n\n    if (e) {\n      feature.menuEl.css({ left: 0, top: 0 }).position({ of: e, my: 'left top', collision: 'flipfit' });\n    }\n\n    return feature.menuEl;\n  },\n\n  closeMenus: function (obj) {\n    obj = obj || this;\n\n    obj.menus.filter(':visible').children('.gv-close').trigger('click');\n    obj.menus = $();\n  },\n\n  hideMessages: function () {\n    if (this.autoHideMessages) {\n      this.wrapper.find('.gv-message-container').addClass('gv-collapsed');\n    }\n  },\n\n  getSelectorPosition: function () {\n    var left  = this.selector.position().left;\n    var width = this.selector.outerWidth(true);\n    var start = Math.round(left / this.scale) + this.start;\n    var end   = Math.round((left + width) / this.scale) + this.start - 1;\n        end   = end <= start ? start : end;\n\n    return { start: start, end: end, left: left, width: width };\n  },\n\n  addHighlight: function (highlight) {\n    this.addHighlights([ highlight ]);\n  },\n\n  addHighlights: function (highlights) {\n    if (!this.tracksById.highlights) {\n      this.addTrack(Genoverse.Track.HighlightRegion);\n    }\n\n    this.tracksById.highlights.addHighlights(highlights);\n  },\n\n  on: function (events, obj, fn, once) {\n    var browser  = this;\n    var eventMap = {};\n    var i, j, f, fnString, event;\n\n    function makeEventMap(types, handler) {\n      types = types.split(' ');\n\n      for (var j = 0; j < types.length; j++) {\n        eventMap[types[j]] = (eventMap[types[j]] || []).concat(handler);\n      }\n    }\n\n    function makeFnString(func) {\n      return func.toString();\n    }\n\n    function compare(func) {\n      f = func.toString();\n\n      for (j = 0; j < fnString.length; j++) {\n        if (f === fnString[j]) {\n          return true;\n        }\n      }\n    }\n\n    if (typeof events === 'object') {\n      for (i in events) {\n        makeEventMap(i, events[i]);\n      }\n\n      obj = obj || this;\n    } else {\n      if (typeof fn === 'undefined') {\n        fn  = obj;\n        obj = this;\n      }\n\n      makeEventMap(events, fn);\n    }\n\n    var type = obj instanceof Genoverse.Track || obj === 'tracks' ? 'tracks' : 'browser';\n\n    for (i in eventMap) {\n      event = i + (once ? '.once' : '');\n\n      browser.events[type][event] = browser.events[type][event] || [];\n      fnString = $.map(eventMap[i], makeFnString);\n\n      if (!$.grep(browser.events[type][event], compare).length) {\n        browser.events[type][event].push.apply(browser.events[type][event], eventMap[i]);\n      }\n    }\n  },\n\n  once: function (events, obj, fn) {\n    this.on(events, obj, fn, true);\n  },\n\n  destroy: function () {\n    this.onTracks('destructor');\n    (this.superContainer || this.container).empty();\n\n    if (this.zoomInHighlight) {\n      this.zoomInHighlight.add(this.zoomOutHighlight).remove();\n    }\n\n    $(window).add(document).off(this.eventNamespace);\n\n    for (var key in this) {\n      delete this[key];\n    }\n  }\n}, {\n  id      : 0,\n  ready   : $.Deferred(),\n  origin  : (($('script[src]').filter(function () { return /\\/(?:Genoverse|genoverse\\.min.*)\\.js$/.test(this.src); }).attr('src') || '').match(/(.*)js\\/\\w+/) || [])[1] || '',\n  Genomes : {},\n  Plugins : {},\n\n  wrapFunctions: function (obj) {\n    for (var key in obj) {\n      if (typeof obj[key] === 'function' && typeof obj[key].ancestor !== 'function' && !key.match(/^(base|extend|constructor|on|once|prop|loadPlugins|loadGenome)$/)) {\n        Genoverse.functionWrap(key, obj);\n      }\n    }\n  },\n\n  /**\n   * functionWrap - wraps event handlers and adds debugging functionality\n   **/\n  functionWrap: function (key, obj) {\n    obj.functions = obj.functions || {};\n\n    if (obj.functions[key] || /^(before|after)/.test(key)) {\n      return;\n    }\n\n    var func      = key.substring(0, 1).toUpperCase() + key.substring(1);\n    var isBrowser = obj instanceof Genoverse;\n    var mainObj   = isBrowser || obj instanceof Genoverse.Track ? obj : obj.track;\n    var events    = isBrowser ? obj.events.browser : obj.browser.events.tracks;\n    var debug;\n\n    if (mainObj.debug) {\n      debug = [ isBrowser ? 'Genoverse' : mainObj.id || mainObj.name || 'Track' ];\n\n      if (!isBrowser && obj !== mainObj) {\n        debug.push(obj instanceof Genoverse.Track.Controller ? 'Controller' : obj instanceof Genoverse.Track.Model ? 'Model' : 'View');\n      }\n\n      debug = debug.concat(key).join('.');\n    }\n\n    obj.functions[key] = obj[key];\n\n    obj[key] = function () {\n      var args          = [].slice.call(arguments);\n      var currentConfig = (this._currentConfig || (this.track ? this.track._currentConfig : {}) || {}).func;\n      var rtn;\n\n      // Debugging functionality\n      // Enabled by \"debug\": true || 'time' || { functionName: true, ...} option\n      if (mainObj.debug === true) { // if \"debug\": true, simply log function call\n        console.log(debug);\n      } else if (mainObj.debug === 'time' || (typeof mainObj.debug === 'object' && mainObj.debug[key])) { // if debug: 'time' || { functionName: true, ...}, log function time\n        console.time('time: ' + debug);\n      }\n\n      function trigger(when) {\n        var once  = events[when + func + '.once'] || [];\n        var funcs = (events[when + func] || []).concat(once, typeof mainObj[when + func] === 'function' ? mainObj[when + func] : []);\n\n        if (once.length) {\n          delete events[when + func + '.once'];\n        }\n\n        for (var i = 0; i < funcs.length; i++) {\n          funcs[i].apply(this, args);\n        }\n      }\n\n      trigger.call(this, 'before');\n\n      if (currentConfig && currentConfig[key]) {\n         // override to add a value for this.base\n        rtn = function () {\n          this.base = this.functions[key] || function () {};\n          return currentConfig[key].apply(this, arguments);\n        }.apply(this, args);\n      } else {\n        rtn = this.functions[key].apply(this, args);\n      }\n\n      trigger.call(this, 'after');\n\n      if (mainObj.debug === 'time' || (typeof mainObj.debug === 'object' && mainObj.debug[key])) {\n        console.timeEnd('time: ' + debug);\n      }\n\n      return rtn;\n    };\n  },\n\n  getAllTrackTypes: function (namespace, n) {\n    namespace = namespace || Genoverse.Track;\n\n    if (n) {\n      namespace = namespace[n];\n    }\n\n    if (!namespace) {\n      return [];\n    }\n\n    var trackTypes = {};\n\n    $.each(namespace, function (type, func) {\n      if (typeof func === 'function' && !Base[type] && !/^(Controller|Model|View)$/.test(type)) {\n        $.each(Genoverse.getAllTrackTypes(namespace, type), function (subtype, fn) {\n          if (typeof fn === 'function') {\n            trackTypes[type + '.' + subtype] = fn;\n          }\n        });\n\n        trackTypes[type] = func;\n      }\n    });\n\n    return trackTypes;\n  },\n\n  getTrackNamespace: function (track) {\n    var trackTypes = Genoverse.getAllTrackTypes();\n    var namespaces = $.map(trackTypes, function (constructor, name) { return track === constructor || track.prototype instanceof constructor ? name : null }); // Find all namespaces which this track could be\n    var j          = namespaces.length;\n    var i;\n\n    // Find the most specific namespace for this track - the one which isn't a parent of any other namespaces this track could be\n    while (namespaces.length > 1) {\n      for (i = 0; i < namespaces.length - 1; i++) {\n        if (trackTypes[namespaces[i]].prototype instanceof trackTypes[namespaces[i + 1]]) {\n          namespaces.splice(i + 1, 1);\n          break;\n        } else if (trackTypes[namespaces[i + 1]].prototype instanceof trackTypes[namespaces[i]]) {\n          namespaces.splice(i, 1);\n          break;\n        }\n      }\n\n      if (j-- < 0) {\n        break; // Stop infinite loop if something went really wrong\n      }\n    }\n\n    return namespaces[0];\n  }\n});\n\n$(function () {\n  if ($('link[href^=\"' + Genoverse.origin + 'css/genoverse.css\"]').length) {\n    Genoverse.ready.resolve();\n  } else {\n    $('<link href=\"' + Genoverse.origin + 'css/genoverse.css\" rel=\"stylesheet\">').appendTo('body').on('load', Genoverse.ready.resolve);\n  }\n});\n\nwindow.Genoverse = Genoverse;\n\nif (typeof module === 'object' && typeof module.exports === 'object') {\n  module.exports = Genoverse;\n}\n","Genoverse.Track = Base.extend({\n  height     : 12,        // The height of the gv-track-container div\n  margin     : 2,         // The spacing between this track and the next\n  resizable  : true,      // Is the track resizable - can be true, false or 'auto'. Auto means the track will automatically resize to show all features, but the user cannot resize it themselves.\n  border     : true,      // Does the track have a bottom border\n  unsortable : false,     // Is the track unsortable by the user\n  fixedOrder : false,     // Is the track unsortable by the user or automatically - use for tracks which always need to go at the top/bottom\n  invert     : false,     // If true, features are drawn from the bottom of the track, rather than from the top. This is actually achieved by performing a CSS transform on the gv-image-container div\n  legend     : false,     // Does the track have a legend - can be true, false, or a Genoverse.Track.Legend extension/child class.\n  children   : undefined, // Does the track have any child tracks - can be one or an array of Genoverse.Track extension/child classes.\n  name       : undefined, // The name of the track, which appears in its label\n  autoHeight : undefined, // Does the track automatically resize so that all the features are visible\n  hideEmpty  : undefined, // If the track automatically resizes, should it be hidden when there are no features, or should an empty track still be shown\n\n  constructor: function (config) {\n    if (this.stranded || config.stranded) {\n      this.controller = this.controller || Genoverse.Track.Controller.Stranded;\n      this.model      = this.model      || Genoverse.Track.Model.Stranded;\n    }\n\n    this.models = {};\n    this.views  = {};\n\n    this.setInterface();\n    this.extend(config);\n    this.setDefaults();\n    this.setEvents();\n\n    Genoverse.wrapFunctions(this);\n\n    this.setLengthMap();\n    this.setMVC();\n\n    if (this.browser.scale) {\n      this.controller.setScale();\n      this.controller.makeFirstImage();\n    }\n\n    if (this.children) {\n      this.addChildTracks();\n    }\n\n    if (this.legend) {\n      this.addLegend();\n    }\n  },\n\n  setEvents: $.noop,\n\n  setDefaults: function () {\n    this.config            = this.config         || {};\n    this.configSettings    = this.configSettings || {};\n    this.defaultConfig     = this.defaultConfig  || {};\n    this.controls          = this.controls       || [];\n    this.defaultHeight     = this.height;\n    this.defaultAutoHeight = this.autoHeight;\n    this.autoHeight        = typeof this.autoHeight !== 'undefined' ? this.autoHeight : this.browser.trackAutoHeight;\n    this.hideEmpty         = typeof this.hideEmpty  !== 'undefined' ? this.hideEmpty  : this.browser.hideEmptyTracks;\n    this.height           += this.margin;\n    this.initialHeight     = this.height;\n\n    if (this.resizable === 'auto') {\n      this.autoHeight = true;\n    }\n\n    this.setDefaultConfig();\n  },\n\n  setDefaultConfig: function () {\n    for (var i in this.defaultConfig) {\n      if (typeof this.config[i] === 'undefined') {\n        this.config[i] = this.defaultConfig[i];\n      }\n    }\n\n    this._setCurrentConfig();\n  },\n\n  setInterface: function () {\n    var mvc = [ 'Controller', 'Model', 'View', 'controller', 'model', 'view' ];\n    var prop;\n\n    this._interface = {};\n\n    for (var i = 0; i < 3; i++) {\n      for (prop in Genoverse.Track[mvc[i]].prototype) {\n        if (!/^(constructor|init|reset|setDefaults|base|extend|lengthMap)$/.test(prop)) {\n          this._interface[prop] = mvc[i + 3];\n        }\n      }\n    }\n  },\n\n  setMVC: function () {\n    if (this.model && typeof this.model.abort === 'function') { // TODO: don't abort unless model is changed?\n      this.model.abort();\n    }\n\n    this._defaults = this._defaults || {};\n\n    var settings           = $.extend(true, {}, this.constructor.prototype, this.getSettingsForLength()[1]); // model, view, options\n    var controllerSettings = { prop: {}, func: {} };\n    var trackSettings      = {};\n    var i;\n\n    settings.controller = settings.controller || this.controller || Genoverse.Track.Controller;\n\n    for (i in settings) {\n      if (!/^(constructor|init|reset|setDefaults|base|extend|lengthMap)$/.test(i) && isNaN(i)) {\n        if (this._interface[i] === 'controller') {\n          controllerSettings[typeof settings[i] === 'function' ? 'func' : 'prop'][i] = settings[i];\n        }\n        // If we allow trackSettings to overwrite the MVC properties, we will potentially lose of information about instantiated objects that the track needs to perform future switching correctly.\n        else if (!Genoverse.Track.prototype.hasOwnProperty(i) && !/^(controller|models|views|config|disabled)$/.test(i)) {\n          if (typeof this._defaults[i] === 'undefined') {\n            this._defaults[i] = this[i];\n          }\n\n          trackSettings[i] = settings[i];\n        }\n      }\n    }\n\n    for (i in this._defaults) {\n      if (typeof trackSettings[i] === 'undefined') {\n        trackSettings[i] = this._defaults[i];\n      }\n    }\n\n    // If there are configSettings for the track, ensure that any properties in _currentConfig are set for the model/view/controller/track as appropriate.\n    // Functions in _currentConfig are accessed via Genoverse.functionWrap, so nothing needs to be done with them here.\n    if (!$.isEmptyObject(this._currentConfig)) {\n      var changed = {};\n      var type;\n\n      for (i in this._currentConfig.prop) {\n        type = this._interface[i];\n\n        if (/model|view/.test(type)) {\n          if (trackSettings[type][i] !== this._currentConfig.prop[i]) {\n            trackSettings[type][i] = this._currentConfig.prop[i];\n            changed[type] = true;\n          }\n        } else if (type === 'controller') {\n          controllerSettings.prop[i] = this._currentConfig.prop[i];\n        } else {\n          trackSettings[i] = this._currentConfig.prop[i];\n        }\n      }\n\n      for (type in changed) {\n        trackSettings[type].setDefaults(true);\n      }\n    }\n\n    /*\n     * Abandon all hope! If you've tracked a bug to this line of code, be afraid.\n     * It will almost certainly be due to the wonderful way the javascript objects work.\n     *\n     * Consider the following:\n     *\n     * var Obj = function () {};\n     *\n     * Obj.prototype = {\n     *   scalar : 1,\n     *   array  : [ 1, 2, 3 ],\n     *   hash   : { a: 1, b : 2 }\n     * };\n     *\n     * var x = new Obj();\n     *\n     * x.scalar   = 10;\n     * x.array[0] = 10;\n     * x.hash.a   = 10;\n     *\n     * var y = new Obj();\n     *\n     * y is now { scalar: 1, array: [ 10, 2, 3 ], hash: { a: 10, b : 2 } }, since memory locations of objects in prototypes are shared.\n     *\n     * This has been the cause of numerous Genoverse bugs in the past, due to property sharing between different tracks, models, views, and controllers.\n     */\n    this.extend(trackSettings);\n\n    this.model.setChrProps(); // make sure the data stores for the current chromsome are being used\n\n    if (!this.controller || typeof this.controller === 'function') {\n      this.controller = this.newMVC(settings.controller, controllerSettings.func, $.extend(controllerSettings.prop, { model: this.model, view: this.view }));\n    } else {\n      controllerSettings.prop.threshold = controllerSettings.prop.threshold || this.controller.constructor.prototype.threshold;\n      $.extend(this.controller, controllerSettings.prop, { model: this.model, view: this.view });\n    }\n  },\n\n  newMVC: function (object, functions, properties) {\n    return new (object.extend(\n      $.extend(true, {}, object.prototype, functions, {\n        prop: $.proxy(this.prop, this)\n      })\n    ))(\n      $.extend(properties, {\n        browser : this.browser,\n        width   : this.width,\n        track   : this\n      })\n    );\n  },\n\n  setLengthMap: function () {\n    var mv        = [ 'model', 'view' ];\n    var lengthMap = [];\n    var models    = {};\n    var views     = {};\n    var settings, value, deepCopy, prevLengthMap, mvSettings, type, prevType, i, j;\n\n    function compare(a, b) {\n      var checked = { browser: true, width: true, track: true }; // Properties set in newMVC should be ignored, as they will be missing if comparing an object with a prototype\n\n      for (var key in a) {\n        if (checked[key]) {\n          continue;\n        }\n\n        checked[key] = true;\n\n        if (typeof a[key] !== typeof b[key]) {\n          return false;\n        } else if (typeof a[key] === 'function' && typeof b[key] === 'function') {\n          if (a[key].toString() !== b[key].toString()) {\n            return false;\n          }\n        } else if (typeof a[key] === 'object' && !(a[key] instanceof $) && !compare(a[key], b[key])) {\n          return false;\n        } else if (a[key] !== b[key]) {\n          return false;\n        }\n      }\n\n      for (key in b) {\n        if (!checked[key]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    // Find all scale-map like keys\n    for (var key in this) {\n      if (!isNaN(key)) {\n        key   = parseInt(key, 10);\n        value = this[key];\n\n        lengthMap.push([ key, value === false ? { threshold: key, resizable: 'auto', featureHeight: 0, model: Genoverse.Track.Model, view: Genoverse.Track.View } : $.extend(true, {}, value) ]);\n      }\n    }\n\n    // Force at least one lengthMap entry to exist, containing the base model and view. lengthMap entries above -1 without a model or view will inherit from -1.\n    lengthMap.push([ -1, { view: this.view || Genoverse.Track.View, model: this.model || Genoverse.Track.Model } ]);\n\n    lengthMap = lengthMap.sort(function (a, b) { return b[0] - a[0]; });\n\n    for (i = 0; i < lengthMap.length; i++) {\n      if (lengthMap[i][1].model && lengthMap[i][1].view) {\n        continue;\n      }\n\n      deepCopy = {};\n\n      if (lengthMap[i][0] !== -1) {\n        for (j in lengthMap[i][1]) {\n          if (this._interface[j]) {\n            deepCopy[this._interface[j]] = true;\n          }\n\n          if (deepCopy.model && deepCopy.view) {\n            break;\n          }\n        }\n      }\n\n      // Ensure that every lengthMap entry has a model and view property, copying them from entries with smaller lengths if needed.\n      for (j = i + 1; j < lengthMap.length; j++) {\n        if (!lengthMap[i][1].model && lengthMap[j][1].model) {\n          lengthMap[i][1].model = deepCopy.model ? Genoverse.Track.Model.extend($.extend(true, {}, lengthMap[j][1].model.prototype)) : lengthMap[j][1].model;\n        }\n\n        if (!lengthMap[i][1].view && lengthMap[j][1].view) {\n          lengthMap[i][1].view = deepCopy.view ? Genoverse.Track.View.extend($.extend(true, {}, lengthMap[j][1].view.prototype)) : lengthMap[j][1].view;\n        }\n\n        if (lengthMap[i][1].model && lengthMap[i][1].view) {\n          break;\n        }\n      }\n    }\n\n    // Now every lengthMap entry has a model and a view class, create instances of those classes.\n    for (i = 0; i < lengthMap.length; i++) {\n      prevLengthMap = lengthMap[i - 1] ? lengthMap[i - 1][1] : {};\n      settings      = $.extend(true, {}, this.constructor.prototype, lengthMap[i][1]);\n      mvSettings    = { model: { prop: {}, func: {} }, view: { prop: {}, func: {} } };\n\n      // Work out which settings belong to models or views\n      for (j in settings) {\n        if (j !== 'constructor' && mvSettings[this._interface[j]]) {\n          mvSettings[this._interface[j]][typeof settings[j] === 'function' ? 'func' : 'prop'][j] = settings[j];\n        }\n      }\n\n      // Create models and views, if settings.model or settings.view is a class rather than an instance\n      for (j = 0; j < mv.length; j++) {\n        type = mv[j];\n\n        if (typeof settings[type] === 'function') {\n          prevType = this[mv[j] + 's'];\n\n          // If the previous lengthMap contains an instance of the class in settings, it can be reused.\n          // This allows sharing of models and views between lengthMap entries if they are the same, stopping the need to fetch identical data or draw identical images more than once\n          if (prevLengthMap[type] instanceof settings[type]) {\n            settings[type] = prevLengthMap[type];\n          } else {\n            // Make an instance of the model/view, based on the settings[type] class but with a prototype that contains the functions in mvSettings[type].func\n            settings[type] = this.newMVC(settings[type], mvSettings[type].func, mvSettings[type].prop);\n\n            // If the track already has this.models/this.views and the prototype of the new model/view is the same as the value of this.models/this.views for the same length key, reuse that value.\n            // This can happen if the track has configSettings and the user changes config but that only affects one of the model and view.\n            // Again, reusing the old value stops the need to fetch identical data or draw identical images more than once.\n            if (prevType[lengthMap[i][0]] && compare(prevType[lengthMap[i][0]].constructor.prototype, $.extend({}, settings[type].constructor.prototype, mvSettings[type].prop))) {\n              settings[type] = prevType[lengthMap[i][0]];\n            }\n          }\n        }\n      }\n\n      models[lengthMap[i][0]] = lengthMap[i][1].model = settings.model;\n      views[lengthMap[i][0]]  = lengthMap[i][1].view  = settings.view;\n    }\n\n    this.lengthMap = lengthMap;\n    this.models    = models;\n    this.views     = views;\n  },\n\n  getSettingsForLength: function () {\n    var length = this.browser.length || (this.browser.end - this.browser.start + 1);\n\n    for (var i = 0; i < this.lengthMap.length; i++) {\n      if (length > this.lengthMap[i][0] || length === 1 && this.lengthMap[i][0] === 1) {\n        return this.lengthMap[i];\n      }\n    }\n\n    return [];\n  },\n\n  prop: function (key, value) {\n    var mvc = [ 'controller', 'model', 'view' ];\n    var obj;\n\n    if (this._interface[key]) {\n      obj = this[this._interface[key]];\n    } else {\n      for (var i = 0; i < 3; i++) {\n        if (this[mvc[i]] && typeof this[mvc[i]][key] !== 'undefined') {\n          obj = this[mvc[i]];\n          break;\n        }\n      }\n\n      obj = obj || this;\n    }\n\n\n    if (typeof value !== 'undefined') {\n      if (value === null) {\n        delete obj[key];\n      } else {\n        obj[key] = value;\n      }\n    }\n\n    return obj ? obj[key] : undefined;\n  },\n\n  setHeight: function (height, forceShow) {\n    if (this.disabled || (forceShow !== true && height < this.prop('featureHeight')) || (this.prop('threshold') && !this.prop('thresholdMessage') && this.browser.length > this.prop('threshold'))) {\n      height = 0;\n    } else {\n      height = Math.max(height, this.prop('minLabelHeight'));\n    }\n\n    this.height = height;\n\n    return height;\n  },\n\n  resetHeight: function () {\n    if (this.resizable === true) {\n      var resizer = this.prop('resizer');\n\n      this.autoHeight = !!([ this.defaultAutoHeight, this.browser.trackAutoHeight ].sort(function (a, b) {\n        return (typeof a !== 'undefined' && a !== null ? 0 : 1) - (typeof b !== 'undefined' && b !== null ?  0 : 1);\n      })[0]);\n\n      this.controller.resize(this.autoHeight ? this.prop('fullVisibleHeight') : this.defaultHeight + this.margin + (resizer ? resizer.height() : 0));\n      this.initialHeight = this.height;\n    }\n  },\n\n  setConfig: function (config) {\n    if (typeof config === 'string' && arguments.length === 2) {\n      var _config = {};\n      _config[config] = arguments[1];\n      config = _config;\n    }\n\n    var configChanged = false;\n    var conf;\n\n    for (var type in config) {\n      conf = config[type];\n\n      if (typeof this.configSettings[type] === 'undefined' || typeof this.configSettings[type][conf] === 'undefined' || this.config[type] === conf) {\n        continue;\n      }\n\n      this.config[type] = conf;\n\n      configChanged = true;\n    }\n\n    if (configChanged) {\n      var features = this.prop('featuresById');\n\n      for (var i in features) {\n        delete features[i].menuEl;\n      }\n\n      this._setCurrentConfig();\n\n      if (!this.disabled) {\n        this.reset.apply(this, configChanged ? [ 'config', config ] : []);\n      }\n\n      (this.prop('childTracks') || []).forEach(function (track) {\n        track.setConfig(config);\n      });\n\n      this.browser.saveConfig();\n    }\n  },\n\n  _setCurrentConfig: function () {\n    var settings       = [];\n    var featureFilters = [];\n    var conf;\n\n    this._currentConfig = { prop: {}, func: {} };\n\n    for (i in this.configSettings) {\n      conf = this.getConfig(i);\n\n      if (conf) {\n        settings.push(conf);\n\n        if (conf.featureFilter) {\n          featureFilters.push(conf.featureFilter);\n        }\n      }\n    }\n\n    if (settings.length) {\n      settings = $.extend.apply($, [ true, {} ].concat(settings, { featureFilters: featureFilters }));\n      delete settings.featureFilter;\n    }\n\n    for (i in settings) {\n      this._currentConfig[typeof settings[i] === 'function' && !/^(before|after)/.test(i) ? 'func' : 'prop'][i] = settings[i];\n    }\n  },\n\n  getConfig: function (type) {\n    return this.configSettings[type][this.config[type]];\n  },\n\n  addChildTracks: function () {\n    if (!this.children) {\n      return;\n    }\n\n    var track    = this;\n    var browser  = this.browser;\n    var children = (Array.isArray(this.children) ? this.children : [ this.children ]).filter(function (child) { return child.prototype instanceof Genoverse.Track; });\n    var config   = {\n      parentTrack : this,\n      controls    : 'off',\n      threshold   : this.prop('threshold')\n    };\n\n    setTimeout(function () {\n      track.childTracks = children.map(function (child) {\n        if (child.prototype instanceof Genoverse.Track.Legend || child === Genoverse.Track.Legend) {\n          return track.addLegend(child.extend(config), true);\n        } else {\n          return browser.addTrack(child.extend(config));\n        }\n      });\n\n      track.controller.setLabelHeight();\n    }, 1);\n  },\n\n  addLegend: function (constructor, now) {\n    if (!(constructor || this.legend)) {\n      return;\n    }\n\n    constructor = constructor || (this.legend.prototype instanceof Genoverse.Track.Legend ? this.legend : Genoverse.Track.Legend);\n\n    var track       = this;\n    var legendType  = constructor.prototype.shared === true ? Genoverse.getTrackNamespace(constructor) : constructor.prototype.shared || this.id;\n    var config      = {\n      id   : legendType + 'Legend',\n      name : constructor.prototype.name || (this.name + ' Legend'),\n      type : legendType\n    };\n\n    this.legendType = legendType;\n\n    function makeLegendTrack() {\n      return track.legendTrack = track.browser.legends[config.id] || track.browser.addTrack(constructor.extend(config));\n    }\n\n    if (now === true) {\n      return makeLegendTrack();\n    } else {\n      setTimeout(makeLegendTrack, 1);\n    }\n  },\n\n  changeChr: function () {\n    for (var i in this.models) {\n      this.models[i].setChrProps();\n    }\n  },\n\n  updateName: function (name) {\n    this.controller.setName(name); // For ease of use in external code\n  },\n\n  enable: function () {\n    if (this.disabled === true) {\n      this.disabled = false;\n      this.controller.resize(this.initialHeight);\n      this.reset();\n    }\n  },\n\n  disable: function () {\n    if (!this.disabled) {\n      this.disabled = true;\n      this.controller.resize(0);\n    }\n  },\n\n  reset: function () {\n    this.setLengthMap();\n\n    for (var i in this.models) {\n      if (this.models[i].url !== false) {\n        this.models[i].init(true);\n      }\n    }\n\n    for (i in this.views) {\n      this.views[i].init();\n    }\n\n    this.controller.reset.apply(this.controller, arguments);\n  },\n\n  remove: function () {\n    this.browser.removeTrack(this);\n  },\n\n  destructor: function () {\n    this.controller.destroy();\n\n    var objs = [ this.view, this.model, this.controller, this ];\n\n    for (var obj in objs) {\n      for (var key in obj) {\n        delete obj[key];\n      }\n    }\n  }\n});\n","Genoverse.Track.Controller = Base.extend({\n  scrollBuffer   : 1.2,      // Number of widths, if left or right closer to the edges of viewpoint than the buffer, start making more images\n  threshold      : Infinity, // Length above which the track is not drawn\n  clickTolerance : 0,        // pixels of tolerance added to a click position when finding features for popup menus, when scale < 1\n  messages       : undefined,\n\n  constructor: function (properties) {\n    $.extend(this, properties);\n    Genoverse.wrapFunctions(this);\n    this.init();\n  },\n\n  init: function () {\n    this.setDefaults();\n    this.addDomElements();\n    this.addUserEventHandlers();\n\n    this.deferreds = []; // tracks deferreds so they can be stopped if the track is destroyed\n  },\n\n  setDefaults: function () {\n    this.imgRange    = {};\n    this.scrollRange = {};\n    this.messages    = this.messages || {\n      error     : 'ERROR: ',\n      threshold : 'Data for this track is not displayed in regions greater than ',\n      resize    : 'Some features are currently hidden, <a class=\"gv-resize\">resize to see all</a>'\n    };\n  },\n\n  reset: function () {\n    this.abort();\n    this.setDefaults();\n    this.resetImages();\n    this.browser.closeMenus(this);\n\n    if (arguments[0] !== 'resizing') {\n      this.setScale();\n      this.makeFirstImage();\n    }\n  },\n\n  resetImages: function () {\n    this.scrollContainer.empty();\n    this.resetImageRanges();\n  },\n\n  resetImageRanges: function () {\n    this.left        = 0;\n    this.scrollStart = [ 'ss', this.browser.chr, this.browser.start, this.browser.end ].join('-');\n\n    this.imgRange[this.scrollStart]    = this.imgRange[this.scrollStart]    || { left: this.width * -2, right: this.width * 2 };\n    this.scrollRange[this.scrollStart] = this.scrollRange[this.scrollStart] || { start: this.browser.start - this.browser.length, end: this.browser.end + this.browser.length };\n  },\n\n  setName: function (name) {\n    this.track.name = name;\n    this.labelName  = this.labelName || $('<span class=\"gv-name\">').appendTo(this.label);\n\n    this.labelName.attr('title', name).html(name);\n\n    this.minLabelHeight = Math.max(this.labelName.outerHeight(true), this.labelName.outerHeight());\n\n    this.setLabelHeight(true);\n  },\n\n  addDomElements: function () {\n    var name = this.track.name || '';\n\n    this.menus            = $();\n    this.container        = $('<div class=\"gv-track-container\">').appendTo(this.browser.wrapper);\n    this.scrollContainer  = $('<div class=\"gv-scroll-container\">').appendTo(this.container);\n    this.imgContainer     = $('<div class=\"gv-image-container\">').width(this.width).addClass(this.prop('invert') ? 'gv-invert' : '');\n    this.messageContainer = $('<div class=\"gv-message-container\"><div class=\"gv-messages\"></div><i class=\"gv-control gv-collapse fa fa-angle-double-left\"></i><i class=\"gv-control gv-expand fa fa-angle-double-right\"></i></div>').appendTo(this.container);\n    this.label            = $('<li>').appendTo(this.browser.labelContainer).height(this.prop('height')).data('track', this.track);\n    this.context          = $('<canvas>')[0].getContext('2d');\n\n    if (this.prop('border')) {\n      $('<div class=\"gv-track-border\">').appendTo(this.container);\n    }\n\n    if (this.prop('unsortable')) {\n      this.label.addClass('gv-unsortable');\n    } else {\n      $('<div class=\"gv-handle\">').appendTo(this.label);\n    }\n\n    if (this.prop('children')) {\n      this.superContainer = $('<div class=\"gv-track-container gv-track-super-container\">').insertAfter(this.container);\n      this.container.appendTo(this.superContainer);\n    } else if (this.prop('parentTrack')) {\n      this.superContainer = this.prop('parentTrack').prop('superContainer');\n\n      this.container.appendTo(this.superContainer);\n      this.label.remove();\n\n      this.label = this.prop('parentTrack').prop('label');\n    }\n\n    this.setName(name);\n\n    this.container.height(this.prop('disabled') ? 0 : Math.max(this.prop('height'), this.minLabelHeight));\n  },\n\n  addUserEventHandlers: function () {\n    var controller = this;\n    var browser    = this.browser;\n\n    this.container.on('mouseup', '.gv-image-container', function (e) {\n      if ((e.which && e.which !== 1) || (typeof browser.dragStart === 'number' && browser.start !== browser.dragStart) || (browser.dragAction === 'select' && browser.selector.outerWidth(true) > 2)) {\n        return; // Only show menus on left click when not dragging and not selecting\n      }\n\n      controller.click(e);\n    });\n\n    this.messageContainer.children().on('click', function () {\n      var collapsed = controller.messageContainer.children('.gv-messages').is(':visible') ? ' gv-collapsed' : '';\n      var code      = controller.messageContainer.find('.gv-msg').data('code');\n\n      controller.messageContainer.attr('class', 'gv-message-container' + collapsed);\n      controller.checkHeight();\n\n      if (code !== 'error') {\n        document.cookie = [ 'gv_msg', code, controller.prop('id') ].join('_') + '=1; expires=' + (collapsed ? 'Tue, 19 Jan 2038' : 'Thu, 01 Jan 1970') + ' 00:00:00 GMT; path=/';\n      }\n    });\n  },\n\n  click: function (e) {\n    var target = $(e.target);\n    var x      = e.pageX - this.container.parent().offset().left + this.browser.scaledStart;\n    var y      = e.pageY - target.offset().top;\n\n    if (this.imgContainer.hasClass('gv-invert')) {\n      y = target.height() - y;\n    }\n\n    return this.browser.makeMenu(this.getClickedFeatures(x, y, target), e, this.track);\n  },\n\n  getClickedFeatures: function (x, y, target) {\n    var bounds    = { x: x, y: y, w: 1, h: 1 };\n    var scale     = this.scale;\n    var tolerance = scale < 1 ? this.clickTolerance : 0;\n\n    if (tolerance) {\n      bounds.x -= tolerance / 2;\n      bounds.w += tolerance;\n    }\n\n    var features = this[target && target.hasClass('gv-labels') ? 'labelPositions' : 'featurePositions'].search(bounds);\n\n    if (tolerance) {\n      return features.sort(function (a, b) { return Math.abs(a.position[scale].start - x) - Math.abs(b.position[scale].start - x); });\n    } else {\n      return this.model.sortFeatures(features);\n    }\n  },\n\n  // FIXME: messages are now hidden/shown instead of removed/added. This will cause a problem if a new message arrives with the same code as one that already exists.\n  showMessage: function (code, additionalText) {\n    var messages = this.messageContainer.children('.gv-messages');\n\n    if (!messages.children('.gv-' + code).show().length) {\n      var msg = $('<div class=\"gv-msg gv-' + code + '\">' + this.messages[code] + (additionalText || '') + '</div>').data('code', code).prependTo(messages);\n\n      if (code === 'resize') {\n        msg.children('a.gv-resize').on('click', $.proxy(function () {\n          this.resize(this.fullVisibleHeight);\n        }, this));\n      }\n\n      this.messageContainer[document.cookie.match([ 'gv_msg', code, this.prop('id') ].join('_') + '=1') ? 'addClass' : 'removeClass']('gv-collapsed');\n    }\n\n    var height = this.messageContainer.show().outerHeight(true);\n\n    if (height > this.prop('height')) {\n      this.resize(height, undefined, false);\n    }\n\n    messages = null;\n  },\n\n  hideMessage: function (code) {\n    var messages = this.messageContainer.find('.gv-msg');\n\n    if (code) {\n      messages = messages.filter('.gv-' + code).hide();\n\n      if (messages.length && !messages.siblings().filter(function () { return this.style.display !== 'none'; }).length) {\n        this.messageContainer.hide();\n      }\n    } else {\n      messages.hide();\n      this.messageContainer.hide();\n    }\n\n    messages = null;\n  },\n\n  showError: function (error) {\n    this.showMessage('error', error);\n  },\n\n  checkHeight: function () {\n    if (this.browser.length > this.threshold) {\n      if (this.thresholdMessage) {\n        this.showMessage('threshold', this.thresholdMessage);\n        this.fullVisibleHeight = Math.max(this.messageContainer.outerHeight(true), this.minLabelHeight);\n      } else {\n        this.fullVisibleHeight = 0;\n      }\n    } else if (this.thresholdMessage) {\n      this.hideMessage('threshold');\n    }\n\n    if (!this.prop('resizable')) {\n      return;\n    }\n\n    var autoHeight;\n\n    if (this.browser.length > this.threshold) {\n      autoHeight = this.prop('autoHeight');\n      this.prop('autoHeight', true);\n    } else {\n      this.fullVisibleHeight = this.visibleFeatureHeight() || (this.messageContainer.is(':visible') ? this.messageContainer.outerHeight(true) : this.prop('hideEmpty') ? 0 : this.minLabelHeight);\n    }\n\n    this.autoResize();\n\n    if (typeof autoHeight !== 'undefined') {\n      this.prop('autoHeight', autoHeight);\n    }\n  },\n\n  visibleFeatureHeight: function () {\n    var bounds    = { x: this.browser.scaledStart, w: this.width, y: 0, h: 9e99 };\n    var scale     = this.scale;\n    var features  = this.featurePositions.search(bounds);\n    var minHeight = this.prop('hideEmpty') ? 0 : this.minLabelHeight;\n    var height    = Math.max.apply(Math, $.map(features, function (feature) { return feature.position[scale].bottom; }).concat(minHeight));\n\n    if (this.prop('labels') === 'separate') {\n      this.labelTop = height;\n      height += Math.max.apply(Math, $.map(this.labelPositions.search(bounds).concat(this.prop('repeatLabels') ? features : []), function (feature) { return feature.position[scale].label.bottom; }).concat(minHeight));\n    }\n\n    return height;\n  },\n\n  autoResize: function () {\n    var autoHeight = this.prop('autoHeight');\n\n    if (autoHeight || this.prop('labels') === 'separate') {\n      this.resize(autoHeight ? this.fullVisibleHeight : this.prop('height'), this.labelTop, false);\n    } else {\n      this.toggleExpander(false);\n    }\n  },\n\n  resize: function (height, arg, saveConfig) {\n    height = this.track.setHeight(height, arg);\n\n    if (typeof arg === 'number') {\n      this.imgContainers.children('.gv-labels').css('top', arg);\n    }\n\n    this.container.height(height)[height ? 'show' : 'hide']();\n    this.setLabelHeight();\n    this.toggleExpander();\n\n    if (saveConfig !== false) {\n      this.browser.saveConfig();\n    }\n  },\n\n  toggleExpander: function (saveConfig) {\n    if (this.prop('resizable') !== true) {\n      return;\n    }\n\n    var featureMargin = this.prop('featureMargin');\n    var height        = this.prop('height');\n\n    // Note: fullVisibleHeight - featureMargin.top - featureMargin.bottom is not actually the correct value to test against, but it's the easiest best guess to obtain.\n    // fullVisibleHeight is the maximum bottom position of the track's features in the region, which includes margin at the bottom of each feature and label\n    // Therefore fullVisibleHeight includes this margin for the bottom-most feature.\n    // The correct value (for a track using the default positionFeatures code) is:\n    // fullVisibleHeight - ([there are labels in this region] ? (labels === 'separate' ? 0 : featureMargin.bottom + 1) + 2 : featureMargin.bottom)\n    if (this.fullVisibleHeight - featureMargin.top - featureMargin.bottom > height && !this.prop('disabled')) {\n      this.showMessage('resize');\n\n      var controller = this;\n      var h          = this.messageContainer.outerHeight(true);\n\n      if (h > height) {\n        this.resize(h, undefined, saveConfig);\n      }\n\n      this.expander = (this.expander || $('<div class=\"gv-expander gv-static\">').width(this.width).appendTo(this.container).on('click', function () {\n        controller.resize(controller.fullVisibleHeight);\n      }))[this.prop('height') === 0 ? 'hide' : 'show']();\n    } else if (this.expander) {\n      this.hideMessage('resize');\n      this.expander.hide();\n    }\n  },\n\n  setLabelHeight: function (enforceMinHeight) {\n    var parent = this.prop('parentTrack');\n\n    if (parent) {\n      return parent.controller.setLabelHeight();\n    }\n\n    var tracks = [ this ].concat(this.prop('childTracks') || []);\n    var height = tracks.reduce(function (h, track) { return h + (track.prop('disabled') ? 0 : track.prop('height')); }, 0);\n\n    this.label.height(this.prop('disabled') ? 0 : enforceMinHeight && this.minLabelHeight ? Math.max(height, this.minLabelHeight) : height);\n\n    if (tracks.length > 1) {\n      var top = tracks[0].prop('height');\n\n      tracks.slice(1).forEach(function (track) {\n        var h = track.prop('height');\n\n        track.prop('labelName').css('top', top)[h ? 'removeClass' : 'addClass']('gv-hide');\n        top += h;\n      });\n    }\n  },\n\n  setWidth: function (width) {\n    var track = this.track;\n\n    $.each([ this, track, track.model, track.view ], function () {\n      this.width = width;\n    });\n\n    this.imgContainer.add(this.expander).width(width);\n  },\n\n  setScale: function () {\n    var controller = this;\n\n    this.scale = this.browser.scale;\n\n    this.track.setMVC();\n    this.resetImageRanges();\n\n    var labels = this.prop('labels');\n\n    if (labels && labels !== 'overlay') {\n      this.model.setLabelBuffer(this.browser.labelBuffer);\n    }\n\n    if (this.threshold !== Infinity && this.prop('resizable') !== 'auto') {\n      this.thresholdMessage = this.view.formatLabel(this.threshold);\n    }\n\n    $.each(this.view.setScaleSettings(this.scale), function (k, v) { controller[k] = v; });\n\n    this.hideMessage();\n  },\n\n  move: function (delta) {\n    this.left += delta;\n    this.scrollContainer.css('left', this.left);\n\n    var scrollStart = this.scrollStart;\n\n    if (this.imgRange[scrollStart] && this.imgRange[scrollStart].left + this.left > -this.scrollBuffer * this.width) {\n      var end = this.scrollRange[scrollStart].start - 1;\n\n      this.makeImage({\n        scale : this.scale,\n        chr   : this.browser.chr,\n        start : end - this.browser.length + 1,\n        end   : end,\n        left  : this.imgRange[scrollStart].left,\n        cls   : scrollStart\n      });\n\n      (this.imgRange[scrollStart]    || {}).left  -= this.width;\n      (this.scrollRange[scrollStart] || {}).start -= this.browser.length;\n    }\n\n    if (this.imgRange[scrollStart] && this.imgRange[scrollStart].right + this.left < this.scrollBuffer * this.width) {\n      var start = this.scrollRange[scrollStart].end + 1;\n\n      this.makeImage({\n        scale : this.scale,\n        chr   : this.browser.chr,\n        start : start,\n        end   : start + this.browser.length - 1,\n        left  : this.imgRange[scrollStart].right,\n        cls   : scrollStart\n      });\n\n      (this.imgRange[scrollStart]    || {}).right += this.width;\n      (this.scrollRange[scrollStart] || {}).end   += this.browser.length;\n    }\n  },\n\n  moveTo: function (chr, start, end, delta) {\n    var scrollRange = this.scrollRange[this.scrollStart];\n    var scrollStart = [ 'ss', chr, start, end ].join('-');\n\n    if (this.scrollRange[scrollStart] || start > scrollRange.end || end < scrollRange.start) {\n      this.resetImageRanges();\n      this.makeFirstImage(scrollStart);\n    } else {\n      this.move(typeof delta === 'number' ? delta : (start - this.browser.start) * this.scale);\n      this.checkHeight();\n    }\n  },\n\n  makeImage: function (params) {\n    params.scaledStart   = params.scaledStart   || params.start * params.scale;\n    params.width         = params.width         || this.width;\n    params.height        = params.height        || this.prop('height');\n    params.featureHeight = params.featureHeight || 0;\n    params.labelHeight   = params.labelHeight   || 0;\n\n    var deferred;\n    var controller = this;\n    var tooLarge   = this.browser.length > this.threshold;\n    var div        = this.imgContainer.clone().addClass((params.cls + ' gv-loading').replace('.', '_')).css({ left: params.left, display: params.cls === this.scrollStart ? 'block' : 'none' });\n    var bgImage    = params.background ? $('<img class=\"gv-bg\">').hide().addClass(params.background).data(params).prependTo(div) : false;\n    var image      = $('<img class=\"gv-data\">').hide().data(params).appendTo(div).on('load', function () {\n      $(this).fadeIn('fast').parent().removeClass('gv-loading');\n      $(this).siblings('.gv-bg').show();\n    });\n\n    params.container = div;\n\n    this.imgContainers.push(div[0]);\n    this.scrollContainer.append(this.imgContainers);\n\n    if (!tooLarge && !this.model.checkDataRange(params.chr, params.start, params.end)) {\n      var buffer = this.prop('dataBuffer');\n\n      params.start -= buffer.start;\n      params.end   += buffer.end;\n      deferred      = this.model.getData(params.chr, params.start, params.end);\n    }\n\n    if (!deferred) {\n      deferred = $.Deferred();\n      setTimeout($.proxy(deferred.resolve, this), 1); // This defer makes scrolling A LOT smoother, pushing render call to the end of the exec queue\n    }\n\n    this.deferreds.push(deferred);\n\n    return deferred.done(function () {\n      var features = tooLarge ? [] : controller.model.findFeatures(params.chr, params.start, params.end);\n      controller.render(features, image);\n\n      if (bgImage) {\n        controller.renderBackground(features, bgImage);\n      }\n    }).fail(function (e) {\n      controller.showError(e);\n    });\n  },\n\n  makeFirstImage: function (moveTo) {\n    var deferred = $.Deferred();\n\n    if (this.scrollContainer.children().hide().filter('.' + (moveTo || this.scrollStart)).show().length) {\n      this.scrollContainer.css('left', 0);\n      this.checkHeight();\n\n      return deferred.resolve();\n    }\n\n    var controller = this;\n    var chr        = this.browser.chr;\n    var start      = this.browser.start;\n    var end        = this.browser.end;\n    var length     = this.browser.length;\n    var scale      = this.scale;\n    var cls        = this.scrollStart;\n    var images     = [{ chr: chr, start: start, end: end, scale: scale, cls: cls, left: 0 }];\n    var left       = 0;\n    var width      = this.width;\n\n    if (!this.browser.isStatic) {\n      if (start > 1) {\n        images.push({ chr: chr, start: start - length, end: start - 1, scale: scale, cls: cls, left: -this.width });\n        left   = -this.width;\n        width += this.width;\n      }\n\n      if (end < this.browser.getChromosomeSize(chr)) {\n        images.push({ chr: chr, start: end + 1, end: end + length, scale: scale, cls: cls, left: this.width });\n        width += this.width;\n      }\n    }\n\n    var loading = this.imgContainer.clone().addClass('gv-loading').css({ left: left, width: width }).prependTo(this.scrollContainer.css('left', 0));\n\n    function makeImages() {\n      $.when.apply($, images.map(function (image) {\n        return controller.makeImage(image);\n      })).done(deferred.resolve);\n\n      loading.remove();\n    }\n\n    if (length > this.threshold || this.model.checkDataRange(chr, start, end)) {\n      makeImages();\n    } else {\n      var buffer = this.prop('dataBuffer');\n\n      this.model.getData(chr, start - buffer.start - length, end + buffer.end + length).done(makeImages).fail(function (e) {\n        controller.showError(e);\n      });\n    }\n\n    return deferred;\n  },\n\n  render: function (features, img) {\n    var params         = img.data();\n        features       = this.view.positionFeatures(this.view.scaleFeatures(features, params.scale), params); // positionFeatures alters params.featureHeight, so this must happen before the canvases are created\n    var featureCanvas  = $('<canvas>').attr({ width: params.width, height: params.featureHeight || 1 });\n    var labelCanvas    = this.prop('labels') === 'separate' && params.labelHeight ? featureCanvas.clone().attr('height', params.labelHeight) : featureCanvas;\n    var featureContext = featureCanvas[0].getContext('2d');\n    var labelContext   = labelCanvas[0].getContext('2d');\n\n    featureContext.font = labelContext.font = this.prop('font');\n\n    switch (this.prop('labels')) {\n      case false     : break;\n      case 'overlay' : labelContext.textAlign = 'center'; labelContext.textBaseline = 'middle'; break;\n      default        : labelContext.textAlign = 'left';   labelContext.textBaseline = 'top';    break;\n    }\n\n    this.view.draw(features, featureContext, labelContext, params.scale);\n\n    img.attr('src', featureCanvas[0].toDataURL());\n\n    if (labelContext !== featureContext) {\n      img.clone(true).attr({ 'class': 'gv-labels', src: labelCanvas[0].toDataURL() }).insertAfter(img);\n    }\n\n    this.checkHeight();\n\n    featureCanvas = labelCanvas = img = null;\n  },\n\n  renderBackground: function (features, img, height) {\n    var canvas = $('<canvas>').attr({ width: this.width, height: height || 1 })[0];\n    this.view.drawBackground(features, canvas.getContext('2d'), img.data());\n    img.attr('src', canvas.toDataURL());\n    canvas = img = null;\n  },\n\n  populateMenu: function (feature) {\n    var f    = $.extend(true, {}, feature);\n    var menu = {\n      title    : f.label ? f.label[0] : f.id,\n      Location : f.chr + ':' + f.start + '-' + f.end\n    };\n\n    delete f.chr;\n    delete f.start;\n    delete f.end;\n    delete f.sort;\n\n    for (var i in f) {\n      if (typeof f[i] === 'object' || menu.title === f[i]) {\n        delete f[i];\n      }\n    }\n\n    return $.extend(menu, f);\n  },\n\n  abort: function () {\n    for (var i = 0; i < this.deferreds.length; i++) {\n      if (this.deferreds[i].state() === 'pending') {\n        this.deferreds[i].reject();\n      }\n    }\n\n    this.deferreds = [];\n  },\n\n  destroy: function () {\n    this.abort();\n    this.container.add(this.label).add(this.menus).remove();\n  }\n});\n","Genoverse.Track.Model = Base.extend({\n  dataType         : 'json',\n  allData          : false,\n  dataBuffer       : undefined, // e.g. { start: 0, end: 0 } - basepairs to extend data region for, when getting data from the origin\n  xhrFields        : undefined,\n  url              : undefined,\n  urlParams        : undefined, // hash of URL params\n  data             : undefined, // if defined, will be used instead of fetching data from a source\n  dataRequestLimit : undefined, // if defined, multiple requests will be made by getData if the region size exceeds its value\n\n  constructor: function (properties) {\n    $.extend(this, properties);\n    Genoverse.wrapFunctions(this);\n    this.init();\n  },\n\n  init: function (reset) {\n    this.setDefaults(reset);\n\n    if (reset) {\n      for (var i in this.featuresById) {\n        delete this.featuresById[i].position;\n      }\n    }\n\n    if (!reset || this.data) {\n      delete this.dataRangesByChr;\n      delete this.featuresByChr;\n      this.featuresById = {};\n      this.setChrProps();\n    }\n\n    this.dataLoading = []; // tracks incomplete requests for data\n  },\n\n  setDefaults: function (reset) {\n    this.dataBuffer = this.dataBuffer || { start: 0, end: 0 }; // basepairs to extend data region for, when getting data from the origin\n    this.urlParams  = this.urlParams  || {};                   // hash of URL params\n    this.xhrFields  = this.xhrFields  || {};\n\n    this.dataBufferStart = this.dataBuffer.start; // Remember original dataBuffer.start, since dataBuffer.start is updated based on browser scale, in setLabelBuffer\n\n    if (!this._url) {\n      this._url = this.url; // Remember original url\n    }\n\n    if (reset && !this.url && this._url) {\n      this.url = this._url;\n    }\n  },\n\n  setChrProps: function () {\n    var chr = this.browser.chr;\n\n    this.dataRangesByChr = this.dataRangesByChr || {};\n    this.featuresByChr   = this.featuresByChr   || {};\n\n    this.dataRangesByChr[chr] = this.dataRangesByChr[chr] || new RTree();\n    this.featuresByChr[chr]   = this.featuresByChr[chr]   || new RTree();\n  },\n\n  features   : function (chr) { return this.featuresByChr[chr];   },\n  dataRanges : function (chr) { return this.dataRangesByChr[chr]; },\n\n  parseURL: function (chr, start, end, url) {\n    if (this.allData) {\n      start = 1;\n      end   = this.browser.getChromosomeSize(chr);\n    }\n\n    return (url || this.url).replace(/__ASSEMBLY__/, this.browser.assembly).replace(/__CHR__/, chr).replace(/__START__/, start).replace(/__END__/, end);\n  },\n\n  setLabelBuffer: function (buffer) {\n    this.dataBuffer.start = Math.max(this.dataBufferStart, buffer);\n  },\n\n  getData: function (chr, start, end, done) {\n    start = Math.max(1, start);\n    end   = Math.min(this.browser.getChromosomeSize(chr), end);\n\n    var deferred = $.Deferred();\n\n    if (typeof this.data !== 'undefined') {\n      this.receiveData(typeof this.data.sort === 'function' ? this.data.sort(function (a, b) { return a.start - b.start; }) : this.data, chr, start, end);\n      return deferred.resolveWith(this);\n    }\n\n    var model  = this;\n    var bins   = [];\n    var length = end - start + 1;\n\n    if (!this.url) {\n      return deferred.resolveWith(this);\n    }\n\n    if (this.dataRequestLimit && length > this.dataRequestLimit) {\n      var i = Math.ceil(length / this.dataRequestLimit);\n\n      while (i--) {\n        bins.push([ start, i ? start += this.dataRequestLimit - 1 : end ]);\n        start++;\n      }\n    } else {\n      bins.push([ start, end ]);\n    }\n\n    $.when.apply($, $.map(bins, function (bin) {\n      var request = $.ajax({\n        url       : model.parseURL(chr, bin[0], bin[1]),\n        data      : model.urlParams,\n        dataType  : model.dataType,\n        context   : model,\n        xhrFields : model.xhrFields,\n        success   : function (data) { this.receiveData(data, chr, bin[0], bin[1]); },\n        error     : function (xhr, statusText) { this.track.controller.showError(statusText + ' while getting the data, see console for more details', arguments); },\n        complete  : function (xhr) { this.dataLoading = $.grep(this.dataLoading, function (t) { return xhr !== t; }); }\n      });\n\n      request.coords = [ chr, bin[0], bin[1] ]; // store actual chr, start and end on the request, in case they are needed\n\n      if (typeof done === 'function') {\n        request.done(done);\n      }\n\n      model.dataLoading.push(request);\n\n      return request;\n    })).done(function () { deferred.resolveWith(model); });\n\n    return deferred;\n  },\n\n  receiveData: function (data, chr, start, end) {\n    start = Math.max(start, 1);\n    end   = Math.min(end, this.browser.getChromosomeSize(chr));\n\n    this.setDataRange(chr, start, end);\n    this.parseData(data, chr, start, end);\n\n    if (this.allData) {\n      this.url = false;\n    }\n  },\n\n  /**\n  * parseData(data, chr, start, end) - parse raw data from the data source (e.g. online web service)\n  * extract features and insert it into the internal features storage (RTree)\n  *\n  * >> data  - raw data from the data source (e.g. ajax response)\n  * >> chr   - chromosome of the data\n  * >> start - start location of the data\n  * >> end   - end   location of the data\n  * << nothing\n  *\n  * every feature extracted this routine must construct a hash with at least 3 values:\n  *  {\n  *    id    : [unique feature id, string],\n  *    start : [chromosomal start position, integer],\n  *    end   : [chromosomal end position, integer],\n  *    [other optional key/value pairs]\n  *  }\n  *\n  * and call this.insertFeature(feature)\n  */\n  parseData: function (data, chr, start, end) {\n    var feature;\n\n    // Example of parseData function when data is an array of hashes like { start: ..., end: ... }\n    for (var i = 0; i < data.length; i++) {\n      feature = data[i];\n\n      feature.chr  = feature.chr || chr;\n      feature.sort = start + i;\n\n      this.insertFeature(feature);\n    }\n  },\n\n  updateData: function (data) {\n    this.data = data;\n    this.track.reset();\n  },\n\n  setDataRange: function (chr, start, end) {\n    if (this.allData) {\n      start = 1;\n      end   = this.browser.getChromosomeSize(chr);\n    }\n\n    this.dataRanges(chr).insert({ x: start, w: end - start + 1, y: 0, h: 1 }, [ start, end ]);\n  },\n\n  checkDataRange: function (chr, start, end) {\n    start = Math.max(1, start);\n    end   = Math.min(this.browser.getChromosomeSize(chr), end);\n\n    var ranges = this.dataRanges(chr).search({ x: start, w: end - start + 1, y: 0, h: 1 }).sort(function (a, b) { return a[0] - b[0]; });\n\n    if (!ranges.length) {\n      return false;\n    }\n\n    var s = ranges.length === 1 ? ranges[0][0] : 9e99;\n    var e = ranges.length === 1 ? ranges[0][1] : -9e99;\n\n    for (var i = 0; i < ranges.length - 1; i++) {\n      // s0 <= s1 && ((e0 >= e1) || (e0 + 1 >= s1))\n      if (ranges[i][0] <= ranges[i + 1][0] && ((ranges[i][1] >= ranges[i + 1][1]) || (ranges[i][1] + 1 >= ranges[i + 1][0]))) {\n        s = Math.min(s, ranges[i][0]);\n        e = Math.max(e, ranges[i][1], ranges[i + 1][1]);\n      } else {\n        return false;\n      }\n    }\n\n    return start >= s && end <= e;\n  },\n\n  insertFeature: function (feature) {\n    if (!feature.chr) {\n      return;\n    }\n\n    // Make sure we have a unique ID, this method is not efficient, so better supply your own id\n    if (!feature.id) {\n      feature.id = feature.ID || this.hashCode(JSON.stringify($.extend({}, feature, { sort: '' }))); // sort is dependant on the browser's region, so will change on zoom\n    }\n\n    var features = this.features(feature.chr);\n\n    if (features && !this.featuresById[feature.id]) {\n      if (feature.subFeatures) {\n        feature.subFeatures.sort(function (a, b) { return a.start - b.start; });\n\n        for (var i = 0; i < feature.subFeatures.length; i++) {\n          feature.subFeatures[i].start = Math.min(Math.max(feature.subFeatures[i].start, feature.start), feature.end);\n          feature.subFeatures[i].end   = Math.max(Math.min(feature.subFeatures[i].end,   feature.end),   feature.start);\n        }\n\n        // Add \"fake\" sub-features at the start and end of the feature - this will allow joins to be drawn when there are no sub-features in the current region.\n        feature.subFeatures.unshift({ start: feature.start, end: feature.start, fake: true });\n        feature.subFeatures.push   ({ start: feature.end,   end: feature.end,   fake: true });\n      }\n\n      features.insert({ x: feature.start, y: 0, w: feature.end - feature.start + 1, h: 1 }, feature);\n      this.featuresById[feature.id] = feature;\n    }\n  },\n\n  findFeatures: function (chr, start, end) {\n    var features = this.features(chr).search({ x: start - this.dataBuffer.start, y: 0, w: end - start + this.dataBuffer.start + this.dataBuffer.end + 1, h: 1 });\n    var filters  = this.prop('featureFilters') || [];\n\n    for (var i = 0; i < filters.length; i++) {\n      features = $.grep(features, $.proxy(filters[i], this));\n    }\n\n    return this.sortFeatures(features);\n  },\n\n  sortFeatures: function (features) {\n    return features.sort(function (a, b) { return a.sort - b.sort; });\n  },\n\n  abort: function () {\n    for (var i = 0; i < this.dataLoading.length; i++) {\n      this.dataLoading[i].abort();\n    }\n\n    this.dataLoading = [];\n  },\n\n  hashCode: function (string) {\n    var hash = 0;\n    var c;\n\n    if (!string.length) {\n      return hash;\n    }\n\n    for (var i = 0; i < string.length; i++) {\n      c    = string.charCodeAt(i);\n      hash = ((hash << 5) - hash) + c;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n\n    return '' + hash;\n  }\n});\n","Genoverse.Track.View = Base.extend({\n  fontHeight       : 10,\n  fontFamily       : 'sans-serif',\n  fontWeight       : 'normal',\n  fontColor        : undefined, // label color defaults to this, or feature color, or track.color (below), in that order of precedence\n  color            : '#000000',\n  minScaledWidth   : 0.5,\n  widthCorrection  : 1, // Pixels to add to the end of a feature when scale > 1 - ensures that 1bp features are always at least 1px wide\n  labels           : true,\n  repeatLabels     : false,\n  bump             : false,\n  alwaysReposition : false,\n  depth            : undefined,\n  featureHeight    : undefined, // defaults to track height\n  featureMargin    : undefined, // e.g. { top: 3, right: 1, bottom: 1, left: 0 }\n\n  subFeatureJoinStyle     : false, // Can be 'line', 'peak', 'curve'\n  subFeatureJoinLineWidth : 0.5,\n\n  constructor: function (properties) {\n    $.extend(this, properties);\n    Genoverse.wrapFunctions(this);\n    this.init();\n  },\n\n  // difference between init and constructor: init gets called on reset, if reset is implemented\n  init: function () {\n    this.setDefaults();\n    this.scaleSettings = {};\n  },\n\n  setDefaults: function () {\n    this.featureMargin = this.featureMargin || { top: 3, right: 1, bottom: 1, left: 0 };\n\n    var margin = [ 'top', 'right', 'bottom', 'left' ];\n\n    for (var i = 0; i < margin.length; i++) {\n      if (typeof this.featureMargin[margin[i]] !== 'number') {\n        this.featureMargin[margin[i]] = 0;\n      }\n    }\n\n    this.context       = $('<canvas>')[0].getContext('2d');\n    this.featureHeight = typeof this.featureHeight !== 'undefined' ? this.featureHeight : this.prop('defaultHeight');\n    this.font          = this.fontWeight + ' ' + this.fontHeight + 'px ' + this.fontFamily;\n    this.labelUnits    = [ 'bp', 'kb', 'Mb', 'Gb', 'Tb' ];\n\n    this.context.font = this.font;\n\n    if (this.labels && this.labels !== 'overlay' && (this.depth || this.bump === 'labels')) {\n      this.labels = 'separate';\n    }\n  },\n\n  setScaleSettings: function (scale) {\n    var chr = this.browser.chr;\n\n    if (!this.scaleSettings[chr]) {\n      this.scaleSettings[chr] = {};\n    }\n\n    if (!this.scaleSettings[chr][scale]) {\n      var featurePositions = new RTree();\n\n      this.scaleSettings[chr][scale] = {\n        imgContainers    : $(),\n        featurePositions : featurePositions,\n        labelPositions   : this.labels === 'separate' ? new RTree() : featurePositions\n      };\n    }\n\n    return this.scaleSettings[chr][scale];\n  },\n\n  scaleFeatures: function (features, scale) {\n    var add = Math.max(scale, this.widthCorrection);\n    var feature, j;\n\n    for (var i = 0; i < features.length; i++) {\n      feature = features[i];\n\n      if (!feature.position) {\n        feature.position = {};\n      }\n\n      if (!feature.position[scale]) {\n        feature.position[scale] = {\n          start  : feature.start * scale,\n          width  : Math.max((feature.end - feature.start) * scale + add, this.minScaledWidth),\n          height : feature.height || this.featureHeight\n        };\n      }\n\n      if (feature.subFeatures) {\n        for (j = 0; j < feature.subFeatures.length; j++) {\n          if (typeof feature.subFeatures[j].height === 'undefined') {\n            feature.subFeatures[j].height = feature.position[scale].height;\n          }\n        }\n\n        this.scaleFeatures(feature.subFeatures, scale);\n      }\n    }\n\n    return features;\n  },\n\n  positionFeatures: function (features, params) {\n    params.margin = this.prop('margin');\n\n    for (var i = 0; i < features.length; i++) {\n      this.positionFeature(features[i], params);\n    }\n\n    params.width         = Math.ceil(params.width);\n    params.height        = Math.ceil(params.height);\n    params.featureHeight = Math.max(Math.ceil(params.featureHeight), this.prop('resizable') ? Math.max(this.prop('height'), this.prop('minLabelHeight')) : 0);\n    params.labelHeight   = Math.ceil(params.labelHeight);\n\n    return features;\n  },\n\n  positionFeature: function (feature, params) {\n    var scale         = params.scale;\n    var scaleSettings = this.scaleSettings[feature.chr][scale];\n\n    if (!scaleSettings) {\n      return;\n    }\n\n    var subFeatures = feature.subFeatures || [];\n    var i;\n\n    feature.position[scale].X = feature.position[scale].start - params.scaledStart; // FIXME: always have to reposition for X, in case a feature appears in 2 images. Pass scaledStart around instead?\n\n    for (i = 0; i < subFeatures.length; i++) {\n      subFeatures[i].position[scale].x = subFeatures[i].position[scale].start - params.scaledStart;\n\n      if (this.subFeatureJoinStyle) {\n        subFeatures[i].position[scale].join   = subFeatures[i].position[scale].join || {};\n        subFeatures[i].position[scale].join.x = subFeatures[i].position[scale].start + subFeatures[i].position[scale].width - params.scaledStart;\n      }\n    }\n\n    if (this.alwaysReposition || !feature.position[scale].positioned) {\n      feature.position[scale].H = feature.position[scale].height + this.featureMargin.bottom;\n      feature.position[scale].W = feature.position[scale].width  + (feature.marginRight || this.featureMargin.right);\n      feature.position[scale].Y = (\n        typeof feature.position[scale].y === 'number' ? feature.position[scale].y :\n        typeof feature.y                 === 'number' ? feature.y * feature.position[scale].H : 0\n      ) + (feature.marginTop || this.featureMargin.top);\n\n      if (feature.label) {\n        if (typeof feature.label === 'string') {\n          feature.label = feature.label.split('\\n');\n        }\n\n        var context = this.context;\n\n        feature.labelHeight = feature.labelHeight || (this.fontHeight + 2) * feature.label.length;\n        feature.labelWidth  = feature.labelWidth  || Math.max.apply(Math, $.map(feature.label, function (l) { return Math.ceil(context.measureText(l).width); })) + 1;\n\n        if (this.labels === true) {\n          feature.position[scale].H += feature.labelHeight;\n          feature.position[scale].W  = Math.max(feature.labelWidth, feature.position[scale].W);\n        } else if (this.labels === 'separate' && !feature.position[scale].label) {\n          feature.position[scale].label = {\n            x: feature.position[scale].start,\n            y: feature.position[scale].Y,\n            w: feature.labelWidth,\n            h: feature.labelHeight\n          };\n        }\n      }\n\n      var bounds = {\n        x: feature.position[scale].start,\n        y: feature.position[scale].Y,\n        w: feature.position[scale].W,\n        h: feature.position[scale].H + (feature.marginTop || this.featureMargin.top)\n      };\n\n      feature.position[scale].bounds = bounds;\n\n      if (this.bump === true) {\n        this.bumpFeature(bounds, feature, scale, scaleSettings.featurePositions);\n      }\n\n      scaleSettings.featurePositions.insert(bounds, feature);\n\n      feature.position[scale].bottom     = feature.position[scale].Y + bounds.h + params.margin;\n      feature.position[scale].positioned = true;\n    }\n\n    var join = this.subFeatureJoinStyle && subFeatures.length ? {\n      height : Math.max.apply(Math, subFeatures.map(function (c) { return c.fake ? 0 : c.position[scale].height; })) / 2 * (feature.strand > 0 ? -1 : 1),\n      y      : feature.position[scale].Y + feature.position[scale].height / 2\n    } : false;\n\n    for (i = 0; i < subFeatures.length; i++) {\n      subFeatures[i].position[scale].y = feature.position[scale].Y + (feature.position[scale].height - subFeatures[i].position[scale].height) / 2;\n\n      if (join && subFeatures[i + 1]) {\n        $.extend(subFeatures[i].position[scale].join, { width: subFeatures[i + 1].position[scale].x - subFeatures[i].position[scale].join.x }, join);\n      }\n    }\n\n    if (this.labels === 'separate' && feature.position[scale].label) {\n      if (this.alwaysReposition || !feature.position[scale].label.positioned) {\n        this.bumpFeature(feature.position[scale].label, feature, scale, scaleSettings.labelPositions);\n\n        feature.position[scale].label.bottom     = feature.position[scale].label.y + feature.position[scale].label.h + params.margin;\n        feature.position[scale].label.positioned = true;\n\n        scaleSettings.labelPositions.insert(feature.position[scale].label, feature);\n      }\n\n      params.labelHeight = Math.max(params.labelHeight, feature.position[scale].label.bottom);\n    }\n\n    params.featureHeight = Math.max(params.featureHeight, feature.position[scale].bottom);\n    params.height        = Math.max(params.height, params.featureHeight + params.labelHeight);\n  },\n\n  // FIXME: should label bumping bounds be distinct from feature bumping bounds when label is smaller than feature?\n  bumpFeature: function (bounds, feature, scale, tree) {\n    var depth         = 0;\n    var scaleSettings = this.scaleSettings[feature.chr][scale];\n    var labels        = tree === scaleSettings.labelPositions && tree !== scaleSettings.featurePositions;\n    var bump, clash;\n\n    do {\n      if (this.depth && ++depth >= this.depth) {\n        if (!labels && $.grep(scaleSettings.featurePositions.search(bounds), function (f) { return f.position[scale].visible !== false; }).length) {\n          feature.position[scale].visible = false;\n        }\n\n        break;\n      }\n\n      bump  = false;\n      clash = tree.search(bounds)[0];\n\n      if (clash && clash.id !== feature.id) {\n        bounds.y = clash.position[scale][labels ? 'label' : 'bounds'].y + clash.position[scale][labels ? 'label' : 'bounds'].h;\n        bump     = true;\n      }\n    } while (bump);\n\n    if (!labels) {\n      feature.position[scale].Y = bounds.y;\n    }\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var feature, f;\n\n    for (var i = 0; i < features.length; i++) {\n      feature = features[i];\n\n      if (feature.position[scale].visible !== false) {\n        // TODO: extend with feature.position[scale], rationalize keys\n        f = $.extend({}, feature, {\n          x             : feature.position[scale].X,\n          y             : feature.position[scale].Y,\n          width         : feature.position[scale].width,\n          height        : feature.position[scale].height,\n          labelPosition : feature.position[scale].label\n        });\n\n        this.drawFeature(f, featureContext, labelContext, scale);\n\n        if (f.legend !== feature.legend) {\n          feature.legend      = f.legend;\n          feature.legendColor = f.color;\n        }\n      }\n    }\n  },\n\n  drawFeature: function (feature, featureContext, labelContext, scale) {\n    if (feature.color !== false && !feature.color) {\n      this.setFeatureColor(feature);\n    }\n\n    if (feature.subFeatures) {\n      this.drawSubFeatures(feature, featureContext, labelContext, scale);\n    } else {\n      if (feature.x < 0 || feature.x + feature.width > this.width) {\n        this.truncateForDrawing(feature);\n      }\n\n      if (feature.color !== false) {\n        featureContext.fillStyle = feature.color;\n        featureContext.fillRect(feature.x, feature.y, feature.width, feature.height);\n      }\n\n      if (feature.clear === true) {\n        featureContext.clearRect(feature.x, feature.y, feature.width, feature.height);\n      }\n\n      if (feature.borderColor) {\n        featureContext.strokeStyle = feature.borderColor;\n        featureContext.strokeRect(feature.x, Math.floor(feature.y) + 0.5, feature.width, feature.height);\n      }\n    }\n\n    if (this.labels && feature.label) {\n      this.drawLabel(feature, labelContext, scale);\n    }\n\n    if (feature.decorations) {\n      this.decorateFeature(feature, featureContext, scale);\n    }\n  },\n\n  drawSubFeatures: function (feature, featureContext, labelContext, scale) {\n    var subFeatures = $.extend(true, [], feature.subFeatures);\n    var joinColor   = feature.joinColor || feature.color;\n\n    for (var i = 0; i < subFeatures.length; i++) {\n      if (!subFeatures[i].fake) {\n        this.drawFeature($.extend(true, {}, feature, { subFeatures: false, label: false }, subFeatures[i].position[scale], subFeatures[i]), featureContext, labelContext, scale);\n      }\n\n      if (subFeatures[i].position[scale].join && subFeatures[i].position[scale].join.width > 0) {\n        this.drawSubFeatureJoin($.extend({ color: joinColor }, subFeatures[i].position[scale].join), featureContext);\n      }\n    }\n  },\n\n  drawLabel: function (feature, context, scale) {\n    var original = feature.untruncated;\n    var width    = (original || feature).width;\n\n    if (this.labels === 'overlay' && feature.labelWidth >= Math.floor(width)) {\n      return;\n    }\n\n    if (feature.labelPosition) {\n      context.labelPositions = context.labelPositions || new RTree();\n    }\n\n    if (typeof feature.label === 'string') {\n      feature.label = [ feature.label ];\n    }\n\n    var x       = (original || feature).x;\n    var n       = this.repeatLabels ? Math.ceil((width - Math.max(scale, 1) - (this.labels === 'overlay' ? feature.labelWidth : 0)) / this.width) || 1 : 1;\n    var spacing = width / n;\n    var label, start, j, y, currentY, h;\n\n    if (this.repeatLabels && (scale > 1 || this.labels !== 'overlay')) { // Ensure there's always a label in each image\n      spacing = this.browser.length * scale;\n      n = Math.ceil(width / spacing);\n    }\n\n    if (!feature.labelColor) {\n      this.setLabelColor(feature);\n    }\n\n    context.fillStyle = feature.labelColor;\n\n    if (this.labels === 'overlay') {\n      label = [ feature.label.join(' ') ];\n      y     = feature.y + (feature.height + 1) / 2;\n      h     = 0;\n    } else {\n      label = feature.label;\n      y     = feature.labelPosition ? feature.labelPosition.y : feature.y + feature.height + this.featureMargin.bottom;\n      h     = this.fontHeight + 2;\n    }\n\n    var i      = context.textAlign === 'center' ? 0.5 : 0;\n    var offset = feature.labelWidth * i;\n\n    if (n > 1) {\n      i += Math.max(Math.floor(-(feature.labelWidth + x) / spacing), 0);\n    }\n\n    for (; i < n; i++) {\n      start = x + (i * spacing);\n\n      if (start + feature.labelWidth >= 0) {\n        if ((start - offset > this.width) || (i >= 1 && start + feature.labelWidth > feature.position[scale].X + feature.position[scale].width)) {\n          break;\n        }\n\n        for (j = 0; j < label.length; j++) {\n          currentY = y + (j * h);\n\n          if (context.labelPositions && context.labelPositions.search({ x: start, y: currentY, w: feature.labelWidth, h: h }).length) {\n            feature.position[scale].label.visible = false;\n            continue;\n          }\n\n          context.fillText(label[j], start, currentY);\n\n          if (context.labelPositions) {\n            context.labelPositions.insert({ x: start, y: currentY, w: feature.labelWidth, h: h }, label[j]);\n          }\n        }\n      }\n    }\n  },\n\n  setFeatureColor: function (feature) {\n    feature.color = this.color;\n  },\n\n  setLabelColor: function (feature) {\n    feature.labelColor = this.fontColor || feature.color || this.color;\n  },\n\n  // Method to lighten a color by an amount, adapted from http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n  shadeColor: function (color, percent) {\n    var f = parseInt(color.slice(1), 16);\n    var R = f >> 16;\n    var G = f >> 8 & 0x00FF;\n    var B = f & 0x0000FF;\n\n    return '#' + (\n      0x1000000 +\n      (Math.round((255 - R) * percent) + R) * 0x10000 +\n      (Math.round((255 - G) * percent) + G) * 0x100 +\n      (Math.round((255 - B) * percent) + B)\n    ).toString(16).slice(1);\n  },\n\n  // truncate features - make the features start at 1px outside the canvas to ensure no lines are drawn at the borders incorrectly\n  truncateForDrawing: function (feature) {\n    var start = Math.min(Math.max(feature.x, -1), this.width + 1);\n    var width = feature.x - start + feature.width;\n\n    if (width + start > this.width) {\n      width = this.width - start + 1;\n    }\n\n    feature.untruncated = { x: feature.x, width: feature.width };\n    feature.x           = start;\n    feature.width       = Math.max(width, 0);\n  },\n\n  drawSubFeatureJoin: function (join, context) {\n    var coords = this.truncateSubFeatureJoinForDrawing(join);\n\n    if (!coords) {\n      return;\n    }\n\n    var lineWidth = context.lineWidth;\n\n    context.strokeStyle = join.color;\n    context.lineWidth   = this.subFeatureJoinLineWidth;\n\n    context.beginPath();\n    context.moveTo(coords.x1, coords.y1);\n\n    switch (this.subFeatureJoinStyle) {\n      case 'line':\n        context.lineTo(coords.x3, coords.y1);\n        break;\n      case 'peak':\n        context.lineTo(coords.x2, coords.y2);\n        context.lineTo(coords.x3, coords.y3);\n        break;\n      case 'curve':\n        context.quadraticCurveTo(coords.x2, coords.y2, coords.x3, coords.y3);\n        break;\n      default: break;\n    }\n\n    context.stroke();\n\n    context.lineWidth = lineWidth;\n  },\n\n  truncateSubFeatureJoinForDrawing: function (coords) {\n    var y1 = coords.y; // y coord of the ends of the line (half way down the exon box)\n    var y3 = y1;\n\n    if (this.subFeatureJoinStyle === 'line') {\n      this.truncateForDrawing(coords);\n      y1 += 0.5; // Sharpen line\n    }\n\n    var x1 = coords.x;                // x coord of the right edge of the first exon\n    var x3 = coords.x + coords.width; // x coord of the left edge of the second exon\n\n    // Skip if completely outside the image's region\n    if (x3 < 0 || x1 > this.width) {\n      return false;\n    }\n\n    var x2, y2, xMid, yScale;\n\n    // Truncate the coordinates of the line being drawn, so it is inside the image's region\n    if (this.subFeatureJoinStyle === 'peak') {\n      xMid   = (x1 + x3) / 2;\n      x2     = xMid;                     // x coord of the peak of the peak/curve\n      y2     = coords.y + coords.height; // y coord of the peak of the peak/curve (level with the top (forward strand) or bottom (reverse strand) of the exon box)\n      yScale = (y2 - y1) / (xMid - x1);  // Scale factor for recalculating coords if points lie outside the image region\n\n      if (xMid < 0) {\n        y2 = coords.y + (yScale * x3);\n        x2 = 0;\n      } else if (xMid > this.width) {\n        y2 = coords.y + (yScale * (this.width - coords.x));\n        x2 = this.width;\n      }\n\n      if (x1 < 0) {\n        y1 = xMid < 0 ? y2 : coords.y - (yScale * coords.x);\n        x1 = 0;\n      }\n\n      if (x3 > this.width) {\n        y3 = xMid > this.width ? y2 : y2 - (yScale * (this.width - x2));\n        x3 = this.width;\n      }\n    } else if (this.subFeatureJoinStyle === 'curve') {\n      // TODO: try truncating when style is curve\n      x2 = coords.x + coords.width / 2;\n      y2 = coords.y + coords.height;\n    }\n\n    return {\n      x1: x1, y1: y1,\n      x2: x2, y2: y2,\n      x3: x3, y3: y3\n    };\n  },\n\n  formatLabel: function (label) {\n    var power = Math.floor((label.toString().length - 1) / 3);\n    var unit  = this.labelUnits[power];\n\n    label /= Math.pow(10, power * 3);\n\n    return Math.floor(label) + (unit === 'bp' ? '' : '.' + (label.toString().split('.')[1] || '').concat('00').substring(0, 2)) + ' ' + unit;\n  },\n\n  drawBackground  : $.noop,\n  decorateFeature : $.noop // decoration for the features\n});\n","Genoverse.Genomes.grch37 = {\n  \"1\": {\n    \"size\"  : 249250621,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 121500001, \"end\": 125000000, \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 120600001, \"end\": 121500000, \"type\": \"gneg\"    },\n      { \"id\": \"p12\",    \"start\": 117800001, \"end\": 120600000, \"type\": \"gpos50\"  },\n      { \"id\": \"p13.1\",  \"start\": 116100001, \"end\": 117800000, \"type\": \"gneg\"    },\n      { \"id\": \"p13.2\",  \"start\": 111800001, \"end\": 116100000, \"type\": \"gpos50\"  },\n      { \"id\": \"p13.3\",  \"start\": 107200001, \"end\": 111800000, \"type\": \"gneg\"    },\n      { \"id\": \"p21.1\",  \"start\": 102200001, \"end\": 107200000, \"type\": \"gpos100\" },\n      { \"id\": \"p21.2\",  \"start\": 99700001,  \"end\": 102200000, \"type\": \"gneg\"    },\n      { \"id\": \"p21.3\",  \"start\": 94700001,  \"end\": 99700000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p22.1\",  \"start\": 92000001,  \"end\": 94700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.2\",  \"start\": 88400001,  \"end\": 92000000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p22.3\",  \"start\": 84900001,  \"end\": 88400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p31.1\",  \"start\": 69700001,  \"end\": 84900000,  \"type\": \"gpos100\" },\n      { \"id\": \"p31.2\",  \"start\": 68900001,  \"end\": 69700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p31.3\",  \"start\": 61300001,  \"end\": 68900000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p32.1\",  \"start\": 59000001,  \"end\": 61300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p32.2\",  \"start\": 56100001,  \"end\": 59000000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p32.3\",  \"start\": 50700001,  \"end\": 56100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p33\",    \"start\": 46800001,  \"end\": 50700000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p34.1\",  \"start\": 44100001,  \"end\": 46800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p34.2\",  \"start\": 40100001,  \"end\": 44100000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p34.3\",  \"start\": 34600001,  \"end\": 40100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p35.1\",  \"start\": 32400001,  \"end\": 34600000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p35.2\",  \"start\": 30200001,  \"end\": 32400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p35.3\",  \"start\": 28000001,  \"end\": 30200000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p36.11\", \"start\": 23900001,  \"end\": 28000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p36.12\", \"start\": 20400001,  \"end\": 23900000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p36.13\", \"start\": 16200001,  \"end\": 20400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p36.21\", \"start\": 12700001,  \"end\": 16200000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p36.22\", \"start\": 9200001,   \"end\": 12700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p36.23\", \"start\": 7200001,   \"end\": 9200000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p36.31\", \"start\": 5400001,   \"end\": 7200000,   \"type\": \"gneg\"    },\n      { \"id\": \"p36.32\", \"start\": 2300001,   \"end\": 5400000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p36.33\", \"start\": 1,         \"end\": 2300000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11\",    \"start\": 125000001, \"end\": 128900000, \"type\": \"acen\"    },\n      { \"id\": \"q12\",    \"start\": 128900001, \"end\": 142600000, \"type\": \"gvar\"    },\n      { \"id\": \"q21.1\",  \"start\": 142600001, \"end\": 147000000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.2\",  \"start\": 147000001, \"end\": 150300000, \"type\": \"gpos50\"  },\n      { \"id\": \"q21.3\",  \"start\": 150300001, \"end\": 155000000, \"type\": \"gneg\"    },\n      { \"id\": \"q22\",    \"start\": 155000001, \"end\": 156500000, \"type\": \"gpos50\"  },\n      { \"id\": \"q23.1\",  \"start\": 156500001, \"end\": 159100000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.2\",  \"start\": 159100001, \"end\": 160500000, \"type\": \"gpos50\"  },\n      { \"id\": \"q23.3\",  \"start\": 160500001, \"end\": 165500000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.1\",  \"start\": 165500001, \"end\": 167200000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.2\",  \"start\": 167200001, \"end\": 170900000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.3\",  \"start\": 170900001, \"end\": 172900000, \"type\": \"gpos75\"  },\n      { \"id\": \"q25.1\",  \"start\": 172900001, \"end\": 176000000, \"type\": \"gneg\"    },\n      { \"id\": \"q25.2\",  \"start\": 176000001, \"end\": 180300000, \"type\": \"gpos50\"  },\n      { \"id\": \"q25.3\",  \"start\": 180300001, \"end\": 185800000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.1\",  \"start\": 185800001, \"end\": 190800000, \"type\": \"gpos100\" },\n      { \"id\": \"q31.2\",  \"start\": 190800001, \"end\": 193800000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.3\",  \"start\": 193800001, \"end\": 198700000, \"type\": \"gpos100\" },\n      { \"id\": \"q32.1\",  \"start\": 198700001, \"end\": 207200000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.2\",  \"start\": 207200001, \"end\": 211500000, \"type\": \"gpos25\"  },\n      { \"id\": \"q32.3\",  \"start\": 211500001, \"end\": 214500000, \"type\": \"gneg\"    },\n      { \"id\": \"q41\",    \"start\": 214500001, \"end\": 224100000, \"type\": \"gpos100\" },\n      { \"id\": \"q42.11\", \"start\": 224100001, \"end\": 224600000, \"type\": \"gneg\"    },\n      { \"id\": \"q42.12\", \"start\": 224600001, \"end\": 227000000, \"type\": \"gpos25\"  },\n      { \"id\": \"q42.13\", \"start\": 227000001, \"end\": 230700000, \"type\": \"gneg\"    },\n      { \"id\": \"q42.2\",  \"start\": 230700001, \"end\": 234700000, \"type\": \"gpos50\"  },\n      { \"id\": \"q42.3\",  \"start\": 234700001, \"end\": 236600000, \"type\": \"gneg\"    },\n      { \"id\": \"q43\",    \"start\": 236600001, \"end\": 243700000, \"type\": \"gpos75\"  },\n      { \"id\": \"q44\",    \"start\": 243700001, \"end\": 249250621, \"type\": \"gneg\"    }\n    ]\n  },\n  \"2\": {\n    \"size\"  : 243199373,\n    \"bands\" : [\n      { \"id\": \"p11.1\", \"start\": 90500001,  \"end\": 93300000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\", \"start\": 83300001,  \"end\": 90500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12\",   \"start\": 75000001,  \"end\": 83300000,  \"type\": \"gpos100\" },\n      { \"id\": \"p13.1\", \"start\": 73500001,  \"end\": 75000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p13.2\", \"start\": 71500001,  \"end\": 73500000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p13.3\", \"start\": 68600001,  \"end\": 71500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14\",   \"start\": 64100001,  \"end\": 68600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p15\",   \"start\": 61300001,  \"end\": 64100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p16.1\", \"start\": 55000001,  \"end\": 61300000,  \"type\": \"gpos100\" },\n      { \"id\": \"p16.2\", \"start\": 52900001,  \"end\": 55000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p16.3\", \"start\": 47800001,  \"end\": 52900000,  \"type\": \"gpos100\" },\n      { \"id\": \"p21\",   \"start\": 41800001,  \"end\": 47800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.1\", \"start\": 38600001,  \"end\": 41800000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p22.2\", \"start\": 36600001,  \"end\": 38600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.3\", \"start\": 32100001,  \"end\": 36600000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p23.1\", \"start\": 30000001,  \"end\": 32100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p23.2\", \"start\": 27900001,  \"end\": 30000000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p23.3\", \"start\": 24000001,  \"end\": 27900000,  \"type\": \"gneg\"    },\n      { \"id\": \"p24.1\", \"start\": 19200001,  \"end\": 24000000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p24.2\", \"start\": 16700001,  \"end\": 19200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p24.3\", \"start\": 12200001,  \"end\": 16700000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p25.1\", \"start\": 7100001,   \"end\": 12200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p25.2\", \"start\": 4400001,   \"end\": 7100000,   \"type\": \"gpos50\"  },\n      { \"id\": \"p25.3\", \"start\": 1,         \"end\": 4400000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\", \"start\": 93300001,  \"end\": 96800000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.2\", \"start\": 96800001,  \"end\": 102700000, \"type\": \"gneg\"    },\n      { \"id\": \"q12.1\", \"start\": 102700001, \"end\": 106000000, \"type\": \"gpos50\"  },\n      { \"id\": \"q12.2\", \"start\": 106000001, \"end\": 107500000, \"type\": \"gneg\"    },\n      { \"id\": \"q12.3\", \"start\": 107500001, \"end\": 110200000, \"type\": \"gpos25\"  },\n      { \"id\": \"q13\",   \"start\": 110200001, \"end\": 114400000, \"type\": \"gneg\"    },\n      { \"id\": \"q14.1\", \"start\": 114400001, \"end\": 118800000, \"type\": \"gpos50\"  },\n      { \"id\": \"q14.2\", \"start\": 118800001, \"end\": 122400000, \"type\": \"gneg\"    },\n      { \"id\": \"q14.3\", \"start\": 122400001, \"end\": 129900000, \"type\": \"gpos50\"  },\n      { \"id\": \"q21.1\", \"start\": 129900001, \"end\": 132500000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.2\", \"start\": 132500001, \"end\": 135100000, \"type\": \"gpos25\"  },\n      { \"id\": \"q21.3\", \"start\": 135100001, \"end\": 136800000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.1\", \"start\": 136800001, \"end\": 142200000, \"type\": \"gpos100\" },\n      { \"id\": \"q22.2\", \"start\": 142200001, \"end\": 144100000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.3\", \"start\": 144100001, \"end\": 148700000, \"type\": \"gpos100\" },\n      { \"id\": \"q23.1\", \"start\": 148700001, \"end\": 149900000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.2\", \"start\": 149900001, \"end\": 150500000, \"type\": \"gpos25\"  },\n      { \"id\": \"q23.3\", \"start\": 150500001, \"end\": 154900000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.1\", \"start\": 154900001, \"end\": 159800000, \"type\": \"gpos75\"  },\n      { \"id\": \"q24.2\", \"start\": 159800001, \"end\": 163700000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.3\", \"start\": 163700001, \"end\": 169700000, \"type\": \"gpos75\"  },\n      { \"id\": \"q31.1\", \"start\": 169700001, \"end\": 178000000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.2\", \"start\": 178000001, \"end\": 180600000, \"type\": \"gpos50\"  },\n      { \"id\": \"q31.3\", \"start\": 180600001, \"end\": 183000000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.1\", \"start\": 183000001, \"end\": 189400000, \"type\": \"gpos75\"  },\n      { \"id\": \"q32.2\", \"start\": 189400001, \"end\": 191900000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.3\", \"start\": 191900001, \"end\": 197400000, \"type\": \"gpos75\"  },\n      { \"id\": \"q33.1\", \"start\": 197400001, \"end\": 203300000, \"type\": \"gneg\"    },\n      { \"id\": \"q33.2\", \"start\": 203300001, \"end\": 204900000, \"type\": \"gpos50\"  },\n      { \"id\": \"q33.3\", \"start\": 204900001, \"end\": 209000000, \"type\": \"gneg\"    },\n      { \"id\": \"q34\",   \"start\": 209000001, \"end\": 215300000, \"type\": \"gpos100\" },\n      { \"id\": \"q35\",   \"start\": 215300001, \"end\": 221500000, \"type\": \"gneg\"    },\n      { \"id\": \"q36.1\", \"start\": 221500001, \"end\": 225200000, \"type\": \"gpos75\"  },\n      { \"id\": \"q36.2\", \"start\": 225200001, \"end\": 226100000, \"type\": \"gneg\"    },\n      { \"id\": \"q36.3\", \"start\": 226100001, \"end\": 231000000, \"type\": \"gpos100\" },\n      { \"id\": \"q37.1\", \"start\": 231000001, \"end\": 235600000, \"type\": \"gneg\"    },\n      { \"id\": \"q37.2\", \"start\": 235600001, \"end\": 237300000, \"type\": \"gpos50\"  },\n      { \"id\": \"q37.3\", \"start\": 237300001, \"end\": 243199373, \"type\": \"gneg\"    }\n    ]\n  },\n  \"3\": {\n    \"size\"  : 198022430,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 87900001,  \"end\": 91000000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 87200001,  \"end\": 87900000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.1\",  \"start\": 83500001,  \"end\": 87200000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p12.2\",  \"start\": 79800001,  \"end\": 83500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.3\",  \"start\": 74200001,  \"end\": 79800000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p13\",    \"start\": 69800001,  \"end\": 74200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.1\",  \"start\": 63700001,  \"end\": 69800000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p14.2\",  \"start\": 58600001,  \"end\": 63700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.3\",  \"start\": 54400001,  \"end\": 58600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p21.1\",  \"start\": 52300001,  \"end\": 54400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.2\",  \"start\": 50600001,  \"end\": 52300000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p21.31\", \"start\": 44200001,  \"end\": 50600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.32\", \"start\": 44100001,  \"end\": 44200000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p21.33\", \"start\": 43700001,  \"end\": 44100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.1\",  \"start\": 39400001,  \"end\": 43700000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p22.2\",  \"start\": 36500001,  \"end\": 39400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.3\",  \"start\": 32100001,  \"end\": 36500000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p23\",    \"start\": 30900001,  \"end\": 32100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p24.1\",  \"start\": 26400001,  \"end\": 30900000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p24.2\",  \"start\": 23900001,  \"end\": 26400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p24.3\",  \"start\": 16400001,  \"end\": 23900000,  \"type\": \"gpos100\" },\n      { \"id\": \"p25.1\",  \"start\": 13300001,  \"end\": 16400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p25.2\",  \"start\": 11800001,  \"end\": 13300000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p25.3\",  \"start\": 8700001,   \"end\": 11800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p26.1\",  \"start\": 4000001,   \"end\": 8700000,   \"type\": \"gpos50\"  },\n      { \"id\": \"p26.2\",  \"start\": 2800001,   \"end\": 4000000,   \"type\": \"gneg\"    },\n      { \"id\": \"p26.3\",  \"start\": 1,         \"end\": 2800000,   \"type\": \"gpos50\"  },\n      { \"id\": \"q11.1\",  \"start\": 91000001,  \"end\": 93900000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 93900001,  \"end\": 98300000,  \"type\": \"gvar\"    },\n      { \"id\": \"q12.1\",  \"start\": 98300001,  \"end\": 100000000, \"type\": \"gneg\"    },\n      { \"id\": \"q12.2\",  \"start\": 100000001, \"end\": 100900000, \"type\": \"gpos25\"  },\n      { \"id\": \"q12.3\",  \"start\": 100900001, \"end\": 102800000, \"type\": \"gneg\"    },\n      { \"id\": \"q13.11\", \"start\": 102800001, \"end\": 106200000, \"type\": \"gpos75\"  },\n      { \"id\": \"q13.12\", \"start\": 106200001, \"end\": 107900000, \"type\": \"gneg\"    },\n      { \"id\": \"q13.13\", \"start\": 107900001, \"end\": 111300000, \"type\": \"gpos50\"  },\n      { \"id\": \"q13.2\",  \"start\": 111300001, \"end\": 113500000, \"type\": \"gneg\"    },\n      { \"id\": \"q13.31\", \"start\": 113500001, \"end\": 117300000, \"type\": \"gpos75\"  },\n      { \"id\": \"q13.32\", \"start\": 117300001, \"end\": 119000000, \"type\": \"gneg\"    },\n      { \"id\": \"q13.33\", \"start\": 119000001, \"end\": 121900000, \"type\": \"gpos75\"  },\n      { \"id\": \"q21.1\",  \"start\": 121900001, \"end\": 123800000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.2\",  \"start\": 123800001, \"end\": 125800000, \"type\": \"gpos25\"  },\n      { \"id\": \"q21.3\",  \"start\": 125800001, \"end\": 129200000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.1\",  \"start\": 129200001, \"end\": 133700000, \"type\": \"gpos25\"  },\n      { \"id\": \"q22.2\",  \"start\": 133700001, \"end\": 135700000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.3\",  \"start\": 135700001, \"end\": 138700000, \"type\": \"gpos25\"  },\n      { \"id\": \"q23\",    \"start\": 138700001, \"end\": 142800000, \"type\": \"gneg\"    },\n      { \"id\": \"q24\",    \"start\": 142800001, \"end\": 148900000, \"type\": \"gpos100\" },\n      { \"id\": \"q25.1\",  \"start\": 148900001, \"end\": 152100000, \"type\": \"gneg\"    },\n      { \"id\": \"q25.2\",  \"start\": 152100001, \"end\": 155000000, \"type\": \"gpos50\"  },\n      { \"id\": \"q25.31\", \"start\": 155000001, \"end\": 157000000, \"type\": \"gneg\"    },\n      { \"id\": \"q25.32\", \"start\": 157000001, \"end\": 159000000, \"type\": \"gpos50\"  },\n      { \"id\": \"q25.33\", \"start\": 159000001, \"end\": 160700000, \"type\": \"gneg\"    },\n      { \"id\": \"q26.1\",  \"start\": 160700001, \"end\": 167600000, \"type\": \"gpos100\" },\n      { \"id\": \"q26.2\",  \"start\": 167600001, \"end\": 170900000, \"type\": \"gneg\"    },\n      { \"id\": \"q26.31\", \"start\": 170900001, \"end\": 175700000, \"type\": \"gpos75\"  },\n      { \"id\": \"q26.32\", \"start\": 175700001, \"end\": 179000000, \"type\": \"gneg\"    },\n      { \"id\": \"q26.33\", \"start\": 179000001, \"end\": 182700000, \"type\": \"gpos75\"  },\n      { \"id\": \"q27.1\",  \"start\": 182700001, \"end\": 184500000, \"type\": \"gneg\"    },\n      { \"id\": \"q27.2\",  \"start\": 184500001, \"end\": 186000000, \"type\": \"gpos25\"  },\n      { \"id\": \"q27.3\",  \"start\": 186000001, \"end\": 187900000, \"type\": \"gneg\"    },\n      { \"id\": \"q28\",    \"start\": 187900001, \"end\": 192300000, \"type\": \"gpos75\"  },\n      { \"id\": \"q29\",    \"start\": 192300001, \"end\": 198022430, \"type\": \"gneg\"    }\n    ]\n  },\n  \"4\": {\n    \"size\"  : 191154276,\n    \"bands\" : [\n      { \"id\": \"p11\",    \"start\": 48200001,  \"end\": 50400000,  \"type\": \"acen\"    },\n      { \"id\": \"p12\",    \"start\": 44600001,  \"end\": 48200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p13\",    \"start\": 41200001,  \"end\": 44600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p14\",    \"start\": 35800001,  \"end\": 41200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.1\",  \"start\": 27700001,  \"end\": 35800000,  \"type\": \"gpos100\" },\n      { \"id\": \"p15.2\",  \"start\": 21300001,  \"end\": 27700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.31\", \"start\": 17800001,  \"end\": 21300000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p15.32\", \"start\": 15200001,  \"end\": 17800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.33\", \"start\": 11300001,  \"end\": 15200000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p16.1\",  \"start\": 6000001,   \"end\": 11300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p16.2\",  \"start\": 4500001,   \"end\": 6000000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p16.3\",  \"start\": 1,         \"end\": 4500000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11\",    \"start\": 50400001,  \"end\": 52700000,  \"type\": \"acen\"    },\n      { \"id\": \"q12\",    \"start\": 52700001,  \"end\": 59500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.1\",  \"start\": 59500001,  \"end\": 66600000,  \"type\": \"gpos100\" },\n      { \"id\": \"q13.2\",  \"start\": 66600001,  \"end\": 70500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.3\",  \"start\": 70500001,  \"end\": 76300000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q21.1\",  \"start\": 76300001,  \"end\": 78900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.21\", \"start\": 78900001,  \"end\": 82400000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q21.22\", \"start\": 82400001,  \"end\": 84100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.23\", \"start\": 84100001,  \"end\": 86900000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q21.3\",  \"start\": 86900001,  \"end\": 88000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.1\",  \"start\": 88000001,  \"end\": 93700000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q22.2\",  \"start\": 93700001,  \"end\": 95100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.3\",  \"start\": 95100001,  \"end\": 98800000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q23\",    \"start\": 98800001,  \"end\": 101100000, \"type\": \"gneg\"    },\n      { \"id\": \"q24\",    \"start\": 101100001, \"end\": 107700000, \"type\": \"gpos50\"  },\n      { \"id\": \"q25\",    \"start\": 107700001, \"end\": 114100000, \"type\": \"gneg\"    },\n      { \"id\": \"q26\",    \"start\": 114100001, \"end\": 120800000, \"type\": \"gpos75\"  },\n      { \"id\": \"q27\",    \"start\": 120800001, \"end\": 123800000, \"type\": \"gneg\"    },\n      { \"id\": \"q28.1\",  \"start\": 123800001, \"end\": 128800000, \"type\": \"gpos50\"  },\n      { \"id\": \"q28.2\",  \"start\": 128800001, \"end\": 131100000, \"type\": \"gneg\"    },\n      { \"id\": \"q28.3\",  \"start\": 131100001, \"end\": 139500000, \"type\": \"gpos100\" },\n      { \"id\": \"q31.1\",  \"start\": 139500001, \"end\": 141500000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.21\", \"start\": 141500001, \"end\": 146800000, \"type\": \"gpos25\"  },\n      { \"id\": \"q31.22\", \"start\": 146800001, \"end\": 148500000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.23\", \"start\": 148500001, \"end\": 151100000, \"type\": \"gpos25\"  },\n      { \"id\": \"q31.3\",  \"start\": 151100001, \"end\": 155600000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.1\",  \"start\": 155600001, \"end\": 161800000, \"type\": \"gpos100\" },\n      { \"id\": \"q32.2\",  \"start\": 161800001, \"end\": 164500000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.3\",  \"start\": 164500001, \"end\": 170100000, \"type\": \"gpos100\" },\n      { \"id\": \"q33\",    \"start\": 170100001, \"end\": 171900000, \"type\": \"gneg\"    },\n      { \"id\": \"q34.1\",  \"start\": 171900001, \"end\": 176300000, \"type\": \"gpos75\"  },\n      { \"id\": \"q34.2\",  \"start\": 176300001, \"end\": 177500000, \"type\": \"gneg\"    },\n      { \"id\": \"q34.3\",  \"start\": 177500001, \"end\": 183200000, \"type\": \"gpos100\" },\n      { \"id\": \"q35.1\",  \"start\": 183200001, \"end\": 187100000, \"type\": \"gneg\"    },\n      { \"id\": \"q35.2\",  \"start\": 187100001, \"end\": 191154276, \"type\": \"gpos25\"  }\n    ]\n  },\n  \"5\": {\n    \"size\"  : 180915260,\n    \"bands\" : [\n      { \"id\": \"p11\",    \"start\": 46100001,  \"end\": 48400000,  \"type\": \"acen\"    },\n      { \"id\": \"p12\",    \"start\": 42500001,  \"end\": 46100000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p13.1\",  \"start\": 38400001,  \"end\": 42500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p13.2\",  \"start\": 33800001,  \"end\": 38400000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p13.3\",  \"start\": 28900001,  \"end\": 33800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.1\",  \"start\": 24600001,  \"end\": 28900000,  \"type\": \"gpos100\" },\n      { \"id\": \"p14.2\",  \"start\": 23300001,  \"end\": 24600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.3\",  \"start\": 18400001,  \"end\": 23300000,  \"type\": \"gpos100\" },\n      { \"id\": \"p15.1\",  \"start\": 15000001,  \"end\": 18400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.2\",  \"start\": 9800001,   \"end\": 15000000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p15.31\", \"start\": 6300001,   \"end\": 9800000,   \"type\": \"gneg\"    },\n      { \"id\": \"p15.32\", \"start\": 4500001,   \"end\": 6300000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p15.33\", \"start\": 1,         \"end\": 4500000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 48400001,  \"end\": 50700000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 50700001,  \"end\": 58900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.1\",  \"start\": 58900001,  \"end\": 62900000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q12.2\",  \"start\": 62900001,  \"end\": 63200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.3\",  \"start\": 63200001,  \"end\": 66700000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q13.1\",  \"start\": 66700001,  \"end\": 68400000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.2\",  \"start\": 68400001,  \"end\": 73300000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.3\",  \"start\": 73300001,  \"end\": 76900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.1\",  \"start\": 76900001,  \"end\": 81400000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q14.2\",  \"start\": 81400001,  \"end\": 82800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.3\",  \"start\": 82800001,  \"end\": 92300000,  \"type\": \"gpos100\" },\n      { \"id\": \"q15\",    \"start\": 92300001,  \"end\": 98200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 98200001,  \"end\": 102800000, \"type\": \"gpos100\" },\n      { \"id\": \"q21.2\",  \"start\": 102800001, \"end\": 104500000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.3\",  \"start\": 104500001, \"end\": 109600000, \"type\": \"gpos100\" },\n      { \"id\": \"q22.1\",  \"start\": 109600001, \"end\": 111500000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 111500001, \"end\": 113100000, \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 113100001, \"end\": 115200000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.1\",  \"start\": 115200001, \"end\": 121400000, \"type\": \"gpos100\" },\n      { \"id\": \"q23.2\",  \"start\": 121400001, \"end\": 127300000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.3\",  \"start\": 127300001, \"end\": 130600000, \"type\": \"gpos100\" },\n      { \"id\": \"q31.1\",  \"start\": 130600001, \"end\": 136200000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.2\",  \"start\": 136200001, \"end\": 139500000, \"type\": \"gpos25\"  },\n      { \"id\": \"q31.3\",  \"start\": 139500001, \"end\": 144500000, \"type\": \"gneg\"    },\n      { \"id\": \"q32\",    \"start\": 144500001, \"end\": 149800000, \"type\": \"gpos75\"  },\n      { \"id\": \"q33.1\",  \"start\": 149800001, \"end\": 152700000, \"type\": \"gneg\"    },\n      { \"id\": \"q33.2\",  \"start\": 152700001, \"end\": 155700000, \"type\": \"gpos50\"  },\n      { \"id\": \"q33.3\",  \"start\": 155700001, \"end\": 159900000, \"type\": \"gneg\"    },\n      { \"id\": \"q34\",    \"start\": 159900001, \"end\": 168500000, \"type\": \"gpos100\" },\n      { \"id\": \"q35.1\",  \"start\": 168500001, \"end\": 172800000, \"type\": \"gneg\"    },\n      { \"id\": \"q35.2\",  \"start\": 172800001, \"end\": 176600000, \"type\": \"gpos25\"  },\n      { \"id\": \"q35.3\",  \"start\": 176600001, \"end\": 180915260, \"type\": \"gneg\"    }\n    ]\n  },\n  \"6\": {\n    \"size\"  : 171115067,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 58700001,  \"end\": 61000000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 57000001,  \"end\": 58700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.1\",  \"start\": 52900001,  \"end\": 57000000,  \"type\": \"gpos100\" },\n      { \"id\": \"p12.2\",  \"start\": 51800001,  \"end\": 52900000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.3\",  \"start\": 46200001,  \"end\": 51800000,  \"type\": \"gpos100\" },\n      { \"id\": \"p21.1\",  \"start\": 40500001,  \"end\": 46200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.2\",  \"start\": 36600001,  \"end\": 40500000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p21.31\", \"start\": 33500001,  \"end\": 36600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.32\", \"start\": 32100001,  \"end\": 33500000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p21.33\", \"start\": 30400001,  \"end\": 32100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.1\",  \"start\": 27000001,  \"end\": 30400000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p22.2\",  \"start\": 25200001,  \"end\": 27000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.3\",  \"start\": 15200001,  \"end\": 25200000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p23\",    \"start\": 13400001,  \"end\": 15200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p24.1\",  \"start\": 11600001,  \"end\": 13400000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p24.2\",  \"start\": 10600001,  \"end\": 11600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p24.3\",  \"start\": 7100001,   \"end\": 10600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p25.1\",  \"start\": 4200001,   \"end\": 7100000,   \"type\": \"gneg\"    },\n      { \"id\": \"p25.2\",  \"start\": 2300001,   \"end\": 4200000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p25.3\",  \"start\": 1,         \"end\": 2300000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 61000001,  \"end\": 63300000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 63300001,  \"end\": 63400000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12\",    \"start\": 63400001,  \"end\": 70000000,  \"type\": \"gpos100\" },\n      { \"id\": \"q13\",    \"start\": 70000001,  \"end\": 75900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.1\",  \"start\": 75900001,  \"end\": 83900000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q14.2\",  \"start\": 83900001,  \"end\": 84900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.3\",  \"start\": 84900001,  \"end\": 88000000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q15\",    \"start\": 88000001,  \"end\": 93100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q16.1\",  \"start\": 93100001,  \"end\": 99500000,  \"type\": \"gpos100\" },\n      { \"id\": \"q16.2\",  \"start\": 99500001,  \"end\": 100600000, \"type\": \"gneg\"    },\n      { \"id\": \"q16.3\",  \"start\": 100600001, \"end\": 105500000, \"type\": \"gpos100\" },\n      { \"id\": \"q21\",    \"start\": 105500001, \"end\": 114600000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.1\",  \"start\": 114600001, \"end\": 118300000, \"type\": \"gpos75\"  },\n      { \"id\": \"q22.2\",  \"start\": 118300001, \"end\": 118500000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.31\", \"start\": 118500001, \"end\": 126100000, \"type\": \"gpos100\" },\n      { \"id\": \"q22.32\", \"start\": 126100001, \"end\": 127100000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.33\", \"start\": 127100001, \"end\": 130300000, \"type\": \"gpos75\"  },\n      { \"id\": \"q23.1\",  \"start\": 130300001, \"end\": 131200000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.2\",  \"start\": 131200001, \"end\": 135200000, \"type\": \"gpos50\"  },\n      { \"id\": \"q23.3\",  \"start\": 135200001, \"end\": 139000000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.1\",  \"start\": 139000001, \"end\": 142800000, \"type\": \"gpos75\"  },\n      { \"id\": \"q24.2\",  \"start\": 142800001, \"end\": 145600000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.3\",  \"start\": 145600001, \"end\": 149000000, \"type\": \"gpos75\"  },\n      { \"id\": \"q25.1\",  \"start\": 149000001, \"end\": 152500000, \"type\": \"gneg\"    },\n      { \"id\": \"q25.2\",  \"start\": 152500001, \"end\": 155500000, \"type\": \"gpos50\"  },\n      { \"id\": \"q25.3\",  \"start\": 155500001, \"end\": 161000000, \"type\": \"gneg\"    },\n      { \"id\": \"q26\",    \"start\": 161000001, \"end\": 164500000, \"type\": \"gpos50\"  },\n      { \"id\": \"q27\",    \"start\": 164500001, \"end\": 171115067, \"type\": \"gneg\"    }\n    ]\n  },\n  \"7\": {\n    \"size\"  : 159138663,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 58000001,  \"end\": 59900000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 54000001,  \"end\": 58000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.1\",  \"start\": 50500001,  \"end\": 54000000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p12.2\",  \"start\": 49000001,  \"end\": 50500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.3\",  \"start\": 45400001,  \"end\": 49000000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p13\",    \"start\": 43300001,  \"end\": 45400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.1\",  \"start\": 37200001,  \"end\": 43300000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p14.2\",  \"start\": 35000001,  \"end\": 37200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.3\",  \"start\": 28800001,  \"end\": 35000000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p15.1\",  \"start\": 28000001,  \"end\": 28800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.2\",  \"start\": 25500001,  \"end\": 28000000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p15.3\",  \"start\": 20900001,  \"end\": 25500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.1\",  \"start\": 16500001,  \"end\": 20900000,  \"type\": \"gpos100\" },\n      { \"id\": \"p21.2\",  \"start\": 13800001,  \"end\": 16500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.3\",  \"start\": 7300001,   \"end\": 13800000,  \"type\": \"gpos100\" },\n      { \"id\": \"p22.1\",  \"start\": 4500001,   \"end\": 7300000,   \"type\": \"gneg\"    },\n      { \"id\": \"p22.2\",  \"start\": 2800001,   \"end\": 4500000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p22.3\",  \"start\": 1,         \"end\": 2800000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 59900001,  \"end\": 61700000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.21\", \"start\": 61700001,  \"end\": 67000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q11.22\", \"start\": 67000001,  \"end\": 72200000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q11.23\", \"start\": 72200001,  \"end\": 77500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.11\", \"start\": 77500001,  \"end\": 86400000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.12\", \"start\": 86400001,  \"end\": 88200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.13\", \"start\": 88200001,  \"end\": 91100000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q21.2\",  \"start\": 91100001,  \"end\": 92800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.3\",  \"start\": 92800001,  \"end\": 98000000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q22.1\",  \"start\": 98000001,  \"end\": 103800000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 103800001, \"end\": 104500000, \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 104500001, \"end\": 107400000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.1\",  \"start\": 107400001, \"end\": 114600000, \"type\": \"gpos75\"  },\n      { \"id\": \"q31.2\",  \"start\": 114600001, \"end\": 117400000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.31\", \"start\": 117400001, \"end\": 121100000, \"type\": \"gpos75\"  },\n      { \"id\": \"q31.32\", \"start\": 121100001, \"end\": 123800000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.33\", \"start\": 123800001, \"end\": 127100000, \"type\": \"gpos75\"  },\n      { \"id\": \"q32.1\",  \"start\": 127100001, \"end\": 129200000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.2\",  \"start\": 129200001, \"end\": 130400000, \"type\": \"gpos25\"  },\n      { \"id\": \"q32.3\",  \"start\": 130400001, \"end\": 132600000, \"type\": \"gneg\"    },\n      { \"id\": \"q33\",    \"start\": 132600001, \"end\": 138200000, \"type\": \"gpos50\"  },\n      { \"id\": \"q34\",    \"start\": 138200001, \"end\": 143100000, \"type\": \"gneg\"    },\n      { \"id\": \"q35\",    \"start\": 143100001, \"end\": 147900000, \"type\": \"gpos75\"  },\n      { \"id\": \"q36.1\",  \"start\": 147900001, \"end\": 152600000, \"type\": \"gneg\"    },\n      { \"id\": \"q36.2\",  \"start\": 152600001, \"end\": 155100000, \"type\": \"gpos25\"  },\n      { \"id\": \"q36.3\",  \"start\": 155100001, \"end\": 159138663, \"type\": \"gneg\"    }\n    ]\n  },\n  \"8\": {\n    \"size\"  : 146364022,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 43100001,  \"end\": 45600000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.21\", \"start\": 39700001,  \"end\": 43100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p11.22\", \"start\": 38300001,  \"end\": 39700000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p11.23\", \"start\": 36500001,  \"end\": 38300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12\",    \"start\": 28800001,  \"end\": 36500000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p21.1\",  \"start\": 27400001,  \"end\": 28800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.2\",  \"start\": 23300001,  \"end\": 27400000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p21.3\",  \"start\": 19000001,  \"end\": 23300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22\",    \"start\": 12700001,  \"end\": 19000000,  \"type\": \"gpos100\" },\n      { \"id\": \"p23.1\",  \"start\": 6200001,   \"end\": 12700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p23.2\",  \"start\": 2200001,   \"end\": 6200000,   \"type\": \"gpos75\"  },\n      { \"id\": \"p23.3\",  \"start\": 1,         \"end\": 2200000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 45600001,  \"end\": 48100000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.21\", \"start\": 48100001,  \"end\": 52200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q11.22\", \"start\": 52200001,  \"end\": 52600000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q11.23\", \"start\": 52600001,  \"end\": 55500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.1\",  \"start\": 55500001,  \"end\": 61600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q12.2\",  \"start\": 61600001,  \"end\": 62200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.3\",  \"start\": 62200001,  \"end\": 66000000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.1\",  \"start\": 66000001,  \"end\": 68000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.2\",  \"start\": 68000001,  \"end\": 70500000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.3\",  \"start\": 70500001,  \"end\": 73900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.11\", \"start\": 73900001,  \"end\": 78300000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.12\", \"start\": 78300001,  \"end\": 80100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.13\", \"start\": 80100001,  \"end\": 84600000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q21.2\",  \"start\": 84600001,  \"end\": 86900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.3\",  \"start\": 86900001,  \"end\": 93300000,  \"type\": \"gpos100\" },\n      { \"id\": \"q22.1\",  \"start\": 93300001,  \"end\": 99000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 99000001,  \"end\": 101600000, \"type\": \"gpos25\"  },\n      { \"id\": \"q22.3\",  \"start\": 101600001, \"end\": 106200000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.1\",  \"start\": 106200001, \"end\": 110500000, \"type\": \"gpos75\"  },\n      { \"id\": \"q23.2\",  \"start\": 110500001, \"end\": 112100000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.3\",  \"start\": 112100001, \"end\": 117700000, \"type\": \"gpos100\" },\n      { \"id\": \"q24.11\", \"start\": 117700001, \"end\": 119200000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.12\", \"start\": 119200001, \"end\": 122500000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.13\", \"start\": 122500001, \"end\": 127300000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.21\", \"start\": 127300001, \"end\": 131500000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.22\", \"start\": 131500001, \"end\": 136400000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.23\", \"start\": 136400001, \"end\": 139900000, \"type\": \"gpos75\"  },\n      { \"id\": \"q24.3\",  \"start\": 139900001, \"end\": 146364022, \"type\": \"gneg\"    }\n    ]\n  },\n  \"9\": {\n    \"size\"  : 141213431,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 47300001,  \"end\": 49000000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 43600001,  \"end\": 47300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12\",    \"start\": 41000001,  \"end\": 43600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p13.1\",  \"start\": 38400001,  \"end\": 41000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p13.2\",  \"start\": 36300001,  \"end\": 38400000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p13.3\",  \"start\": 33200001,  \"end\": 36300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.1\",  \"start\": 28000001,  \"end\": 33200000,  \"type\": \"gpos100\" },\n      { \"id\": \"p21.2\",  \"start\": 25600001,  \"end\": 28000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.3\",  \"start\": 19900001,  \"end\": 25600000,  \"type\": \"gpos100\" },\n      { \"id\": \"p22.1\",  \"start\": 18500001,  \"end\": 19900000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.2\",  \"start\": 16600001,  \"end\": 18500000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p22.3\",  \"start\": 14200001,  \"end\": 16600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p23\",    \"start\": 9000001,   \"end\": 14200000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p24.1\",  \"start\": 4600001,   \"end\": 9000000,   \"type\": \"gneg\"    },\n      { \"id\": \"p24.2\",  \"start\": 2200001,   \"end\": 4600000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p24.3\",  \"start\": 1,         \"end\": 2200000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11\",    \"start\": 49000001,  \"end\": 50700000,  \"type\": \"acen\"    },\n      { \"id\": \"q12\",    \"start\": 50700001,  \"end\": 65900000,  \"type\": \"gvar\"    },\n      { \"id\": \"q13\",    \"start\": 65900001,  \"end\": 68700000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.11\", \"start\": 68700001,  \"end\": 72200000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q21.12\", \"start\": 72200001,  \"end\": 74000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.13\", \"start\": 74000001,  \"end\": 79200000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q21.2\",  \"start\": 79200001,  \"end\": 81100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.31\", \"start\": 81100001,  \"end\": 84100000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q21.32\", \"start\": 84100001,  \"end\": 86900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.33\", \"start\": 86900001,  \"end\": 90400000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q22.1\",  \"start\": 90400001,  \"end\": 91800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 91800001,  \"end\": 93900000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q22.31\", \"start\": 93900001,  \"end\": 96600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.32\", \"start\": 96600001,  \"end\": 99300000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q22.33\", \"start\": 99300001,  \"end\": 102600000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.1\",  \"start\": 102600001, \"end\": 108200000, \"type\": \"gpos100\" },\n      { \"id\": \"q31.2\",  \"start\": 108200001, \"end\": 111300000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.3\",  \"start\": 111300001, \"end\": 114900000, \"type\": \"gpos25\"  },\n      { \"id\": \"q32\",    \"start\": 114900001, \"end\": 117700000, \"type\": \"gneg\"    },\n      { \"id\": \"q33.1\",  \"start\": 117700001, \"end\": 122500000, \"type\": \"gpos75\"  },\n      { \"id\": \"q33.2\",  \"start\": 122500001, \"end\": 125800000, \"type\": \"gneg\"    },\n      { \"id\": \"q33.3\",  \"start\": 125800001, \"end\": 130300000, \"type\": \"gpos25\"  },\n      { \"id\": \"q34.11\", \"start\": 130300001, \"end\": 133500000, \"type\": \"gneg\"    },\n      { \"id\": \"q34.12\", \"start\": 133500001, \"end\": 134000000, \"type\": \"gpos25\"  },\n      { \"id\": \"q34.13\", \"start\": 134000001, \"end\": 135900000, \"type\": \"gneg\"    },\n      { \"id\": \"q34.2\",  \"start\": 135900001, \"end\": 137400000, \"type\": \"gpos25\"  },\n      { \"id\": \"q34.3\",  \"start\": 137400001, \"end\": 141213431, \"type\": \"gneg\"    }\n    ]\n  },\n  \"10\": {\n    \"size\"  : 135534747,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 38000001,  \"end\": 40200000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.21\", \"start\": 34400001,  \"end\": 38000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p11.22\", \"start\": 31300001,  \"end\": 34400000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p11.23\", \"start\": 29600001,  \"end\": 31300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.1\",  \"start\": 24600001,  \"end\": 29600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p12.2\",  \"start\": 22600001,  \"end\": 24600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.31\", \"start\": 18700001,  \"end\": 22600000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p12.32\", \"start\": 18600001,  \"end\": 18700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.33\", \"start\": 17300001,  \"end\": 18600000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p13\",    \"start\": 12200001,  \"end\": 17300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14\",    \"start\": 6600001,   \"end\": 12200000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p15.1\",  \"start\": 3800001,   \"end\": 6600000,   \"type\": \"gneg\"    },\n      { \"id\": \"p15.2\",  \"start\": 3000001,   \"end\": 3800000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p15.3\",  \"start\": 1,         \"end\": 3000000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 40200001,  \"end\": 42300000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.21\", \"start\": 42300001,  \"end\": 46100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q11.22\", \"start\": 46100001,  \"end\": 49900000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q11.23\", \"start\": 49900001,  \"end\": 52900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 52900001,  \"end\": 61200000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.2\",  \"start\": 61200001,  \"end\": 64500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.3\",  \"start\": 64500001,  \"end\": 70600000,  \"type\": \"gpos100\" },\n      { \"id\": \"q22.1\",  \"start\": 70600001,  \"end\": 74900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 74900001,  \"end\": 77700000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 77700001,  \"end\": 82000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q23.1\",  \"start\": 82000001,  \"end\": 87900000,  \"type\": \"gpos100\" },\n      { \"id\": \"q23.2\",  \"start\": 87900001,  \"end\": 89500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q23.31\", \"start\": 89500001,  \"end\": 92900000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q23.32\", \"start\": 92900001,  \"end\": 94100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q23.33\", \"start\": 94100001,  \"end\": 97000000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q24.1\",  \"start\": 97000001,  \"end\": 99300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q24.2\",  \"start\": 99300001,  \"end\": 101900000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.31\", \"start\": 101900001, \"end\": 103000000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.32\", \"start\": 103000001, \"end\": 104900000, \"type\": \"gpos25\"  },\n      { \"id\": \"q24.33\", \"start\": 104900001, \"end\": 105800000, \"type\": \"gneg\"    },\n      { \"id\": \"q25.1\",  \"start\": 105800001, \"end\": 111900000, \"type\": \"gpos100\" },\n      { \"id\": \"q25.2\",  \"start\": 111900001, \"end\": 114900000, \"type\": \"gneg\"    },\n      { \"id\": \"q25.3\",  \"start\": 114900001, \"end\": 119100000, \"type\": \"gpos75\"  },\n      { \"id\": \"q26.11\", \"start\": 119100001, \"end\": 121700000, \"type\": \"gneg\"    },\n      { \"id\": \"q26.12\", \"start\": 121700001, \"end\": 123100000, \"type\": \"gpos50\"  },\n      { \"id\": \"q26.13\", \"start\": 123100001, \"end\": 127500000, \"type\": \"gneg\"    },\n      { \"id\": \"q26.2\",  \"start\": 127500001, \"end\": 130600000, \"type\": \"gpos50\"  },\n      { \"id\": \"q26.3\",  \"start\": 130600001, \"end\": 135534747, \"type\": \"gneg\"    }\n    ]\n  },\n  \"11\": {\n    \"size\"  : 135006516,\n    \"bands\" : [\n      { \"id\": \"p11.11\", \"start\": 51600001,  \"end\": 53700000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.12\", \"start\": 48800001,  \"end\": 51600000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p11.2\",  \"start\": 43500001,  \"end\": 48800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12\",    \"start\": 36400001,  \"end\": 43500000,  \"type\": \"gpos100\" },\n      { \"id\": \"p13\",    \"start\": 31000001,  \"end\": 36400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.1\",  \"start\": 27200001,  \"end\": 31000000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p14.2\",  \"start\": 26100001,  \"end\": 27200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.3\",  \"start\": 21700001,  \"end\": 26100000,  \"type\": \"gpos100\" },\n      { \"id\": \"p15.1\",  \"start\": 16200001,  \"end\": 21700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.2\",  \"start\": 12700001,  \"end\": 16200000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p15.3\",  \"start\": 10700001,  \"end\": 12700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.4\",  \"start\": 2800001,   \"end\": 10700000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p15.5\",  \"start\": 1,         \"end\": 2800000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11\",    \"start\": 53700001,  \"end\": 55700000,  \"type\": \"acen\"    },\n      { \"id\": \"q12.1\",  \"start\": 55700001,  \"end\": 59900000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q12.2\",  \"start\": 59900001,  \"end\": 61700000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.3\",  \"start\": 61700001,  \"end\": 63400000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q13.1\",  \"start\": 63400001,  \"end\": 65900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.2\",  \"start\": 65900001,  \"end\": 68400000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q13.3\",  \"start\": 68400001,  \"end\": 70400000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.4\",  \"start\": 70400001,  \"end\": 75200000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.5\",  \"start\": 75200001,  \"end\": 77100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.1\",  \"start\": 77100001,  \"end\": 85600000,  \"type\": \"gpos100\" },\n      { \"id\": \"q14.2\",  \"start\": 85600001,  \"end\": 88300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.3\",  \"start\": 88300001,  \"end\": 92800000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21\",    \"start\": 92800001,  \"end\": 97200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.1\",  \"start\": 97200001,  \"end\": 102100000, \"type\": \"gpos100\" },\n      { \"id\": \"q22.2\",  \"start\": 102100001, \"end\": 102900000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.3\",  \"start\": 102900001, \"end\": 110400000, \"type\": \"gpos100\" },\n      { \"id\": \"q23.1\",  \"start\": 110400001, \"end\": 112500000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.2\",  \"start\": 112500001, \"end\": 114500000, \"type\": \"gpos50\"  },\n      { \"id\": \"q23.3\",  \"start\": 114500001, \"end\": 121200000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.1\",  \"start\": 121200001, \"end\": 123900000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.2\",  \"start\": 123900001, \"end\": 127800000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.3\",  \"start\": 127800001, \"end\": 130800000, \"type\": \"gpos50\"  },\n      { \"id\": \"q25\",    \"start\": 130800001, \"end\": 135006516, \"type\": \"gneg\"    }\n    ]\n  },\n  \"12\": {\n    \"size\"  : 133851895,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 33300001,  \"end\": 35800000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.21\", \"start\": 30700001,  \"end\": 33300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p11.22\", \"start\": 27800001,  \"end\": 30700000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p11.23\", \"start\": 26500001,  \"end\": 27800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.1\",  \"start\": 21300001,  \"end\": 26500000,  \"type\": \"gpos100\" },\n      { \"id\": \"p12.2\",  \"start\": 20000001,  \"end\": 21300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.3\",  \"start\": 14800001,  \"end\": 20000000,  \"type\": \"gpos100\" },\n      { \"id\": \"p13.1\",  \"start\": 12800001,  \"end\": 14800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p13.2\",  \"start\": 10100001,  \"end\": 12800000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p13.31\", \"start\": 5400001,   \"end\": 10100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p13.32\", \"start\": 3300001,   \"end\": 5400000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p13.33\", \"start\": 1,         \"end\": 3300000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11\",    \"start\": 35800001,  \"end\": 38200000,  \"type\": \"acen\"    },\n      { \"id\": \"q12\",    \"start\": 38200001,  \"end\": 46400000,  \"type\": \"gpos100\" },\n      { \"id\": \"q13.11\", \"start\": 46400001,  \"end\": 49100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.12\", \"start\": 49100001,  \"end\": 51500000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q13.13\", \"start\": 51500001,  \"end\": 54900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.2\",  \"start\": 54900001,  \"end\": 56600000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q13.3\",  \"start\": 56600001,  \"end\": 58100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.1\",  \"start\": 58100001,  \"end\": 63100000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q14.2\",  \"start\": 63100001,  \"end\": 65100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.3\",  \"start\": 65100001,  \"end\": 67700000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q15\",    \"start\": 67700001,  \"end\": 71500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 71500001,  \"end\": 75700000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q21.2\",  \"start\": 75700001,  \"end\": 80300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.31\", \"start\": 80300001,  \"end\": 86700000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.32\", \"start\": 86700001,  \"end\": 89000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.33\", \"start\": 89000001,  \"end\": 92600000,  \"type\": \"gpos100\" },\n      { \"id\": \"q22\",    \"start\": 92600001,  \"end\": 96200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q23.1\",  \"start\": 96200001,  \"end\": 101600000, \"type\": \"gpos75\"  },\n      { \"id\": \"q23.2\",  \"start\": 101600001, \"end\": 103800000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.3\",  \"start\": 103800001, \"end\": 109000000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.11\", \"start\": 109000001, \"end\": 111700000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.12\", \"start\": 111700001, \"end\": 112300000, \"type\": \"gpos25\"  },\n      { \"id\": \"q24.13\", \"start\": 112300001, \"end\": 114300000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.21\", \"start\": 114300001, \"end\": 116800000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.22\", \"start\": 116800001, \"end\": 118100000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.23\", \"start\": 118100001, \"end\": 120700000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.31\", \"start\": 120700001, \"end\": 125900000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.32\", \"start\": 125900001, \"end\": 129300000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.33\", \"start\": 129300001, \"end\": 133851895, \"type\": \"gneg\"    }\n    ]\n  },\n  \"13\": {\n    \"size\"  : 115169878,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 16300001,  \"end\": 17900000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 10000001,  \"end\": 16300000,  \"type\": \"gvar\"    },\n      { \"id\": \"p12\",    \"start\": 4500001,   \"end\": 10000000,  \"type\": \"stalk\"   },\n      { \"id\": \"p13\",    \"start\": 1,         \"end\": 4500000,   \"type\": \"gvar\"    },\n      { \"id\": \"q11\",    \"start\": 17900001,  \"end\": 19500000,  \"type\": \"acen\"    },\n      { \"id\": \"q12.11\", \"start\": 19500001,  \"end\": 23300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.12\", \"start\": 23300001,  \"end\": 25500000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q12.13\", \"start\": 25500001,  \"end\": 27800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.2\",  \"start\": 27800001,  \"end\": 28900000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q12.3\",  \"start\": 28900001,  \"end\": 32200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.1\",  \"start\": 32200001,  \"end\": 34000000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.2\",  \"start\": 34000001,  \"end\": 35500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.3\",  \"start\": 35500001,  \"end\": 40100000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q14.11\", \"start\": 40100001,  \"end\": 45200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.12\", \"start\": 45200001,  \"end\": 45800000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q14.13\", \"start\": 45800001,  \"end\": 47300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.2\",  \"start\": 47300001,  \"end\": 50900000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q14.3\",  \"start\": 50900001,  \"end\": 55300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 55300001,  \"end\": 59600000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.2\",  \"start\": 59600001,  \"end\": 62300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.31\", \"start\": 62300001,  \"end\": 65700000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q21.32\", \"start\": 65700001,  \"end\": 68600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.33\", \"start\": 68600001,  \"end\": 73300000,  \"type\": \"gpos100\" },\n      { \"id\": \"q22.1\",  \"start\": 73300001,  \"end\": 75400000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 75400001,  \"end\": 77200000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 77200001,  \"end\": 79000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q31.1\",  \"start\": 79000001,  \"end\": 87700000,  \"type\": \"gpos100\" },\n      { \"id\": \"q31.2\",  \"start\": 87700001,  \"end\": 90000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q31.3\",  \"start\": 90000001,  \"end\": 95000000,  \"type\": \"gpos100\" },\n      { \"id\": \"q32.1\",  \"start\": 95000001,  \"end\": 98200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q32.2\",  \"start\": 98200001,  \"end\": 99300000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q32.3\",  \"start\": 99300001,  \"end\": 101700000, \"type\": \"gneg\"    },\n      { \"id\": \"q33.1\",  \"start\": 101700001, \"end\": 104800000, \"type\": \"gpos100\" },\n      { \"id\": \"q33.2\",  \"start\": 104800001, \"end\": 107000000, \"type\": \"gneg\"    },\n      { \"id\": \"q33.3\",  \"start\": 107000001, \"end\": 110300000, \"type\": \"gpos100\" },\n      { \"id\": \"q34\",    \"start\": 110300001, \"end\": 115169878, \"type\": \"gneg\"    }\n    ]\n  },\n  \"14\": {\n    \"size\"  : 107349540,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 16100001,  \"end\": 17600000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 8100001,   \"end\": 16100000,  \"type\": \"gvar\"    },\n      { \"id\": \"p12\",    \"start\": 3700001,   \"end\": 8100000,   \"type\": \"stalk\"   },\n      { \"id\": \"p13\",    \"start\": 1,         \"end\": 3700000,   \"type\": \"gvar\"    },\n      { \"id\": \"q11.1\",  \"start\": 17600001,  \"end\": 19100000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 19100001,  \"end\": 24600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12\",    \"start\": 24600001,  \"end\": 33300000,  \"type\": \"gpos100\" },\n      { \"id\": \"q13.1\",  \"start\": 33300001,  \"end\": 35300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.2\",  \"start\": 35300001,  \"end\": 36600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.3\",  \"start\": 36600001,  \"end\": 37800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 37800001,  \"end\": 43500000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.2\",  \"start\": 43500001,  \"end\": 47200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.3\",  \"start\": 47200001,  \"end\": 50900000,  \"type\": \"gpos100\" },\n      { \"id\": \"q22.1\",  \"start\": 50900001,  \"end\": 54100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 54100001,  \"end\": 55500000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q22.3\",  \"start\": 55500001,  \"end\": 58100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q23.1\",  \"start\": 58100001,  \"end\": 62100000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q23.2\",  \"start\": 62100001,  \"end\": 64800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q23.3\",  \"start\": 64800001,  \"end\": 67900000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q24.1\",  \"start\": 67900001,  \"end\": 70200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q24.2\",  \"start\": 70200001,  \"end\": 73800000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q24.3\",  \"start\": 73800001,  \"end\": 79300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q31.1\",  \"start\": 79300001,  \"end\": 83600000,  \"type\": \"gpos100\" },\n      { \"id\": \"q31.2\",  \"start\": 83600001,  \"end\": 84900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q31.3\",  \"start\": 84900001,  \"end\": 89800000,  \"type\": \"gpos100\" },\n      { \"id\": \"q32.11\", \"start\": 89800001,  \"end\": 91900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q32.12\", \"start\": 91900001,  \"end\": 94700000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q32.13\", \"start\": 94700001,  \"end\": 96300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q32.2\",  \"start\": 96300001,  \"end\": 101400000, \"type\": \"gpos50\"  },\n      { \"id\": \"q32.31\", \"start\": 101400001, \"end\": 103200000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.32\", \"start\": 103200001, \"end\": 104000000, \"type\": \"gpos50\"  },\n      { \"id\": \"q32.33\", \"start\": 104000001, \"end\": 107349540, \"type\": \"gneg\"    }\n    ]\n  },\n  \"15\": {\n    \"size\"  : 102531392,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 15800001, \"end\": 19000000,  \"type\": \"acen\"   },\n      { \"id\": \"p11.2\",  \"start\": 8700001,  \"end\": 15800000,  \"type\": \"gvar\"   },\n      { \"id\": \"p12\",    \"start\": 3900001,  \"end\": 8700000,   \"type\": \"stalk\"  },\n      { \"id\": \"p13\",    \"start\": 1,        \"end\": 3900000,   \"type\": \"gvar\"   },\n      { \"id\": \"q11.1\",  \"start\": 19000001, \"end\": 20700000,  \"type\": \"acen\"   },\n      { \"id\": \"q11.2\",  \"start\": 20700001, \"end\": 25700000,  \"type\": \"gneg\"   },\n      { \"id\": \"q12\",    \"start\": 25700001, \"end\": 28100000,  \"type\": \"gpos50\" },\n      { \"id\": \"q13.1\",  \"start\": 28100001, \"end\": 30300000,  \"type\": \"gneg\"   },\n      { \"id\": \"q13.2\",  \"start\": 30300001, \"end\": 31200000,  \"type\": \"gpos50\" },\n      { \"id\": \"q13.3\",  \"start\": 31200001, \"end\": 33600000,  \"type\": \"gneg\"   },\n      { \"id\": \"q14\",    \"start\": 33600001, \"end\": 40100000,  \"type\": \"gpos75\" },\n      { \"id\": \"q15.1\",  \"start\": 40100001, \"end\": 42800000,  \"type\": \"gneg\"   },\n      { \"id\": \"q15.2\",  \"start\": 42800001, \"end\": 43600000,  \"type\": \"gpos25\" },\n      { \"id\": \"q15.3\",  \"start\": 43600001, \"end\": 44800000,  \"type\": \"gneg\"   },\n      { \"id\": \"q21.1\",  \"start\": 44800001, \"end\": 49500000,  \"type\": \"gpos75\" },\n      { \"id\": \"q21.2\",  \"start\": 49500001, \"end\": 52900000,  \"type\": \"gneg\"   },\n      { \"id\": \"q21.3\",  \"start\": 52900001, \"end\": 59100000,  \"type\": \"gpos75\" },\n      { \"id\": \"q22.1\",  \"start\": 59100001, \"end\": 59300000,  \"type\": \"gneg\"   },\n      { \"id\": \"q22.2\",  \"start\": 59300001, \"end\": 63700000,  \"type\": \"gpos25\" },\n      { \"id\": \"q22.31\", \"start\": 63700001, \"end\": 67200000,  \"type\": \"gneg\"   },\n      { \"id\": \"q22.32\", \"start\": 67200001, \"end\": 67300000,  \"type\": \"gpos25\" },\n      { \"id\": \"q22.33\", \"start\": 67300001, \"end\": 67500000,  \"type\": \"gneg\"   },\n      { \"id\": \"q23\",    \"start\": 67500001, \"end\": 72700000,  \"type\": \"gpos25\" },\n      { \"id\": \"q24.1\",  \"start\": 72700001, \"end\": 75200000,  \"type\": \"gneg\"   },\n      { \"id\": \"q24.2\",  \"start\": 75200001, \"end\": 76600000,  \"type\": \"gpos25\" },\n      { \"id\": \"q24.3\",  \"start\": 76600001, \"end\": 78300000,  \"type\": \"gneg\"   },\n      { \"id\": \"q25.1\",  \"start\": 78300001, \"end\": 81700000,  \"type\": \"gpos50\" },\n      { \"id\": \"q25.2\",  \"start\": 81700001, \"end\": 85200000,  \"type\": \"gneg\"   },\n      { \"id\": \"q25.3\",  \"start\": 85200001, \"end\": 89100000,  \"type\": \"gpos50\" },\n      { \"id\": \"q26.1\",  \"start\": 89100001, \"end\": 94300000,  \"type\": \"gneg\"   },\n      { \"id\": \"q26.2\",  \"start\": 94300001, \"end\": 98500000,  \"type\": \"gpos50\" },\n      { \"id\": \"q26.3\",  \"start\": 98500001, \"end\": 102531392, \"type\": \"gneg\"   }\n    ]\n  },\n  \"16\": {\n    \"size\"  : 90354753,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 34600001, \"end\": 36600000, \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 28100001, \"end\": 34600000, \"type\": \"gneg\"    },\n      { \"id\": \"p12.1\",  \"start\": 24200001, \"end\": 28100000, \"type\": \"gpos50\"  },\n      { \"id\": \"p12.2\",  \"start\": 21200001, \"end\": 24200000, \"type\": \"gneg\"    },\n      { \"id\": \"p12.3\",  \"start\": 16800001, \"end\": 21200000, \"type\": \"gpos50\"  },\n      { \"id\": \"p13.11\", \"start\": 14800001, \"end\": 16800000, \"type\": \"gneg\"    },\n      { \"id\": \"p13.12\", \"start\": 12600001, \"end\": 14800000, \"type\": \"gpos50\"  },\n      { \"id\": \"p13.13\", \"start\": 10500001, \"end\": 12600000, \"type\": \"gneg\"    },\n      { \"id\": \"p13.2\",  \"start\": 7900001,  \"end\": 10500000, \"type\": \"gpos50\"  },\n      { \"id\": \"p13.3\",  \"start\": 1,        \"end\": 7900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 36600001, \"end\": 38600000, \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 38600001, \"end\": 47000000, \"type\": \"gvar\"    },\n      { \"id\": \"q12.1\",  \"start\": 47000001, \"end\": 52600000, \"type\": \"gneg\"    },\n      { \"id\": \"q12.2\",  \"start\": 52600001, \"end\": 56700000, \"type\": \"gpos50\"  },\n      { \"id\": \"q13\",    \"start\": 56700001, \"end\": 57400000, \"type\": \"gneg\"    },\n      { \"id\": \"q21\",    \"start\": 57400001, \"end\": 66700000, \"type\": \"gpos100\" },\n      { \"id\": \"q22.1\",  \"start\": 66700001, \"end\": 70800000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 70800001, \"end\": 72900000, \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 72900001, \"end\": 74100000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.1\",  \"start\": 74100001, \"end\": 79200000, \"type\": \"gpos75\"  },\n      { \"id\": \"q23.2\",  \"start\": 79200001, \"end\": 81700000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.3\",  \"start\": 81700001, \"end\": 84200000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.1\",  \"start\": 84200001, \"end\": 87100000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.2\",  \"start\": 87100001, \"end\": 88700000, \"type\": \"gpos25\"  },\n      { \"id\": \"q24.3\",  \"start\": 88700001, \"end\": 90354753, \"type\": \"gneg\"    }\n    ]\n  },\n  \"17\": {\n    \"size\"  : 81195210,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 22200001, \"end\": 24000000, \"type\": \"acen\"   },\n      { \"id\": \"p11.2\",  \"start\": 16000001, \"end\": 22200000, \"type\": \"gneg\"   },\n      { \"id\": \"p12\",    \"start\": 10700001, \"end\": 16000000, \"type\": \"gpos75\" },\n      { \"id\": \"p13.1\",  \"start\": 6500001,  \"end\": 10700000, \"type\": \"gneg\"   },\n      { \"id\": \"p13.2\",  \"start\": 3300001,  \"end\": 6500000,  \"type\": \"gpos50\" },\n      { \"id\": \"p13.3\",  \"start\": 1,        \"end\": 3300000,  \"type\": \"gneg\"   },\n      { \"id\": \"q11.1\",  \"start\": 24000001, \"end\": 25800000, \"type\": \"acen\"   },\n      { \"id\": \"q11.2\",  \"start\": 25800001, \"end\": 31800000, \"type\": \"gneg\"   },\n      { \"id\": \"q12\",    \"start\": 31800001, \"end\": 38100000, \"type\": \"gpos50\" },\n      { \"id\": \"q21.1\",  \"start\": 38100001, \"end\": 38400000, \"type\": \"gneg\"   },\n      { \"id\": \"q21.2\",  \"start\": 38400001, \"end\": 40900000, \"type\": \"gpos25\" },\n      { \"id\": \"q21.31\", \"start\": 40900001, \"end\": 44900000, \"type\": \"gneg\"   },\n      { \"id\": \"q21.32\", \"start\": 44900001, \"end\": 47400000, \"type\": \"gpos25\" },\n      { \"id\": \"q21.33\", \"start\": 47400001, \"end\": 50200000, \"type\": \"gneg\"   },\n      { \"id\": \"q22\",    \"start\": 50200001, \"end\": 57600000, \"type\": \"gpos75\" },\n      { \"id\": \"q23.1\",  \"start\": 57600001, \"end\": 58300000, \"type\": \"gneg\"   },\n      { \"id\": \"q23.2\",  \"start\": 58300001, \"end\": 61100000, \"type\": \"gpos75\" },\n      { \"id\": \"q23.3\",  \"start\": 61100001, \"end\": 62600000, \"type\": \"gneg\"   },\n      { \"id\": \"q24.1\",  \"start\": 62600001, \"end\": 64200000, \"type\": \"gpos50\" },\n      { \"id\": \"q24.2\",  \"start\": 64200001, \"end\": 67100000, \"type\": \"gneg\"   },\n      { \"id\": \"q24.3\",  \"start\": 67100001, \"end\": 70900000, \"type\": \"gpos75\" },\n      { \"id\": \"q25.1\",  \"start\": 70900001, \"end\": 74800000, \"type\": \"gneg\"   },\n      { \"id\": \"q25.2\",  \"start\": 74800001, \"end\": 75300000, \"type\": \"gpos25\" },\n      { \"id\": \"q25.3\",  \"start\": 75300001, \"end\": 81195210, \"type\": \"gneg\"   }\n    ]\n  },\n  \"18\": {\n    \"size\"  : 78077248,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 15400001, \"end\": 17200000, \"type\": \"acen\"    },\n      { \"id\": \"p11.21\", \"start\": 10900001, \"end\": 15400000, \"type\": \"gneg\"    },\n      { \"id\": \"p11.22\", \"start\": 8500001,  \"end\": 10900000, \"type\": \"gpos25\"  },\n      { \"id\": \"p11.23\", \"start\": 7100001,  \"end\": 8500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p11.31\", \"start\": 2900001,  \"end\": 7100000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p11.32\", \"start\": 1,        \"end\": 2900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 17200001, \"end\": 19000000, \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 19000001, \"end\": 25000000, \"type\": \"gneg\"    },\n      { \"id\": \"q12.1\",  \"start\": 25000001, \"end\": 32700000, \"type\": \"gpos100\" },\n      { \"id\": \"q12.2\",  \"start\": 32700001, \"end\": 37200000, \"type\": \"gneg\"    },\n      { \"id\": \"q12.3\",  \"start\": 37200001, \"end\": 43500000, \"type\": \"gpos75\"  },\n      { \"id\": \"q21.1\",  \"start\": 43500001, \"end\": 48200000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.2\",  \"start\": 48200001, \"end\": 53800000, \"type\": \"gpos75\"  },\n      { \"id\": \"q21.31\", \"start\": 53800001, \"end\": 56200000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.32\", \"start\": 56200001, \"end\": 59000000, \"type\": \"gpos50\"  },\n      { \"id\": \"q21.33\", \"start\": 59000001, \"end\": 61600000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.1\",  \"start\": 61600001, \"end\": 66800000, \"type\": \"gpos100\" },\n      { \"id\": \"q22.2\",  \"start\": 66800001, \"end\": 68700000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.3\",  \"start\": 68700001, \"end\": 73100000, \"type\": \"gpos25\"  },\n      { \"id\": \"q23\",    \"start\": 73100001, \"end\": 78077248, \"type\": \"gneg\"    }\n    ]\n  },\n  \"19\": {\n    \"size\"  : 59128983,\n    \"bands\" : [\n      { \"id\": \"p11\",    \"start\": 24400001, \"end\": 26500000, \"type\": \"acen\"   },\n      { \"id\": \"p12\",    \"start\": 20000001, \"end\": 24400000, \"type\": \"gvar\"   },\n      { \"id\": \"p13.11\", \"start\": 16300001, \"end\": 20000000, \"type\": \"gneg\"   },\n      { \"id\": \"p13.12\", \"start\": 14000001, \"end\": 16300000, \"type\": \"gpos25\" },\n      { \"id\": \"p13.13\", \"start\": 13900001, \"end\": 14000000, \"type\": \"gneg\"   },\n      { \"id\": \"p13.2\",  \"start\": 6900001,  \"end\": 13900000, \"type\": \"gpos25\" },\n      { \"id\": \"p13.3\",  \"start\": 1,        \"end\": 6900000,  \"type\": \"gneg\"   },\n      { \"id\": \"q11\",    \"start\": 26500001, \"end\": 28600000, \"type\": \"acen\"   },\n      { \"id\": \"q12\",    \"start\": 28600001, \"end\": 32400000, \"type\": \"gvar\"   },\n      { \"id\": \"q13.11\", \"start\": 32400001, \"end\": 35500000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.12\", \"start\": 35500001, \"end\": 38300000, \"type\": \"gpos25\" },\n      { \"id\": \"q13.13\", \"start\": 38300001, \"end\": 38700000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.2\",  \"start\": 38700001, \"end\": 43400000, \"type\": \"gpos25\" },\n      { \"id\": \"q13.31\", \"start\": 43400001, \"end\": 45200000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.32\", \"start\": 45200001, \"end\": 48000000, \"type\": \"gpos25\" },\n      { \"id\": \"q13.33\", \"start\": 48000001, \"end\": 51400000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.41\", \"start\": 51400001, \"end\": 53600000, \"type\": \"gpos25\" },\n      { \"id\": \"q13.42\", \"start\": 53600001, \"end\": 56300000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.43\", \"start\": 56300001, \"end\": 59128983, \"type\": \"gpos25\" }\n    ]\n  },\n  \"20\": {\n    \"size\"  : 63025520,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 25600001, \"end\": 27500000, \"type\": \"acen\"   },\n      { \"id\": \"p11.21\", \"start\": 22300001, \"end\": 25600000, \"type\": \"gneg\"   },\n      { \"id\": \"p11.22\", \"start\": 21300001, \"end\": 22300000, \"type\": \"gpos25\" },\n      { \"id\": \"p11.23\", \"start\": 17900001, \"end\": 21300000, \"type\": \"gneg\"   },\n      { \"id\": \"p12.1\",  \"start\": 12100001, \"end\": 17900000, \"type\": \"gpos75\" },\n      { \"id\": \"p12.2\",  \"start\": 9200001,  \"end\": 12100000, \"type\": \"gneg\"   },\n      { \"id\": \"p12.3\",  \"start\": 5100001,  \"end\": 9200000,  \"type\": \"gpos75\" },\n      { \"id\": \"p13\",    \"start\": 1,        \"end\": 5100000,  \"type\": \"gneg\"   },\n      { \"id\": \"q11.1\",  \"start\": 27500001, \"end\": 29400000, \"type\": \"acen\"   },\n      { \"id\": \"q11.21\", \"start\": 29400001, \"end\": 32100000, \"type\": \"gneg\"   },\n      { \"id\": \"q11.22\", \"start\": 32100001, \"end\": 34400000, \"type\": \"gpos25\" },\n      { \"id\": \"q11.23\", \"start\": 34400001, \"end\": 37600000, \"type\": \"gneg\"   },\n      { \"id\": \"q12\",    \"start\": 37600001, \"end\": 41700000, \"type\": \"gpos75\" },\n      { \"id\": \"q13.11\", \"start\": 41700001, \"end\": 42100000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.12\", \"start\": 42100001, \"end\": 46400000, \"type\": \"gpos25\" },\n      { \"id\": \"q13.13\", \"start\": 46400001, \"end\": 49800000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.2\",  \"start\": 49800001, \"end\": 55000000, \"type\": \"gpos75\" },\n      { \"id\": \"q13.31\", \"start\": 55000001, \"end\": 56500000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.32\", \"start\": 56500001, \"end\": 58400000, \"type\": \"gpos50\" },\n      { \"id\": \"q13.33\", \"start\": 58400001, \"end\": 63025520, \"type\": \"gneg\"   }\n    ]\n  },\n  \"21\": {\n    \"size\"  : 48129895,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 10900001, \"end\": 13200000, \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 6800001,  \"end\": 10900000, \"type\": \"gvar\"    },\n      { \"id\": \"p12\",    \"start\": 2800001,  \"end\": 6800000,  \"type\": \"stalk\"   },\n      { \"id\": \"p13\",    \"start\": 1,        \"end\": 2800000,  \"type\": \"gvar\"    },\n      { \"id\": \"q11.1\",  \"start\": 13200001, \"end\": 14300000, \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 14300001, \"end\": 16400000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 16400001, \"end\": 24000000, \"type\": \"gpos100\" },\n      { \"id\": \"q21.2\",  \"start\": 24000001, \"end\": 26800000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.3\",  \"start\": 26800001, \"end\": 31500000, \"type\": \"gpos75\"  },\n      { \"id\": \"q22.11\", \"start\": 31500001, \"end\": 35800000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.12\", \"start\": 35800001, \"end\": 37800000, \"type\": \"gpos50\"  },\n      { \"id\": \"q22.13\", \"start\": 37800001, \"end\": 39700000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 39700001, \"end\": 42600000, \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 42600001, \"end\": 48129895, \"type\": \"gneg\"    }\n    ]\n  },\n  \"22\": {\n    \"size\"  : 51304566,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 12200001, \"end\": 14700000, \"type\": \"acen\"   },\n      { \"id\": \"p11.2\",  \"start\": 8300001,  \"end\": 12200000, \"type\": \"gvar\"   },\n      { \"id\": \"p12\",    \"start\": 3800001,  \"end\": 8300000,  \"type\": \"stalk\"  },\n      { \"id\": \"p13\",    \"start\": 1,        \"end\": 3800000,  \"type\": \"gvar\"   },\n      { \"id\": \"q11.1\",  \"start\": 14700001, \"end\": 17900000, \"type\": \"acen\"   },\n      { \"id\": \"q11.21\", \"start\": 17900001, \"end\": 22200000, \"type\": \"gneg\"   },\n      { \"id\": \"q11.22\", \"start\": 22200001, \"end\": 23500000, \"type\": \"gpos25\" },\n      { \"id\": \"q11.23\", \"start\": 23500001, \"end\": 25900000, \"type\": \"gneg\"   },\n      { \"id\": \"q12.1\",  \"start\": 25900001, \"end\": 29600000, \"type\": \"gpos50\" },\n      { \"id\": \"q12.2\",  \"start\": 29600001, \"end\": 32200000, \"type\": \"gneg\"   },\n      { \"id\": \"q12.3\",  \"start\": 32200001, \"end\": 37600000, \"type\": \"gpos50\" },\n      { \"id\": \"q13.1\",  \"start\": 37600001, \"end\": 41000000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.2\",  \"start\": 41000001, \"end\": 44200000, \"type\": \"gpos50\" },\n      { \"id\": \"q13.31\", \"start\": 44200001, \"end\": 48400000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.32\", \"start\": 48400001, \"end\": 49400000, \"type\": \"gpos50\" },\n      { \"id\": \"q13.33\", \"start\": 49400001, \"end\": 51304566, \"type\": \"gneg\"   }\n    ]\n  },\n  \"X\": {\n    \"size\"  : 155270560,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 58100001,  \"end\": 60600000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.21\", \"start\": 54800001,  \"end\": 58100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p11.22\", \"start\": 49800001,  \"end\": 54800000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p11.23\", \"start\": 46400001,  \"end\": 49800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p11.3\",  \"start\": 42400001,  \"end\": 46400000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p11.4\",  \"start\": 37600001,  \"end\": 42400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.1\",  \"start\": 31500001,  \"end\": 37600000,  \"type\": \"gpos100\" },\n      { \"id\": \"p21.2\",  \"start\": 29300001,  \"end\": 31500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.3\",  \"start\": 24900001,  \"end\": 29300000,  \"type\": \"gpos100\" },\n      { \"id\": \"p22.11\", \"start\": 21900001,  \"end\": 24900000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.12\", \"start\": 19300001,  \"end\": 21900000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p22.13\", \"start\": 17100001,  \"end\": 19300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.2\",  \"start\": 9500001,   \"end\": 17100000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p22.31\", \"start\": 6000001,   \"end\": 9500000,   \"type\": \"gneg\"    },\n      { \"id\": \"p22.32\", \"start\": 4300001,   \"end\": 6000000,   \"type\": \"gpos50\"  },\n      { \"id\": \"p22.33\", \"start\": 1,         \"end\": 4300000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 60600001,  \"end\": 63000000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 63000001,  \"end\": 64600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12\",    \"start\": 64600001,  \"end\": 67800000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.1\",  \"start\": 67800001,  \"end\": 71800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.2\",  \"start\": 71800001,  \"end\": 73900000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.3\",  \"start\": 73900001,  \"end\": 76000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 76000001,  \"end\": 84600000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.2\",  \"start\": 84600001,  \"end\": 86200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.31\", \"start\": 86200001,  \"end\": 91800000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.32\", \"start\": 91800001,  \"end\": 93500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.33\", \"start\": 93500001,  \"end\": 98300000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q22.1\",  \"start\": 98300001,  \"end\": 102600000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 102600001, \"end\": 103700000, \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 103700001, \"end\": 108700000, \"type\": \"gneg\"    },\n      { \"id\": \"q23\",    \"start\": 108700001, \"end\": 116500000, \"type\": \"gpos75\"  },\n      { \"id\": \"q24\",    \"start\": 116500001, \"end\": 120900000, \"type\": \"gneg\"    },\n      { \"id\": \"q25\",    \"start\": 120900001, \"end\": 128700000, \"type\": \"gpos100\" },\n      { \"id\": \"q26.1\",  \"start\": 128700001, \"end\": 130400000, \"type\": \"gneg\"    },\n      { \"id\": \"q26.2\",  \"start\": 130400001, \"end\": 133600000, \"type\": \"gpos25\"  },\n      { \"id\": \"q26.3\",  \"start\": 133600001, \"end\": 138000000, \"type\": \"gneg\"    },\n      { \"id\": \"q27.1\",  \"start\": 138000001, \"end\": 140300000, \"type\": \"gpos75\"  },\n      { \"id\": \"q27.2\",  \"start\": 140300001, \"end\": 142100000, \"type\": \"gneg\"    },\n      { \"id\": \"q27.3\",  \"start\": 142100001, \"end\": 147100000, \"type\": \"gpos100\" },\n      { \"id\": \"q28\",    \"start\": 147100001, \"end\": 155270560, \"type\": \"gneg\"    }\n    ]\n  },\n  \"Y\": {\n    \"size\"  : 59373566,\n    \"bands\" : [\n      { \"id\": \"p11.1\",   \"start\": 11600001, \"end\": 12500000, \"type\": \"acen\"   },\n      { \"id\": \"p11.2\",   \"start\": 3000001,  \"end\": 11600000, \"type\": \"gneg\"   },\n      { \"id\": \"p11.31\",  \"start\": 2500001,  \"end\": 3000000,  \"type\": \"gpos50\" },\n      { \"id\": \"p11.32\",  \"start\": 1,        \"end\": 2500000,  \"type\": \"gneg\"   },\n      { \"id\": \"q11.1\",   \"start\": 12500001, \"end\": 13400000, \"type\": \"acen\"   },\n      { \"id\": \"q11.21\",  \"start\": 13400001, \"end\": 15100000, \"type\": \"gneg\"   },\n      { \"id\": \"q11.221\", \"start\": 15100001, \"end\": 19800000, \"type\": \"gpos50\" },\n      { \"id\": \"q11.222\", \"start\": 19800001, \"end\": 22100000, \"type\": \"gneg\"   },\n      { \"id\": \"q11.223\", \"start\": 22100001, \"end\": 26200000, \"type\": \"gpos50\" },\n      { \"id\": \"q11.23\",  \"start\": 26200001, \"end\": 28800000, \"type\": \"gneg\"   },\n      { \"id\": \"q12\",     \"start\": 28800001, \"end\": 59373566, \"type\": \"gvar\"   }\n    ]\n  },\n  \"MT\": {\n    \"size\"  : 16569,\n    \"bands\" : [\n      { \"start\": 1, \"end\": 16569 }\n    ]\n  }\n};","Genoverse.Genomes.grch38 = {\n  \"1\": {\n    \"size\"  : 248956422,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 121700001, \"end\": 123400000, \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 120400001, \"end\": 121700000, \"type\": \"gneg\"    },\n      { \"id\": \"p12\",    \"start\": 117200001, \"end\": 120400000, \"type\": \"gpos50\"  },\n      { \"id\": \"p13.1\",  \"start\": 115500001, \"end\": 117200000, \"type\": \"gneg\"    },\n      { \"id\": \"p13.2\",  \"start\": 111200001, \"end\": 115500000, \"type\": \"gpos50\"  },\n      { \"id\": \"p13.3\",  \"start\": 106700001, \"end\": 111200000, \"type\": \"gneg\"    },\n      { \"id\": \"p21.1\",  \"start\": 101800001, \"end\": 106700000, \"type\": \"gpos100\" },\n      { \"id\": \"p21.2\",  \"start\": 99300001,  \"end\": 101800000, \"type\": \"gneg\"    },\n      { \"id\": \"p21.3\",  \"start\": 94300001,  \"end\": 99300000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p22.1\",  \"start\": 91500001,  \"end\": 94300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.2\",  \"start\": 87900001,  \"end\": 91500000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p22.3\",  \"start\": 84400001,  \"end\": 87900000,  \"type\": \"gneg\"    },\n      { \"id\": \"p31.1\",  \"start\": 69300001,  \"end\": 84400000,  \"type\": \"gpos100\" },\n      { \"id\": \"p31.2\",  \"start\": 68500001,  \"end\": 69300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p31.3\",  \"start\": 60800001,  \"end\": 68500000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p32.1\",  \"start\": 58500001,  \"end\": 60800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p32.2\",  \"start\": 55600001,  \"end\": 58500000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p32.3\",  \"start\": 50200001,  \"end\": 55600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p33\",    \"start\": 46300001,  \"end\": 50200000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p34.1\",  \"start\": 43700001,  \"end\": 46300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p34.2\",  \"start\": 39600001,  \"end\": 43700000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p34.3\",  \"start\": 34300001,  \"end\": 39600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p35.1\",  \"start\": 32300001,  \"end\": 34300000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p35.2\",  \"start\": 29900001,  \"end\": 32300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p35.3\",  \"start\": 27600001,  \"end\": 29900000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p36.11\", \"start\": 23600001,  \"end\": 27600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p36.12\", \"start\": 20100001,  \"end\": 23600000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p36.13\", \"start\": 15900001,  \"end\": 20100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p36.21\", \"start\": 12500001,  \"end\": 15900000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p36.22\", \"start\": 9100001,   \"end\": 12500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p36.23\", \"start\": 7100001,   \"end\": 9100000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p36.31\", \"start\": 5300001,   \"end\": 7100000,   \"type\": \"gneg\"    },\n      { \"id\": \"p36.32\", \"start\": 2300001,   \"end\": 5300000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p36.33\", \"start\": 1,         \"end\": 2300000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11\",    \"start\": 123400001, \"end\": 125100000, \"type\": \"acen\"    },\n      { \"id\": \"q12\",    \"start\": 125100001, \"end\": 143200000, \"type\": \"gvar\"    },\n      { \"id\": \"q21.1\",  \"start\": 143200001, \"end\": 147500000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.2\",  \"start\": 147500001, \"end\": 150600000, \"type\": \"gpos50\"  },\n      { \"id\": \"q21.3\",  \"start\": 150600001, \"end\": 155100000, \"type\": \"gneg\"    },\n      { \"id\": \"q22\",    \"start\": 155100001, \"end\": 156600000, \"type\": \"gpos50\"  },\n      { \"id\": \"q23.1\",  \"start\": 156600001, \"end\": 159100000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.2\",  \"start\": 159100001, \"end\": 160500000, \"type\": \"gpos50\"  },\n      { \"id\": \"q23.3\",  \"start\": 160500001, \"end\": 165500000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.1\",  \"start\": 165500001, \"end\": 167200000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.2\",  \"start\": 167200001, \"end\": 170900000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.3\",  \"start\": 170900001, \"end\": 173000000, \"type\": \"gpos75\"  },\n      { \"id\": \"q25.1\",  \"start\": 173000001, \"end\": 176100000, \"type\": \"gneg\"    },\n      { \"id\": \"q25.2\",  \"start\": 176100001, \"end\": 180300000, \"type\": \"gpos50\"  },\n      { \"id\": \"q25.3\",  \"start\": 180300001, \"end\": 185800000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.1\",  \"start\": 185800001, \"end\": 190800000, \"type\": \"gpos100\" },\n      { \"id\": \"q31.2\",  \"start\": 190800001, \"end\": 193800000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.3\",  \"start\": 193800001, \"end\": 198700000, \"type\": \"gpos100\" },\n      { \"id\": \"q32.1\",  \"start\": 198700001, \"end\": 207100000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.2\",  \"start\": 207100001, \"end\": 211300000, \"type\": \"gpos25\"  },\n      { \"id\": \"q32.3\",  \"start\": 211300001, \"end\": 214400000, \"type\": \"gneg\"    },\n      { \"id\": \"q41\",    \"start\": 214400001, \"end\": 223900000, \"type\": \"gpos100\" },\n      { \"id\": \"q42.11\", \"start\": 223900001, \"end\": 224400000, \"type\": \"gneg\"    },\n      { \"id\": \"q42.12\", \"start\": 224400001, \"end\": 226800000, \"type\": \"gpos25\"  },\n      { \"id\": \"q42.13\", \"start\": 226800001, \"end\": 230500000, \"type\": \"gneg\"    },\n      { \"id\": \"q42.2\",  \"start\": 230500001, \"end\": 234600000, \"type\": \"gpos50\"  },\n      { \"id\": \"q42.3\",  \"start\": 234600001, \"end\": 236400000, \"type\": \"gneg\"    },\n      { \"id\": \"q43\",    \"start\": 236400001, \"end\": 243500000, \"type\": \"gpos75\"  },\n      { \"id\": \"q44\",    \"start\": 243500001, \"end\": 248956422, \"type\": \"gneg\"    }\n    ]\n  },\n  \"2\": {\n    \"size\"  : 242193529,\n    \"bands\" : [\n      { \"id\": \"p11.1\", \"start\": 91800001,  \"end\": 93900000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\", \"start\": 83100001,  \"end\": 91800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12\",   \"start\": 74800001,  \"end\": 83100000,  \"type\": \"gpos100\" },\n      { \"id\": \"p13.1\", \"start\": 73300001,  \"end\": 74800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p13.2\", \"start\": 71300001,  \"end\": 73300000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p13.3\", \"start\": 68400001,  \"end\": 71300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14\",   \"start\": 63900001,  \"end\": 68400000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p15\",   \"start\": 61000001,  \"end\": 63900000,  \"type\": \"gneg\"    },\n      { \"id\": \"p16.1\", \"start\": 54700001,  \"end\": 61000000,  \"type\": \"gpos100\" },\n      { \"id\": \"p16.2\", \"start\": 52600001,  \"end\": 54700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p16.3\", \"start\": 47500001,  \"end\": 52600000,  \"type\": \"gpos100\" },\n      { \"id\": \"p21\",   \"start\": 41500001,  \"end\": 47500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.1\", \"start\": 38300001,  \"end\": 41500000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p22.2\", \"start\": 36300001,  \"end\": 38300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.3\", \"start\": 31800001,  \"end\": 36300000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p23.1\", \"start\": 29800001,  \"end\": 31800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p23.2\", \"start\": 27700001,  \"end\": 29800000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p23.3\", \"start\": 23800001,  \"end\": 27700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p24.1\", \"start\": 19000001,  \"end\": 23800000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p24.2\", \"start\": 16500001,  \"end\": 19000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p24.3\", \"start\": 12000001,  \"end\": 16500000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p25.1\", \"start\": 6900001,   \"end\": 12000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p25.2\", \"start\": 4400001,   \"end\": 6900000,   \"type\": \"gpos50\"  },\n      { \"id\": \"p25.3\", \"start\": 1,         \"end\": 4400000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\", \"start\": 93900001,  \"end\": 96000000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.2\", \"start\": 96000001,  \"end\": 102100000, \"type\": \"gneg\"    },\n      { \"id\": \"q12.1\", \"start\": 102100001, \"end\": 105300000, \"type\": \"gpos50\"  },\n      { \"id\": \"q12.2\", \"start\": 105300001, \"end\": 106700000, \"type\": \"gneg\"    },\n      { \"id\": \"q12.3\", \"start\": 106700001, \"end\": 108700000, \"type\": \"gpos25\"  },\n      { \"id\": \"q13\",   \"start\": 108700001, \"end\": 112200000, \"type\": \"gneg\"    },\n      { \"id\": \"q14.1\", \"start\": 112200001, \"end\": 118100000, \"type\": \"gpos50\"  },\n      { \"id\": \"q14.2\", \"start\": 118100001, \"end\": 121600000, \"type\": \"gneg\"    },\n      { \"id\": \"q14.3\", \"start\": 121600001, \"end\": 129100000, \"type\": \"gpos50\"  },\n      { \"id\": \"q21.1\", \"start\": 129100001, \"end\": 131700000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.2\", \"start\": 131700001, \"end\": 134300000, \"type\": \"gpos25\"  },\n      { \"id\": \"q21.3\", \"start\": 134300001, \"end\": 136100000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.1\", \"start\": 136100001, \"end\": 141500000, \"type\": \"gpos100\" },\n      { \"id\": \"q22.2\", \"start\": 141500001, \"end\": 143400000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.3\", \"start\": 143400001, \"end\": 147900000, \"type\": \"gpos100\" },\n      { \"id\": \"q23.1\", \"start\": 147900001, \"end\": 149000000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.2\", \"start\": 149000001, \"end\": 149600000, \"type\": \"gpos25\"  },\n      { \"id\": \"q23.3\", \"start\": 149600001, \"end\": 154000000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.1\", \"start\": 154000001, \"end\": 158900000, \"type\": \"gpos75\"  },\n      { \"id\": \"q24.2\", \"start\": 158900001, \"end\": 162900000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.3\", \"start\": 162900001, \"end\": 168900000, \"type\": \"gpos75\"  },\n      { \"id\": \"q31.1\", \"start\": 168900001, \"end\": 177100000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.2\", \"start\": 177100001, \"end\": 179700000, \"type\": \"gpos50\"  },\n      { \"id\": \"q31.3\", \"start\": 179700001, \"end\": 182100000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.1\", \"start\": 182100001, \"end\": 188500000, \"type\": \"gpos75\"  },\n      { \"id\": \"q32.2\", \"start\": 188500001, \"end\": 191100000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.3\", \"start\": 191100001, \"end\": 196600000, \"type\": \"gpos75\"  },\n      { \"id\": \"q33.1\", \"start\": 196600001, \"end\": 202500000, \"type\": \"gneg\"    },\n      { \"id\": \"q33.2\", \"start\": 202500001, \"end\": 204100000, \"type\": \"gpos50\"  },\n      { \"id\": \"q33.3\", \"start\": 204100001, \"end\": 208200000, \"type\": \"gneg\"    },\n      { \"id\": \"q34\",   \"start\": 208200001, \"end\": 214500000, \"type\": \"gpos100\" },\n      { \"id\": \"q35\",   \"start\": 214500001, \"end\": 220700000, \"type\": \"gneg\"    },\n      { \"id\": \"q36.1\", \"start\": 220700001, \"end\": 224300000, \"type\": \"gpos75\"  },\n      { \"id\": \"q36.2\", \"start\": 224300001, \"end\": 225200000, \"type\": \"gneg\"    },\n      { \"id\": \"q36.3\", \"start\": 225200001, \"end\": 230100000, \"type\": \"gpos100\" },\n      { \"id\": \"q37.1\", \"start\": 230100001, \"end\": 234700000, \"type\": \"gneg\"    },\n      { \"id\": \"q37.2\", \"start\": 234700001, \"end\": 236400000, \"type\": \"gpos50\"  },\n      { \"id\": \"q37.3\", \"start\": 236400001, \"end\": 242193529, \"type\": \"gneg\"    }\n    ]\n  },\n  \"3\": {\n    \"size\"  : 198295559,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 87800001,  \"end\": 90900000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 87100001,  \"end\": 87800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.1\",  \"start\": 83500001,  \"end\": 87100000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p12.2\",  \"start\": 79800001,  \"end\": 83500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.3\",  \"start\": 74100001,  \"end\": 79800000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p13\",    \"start\": 69700001,  \"end\": 74100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.1\",  \"start\": 63800001,  \"end\": 69700000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p14.2\",  \"start\": 58600001,  \"end\": 63800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.3\",  \"start\": 54400001,  \"end\": 58600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p21.1\",  \"start\": 52300001,  \"end\": 54400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.2\",  \"start\": 50600001,  \"end\": 52300000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p21.31\", \"start\": 44200001,  \"end\": 50600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.32\", \"start\": 44100001,  \"end\": 44200000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p21.33\", \"start\": 43600001,  \"end\": 44100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.1\",  \"start\": 39300001,  \"end\": 43600000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p22.2\",  \"start\": 36400001,  \"end\": 39300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.3\",  \"start\": 32000001,  \"end\": 36400000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p23\",    \"start\": 30800001,  \"end\": 32000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p24.1\",  \"start\": 26300001,  \"end\": 30800000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p24.2\",  \"start\": 23800001,  \"end\": 26300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p24.3\",  \"start\": 16300001,  \"end\": 23800000,  \"type\": \"gpos100\" },\n      { \"id\": \"p25.1\",  \"start\": 13200001,  \"end\": 16300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p25.2\",  \"start\": 11600001,  \"end\": 13200000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p25.3\",  \"start\": 8100001,   \"end\": 11600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p26.1\",  \"start\": 4000001,   \"end\": 8100000,   \"type\": \"gpos50\"  },\n      { \"id\": \"p26.2\",  \"start\": 2800001,   \"end\": 4000000,   \"type\": \"gneg\"    },\n      { \"id\": \"p26.3\",  \"start\": 1,         \"end\": 2800000,   \"type\": \"gpos50\"  },\n      { \"id\": \"q11.1\",  \"start\": 90900001,  \"end\": 94000000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 94000001,  \"end\": 98600000,  \"type\": \"gvar\"    },\n      { \"id\": \"q12.1\",  \"start\": 98600001,  \"end\": 100300000, \"type\": \"gneg\"    },\n      { \"id\": \"q12.2\",  \"start\": 100300001, \"end\": 101200000, \"type\": \"gpos25\"  },\n      { \"id\": \"q12.3\",  \"start\": 101200001, \"end\": 103100000, \"type\": \"gneg\"    },\n      { \"id\": \"q13.11\", \"start\": 103100001, \"end\": 106500000, \"type\": \"gpos75\"  },\n      { \"id\": \"q13.12\", \"start\": 106500001, \"end\": 108200000, \"type\": \"gneg\"    },\n      { \"id\": \"q13.13\", \"start\": 108200001, \"end\": 111600000, \"type\": \"gpos50\"  },\n      { \"id\": \"q13.2\",  \"start\": 111600001, \"end\": 113700000, \"type\": \"gneg\"    },\n      { \"id\": \"q13.31\", \"start\": 113700001, \"end\": 117600000, \"type\": \"gpos75\"  },\n      { \"id\": \"q13.32\", \"start\": 117600001, \"end\": 119300000, \"type\": \"gneg\"    },\n      { \"id\": \"q13.33\", \"start\": 119300001, \"end\": 122200000, \"type\": \"gpos75\"  },\n      { \"id\": \"q21.1\",  \"start\": 122200001, \"end\": 124100000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.2\",  \"start\": 124100001, \"end\": 126100000, \"type\": \"gpos25\"  },\n      { \"id\": \"q21.3\",  \"start\": 126100001, \"end\": 129500000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.1\",  \"start\": 129500001, \"end\": 134000000, \"type\": \"gpos25\"  },\n      { \"id\": \"q22.2\",  \"start\": 134000001, \"end\": 136000000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.3\",  \"start\": 136000001, \"end\": 139000000, \"type\": \"gpos25\"  },\n      { \"id\": \"q23\",    \"start\": 139000001, \"end\": 143100000, \"type\": \"gneg\"    },\n      { \"id\": \"q24\",    \"start\": 143100001, \"end\": 149200000, \"type\": \"gpos100\" },\n      { \"id\": \"q25.1\",  \"start\": 149200001, \"end\": 152300000, \"type\": \"gneg\"    },\n      { \"id\": \"q25.2\",  \"start\": 152300001, \"end\": 155300000, \"type\": \"gpos50\"  },\n      { \"id\": \"q25.31\", \"start\": 155300001, \"end\": 157300000, \"type\": \"gneg\"    },\n      { \"id\": \"q25.32\", \"start\": 157300001, \"end\": 159300000, \"type\": \"gpos50\"  },\n      { \"id\": \"q25.33\", \"start\": 159300001, \"end\": 161000000, \"type\": \"gneg\"    },\n      { \"id\": \"q26.1\",  \"start\": 161000001, \"end\": 167900000, \"type\": \"gpos100\" },\n      { \"id\": \"q26.2\",  \"start\": 167900001, \"end\": 171200000, \"type\": \"gneg\"    },\n      { \"id\": \"q26.31\", \"start\": 171200001, \"end\": 176000000, \"type\": \"gpos75\"  },\n      { \"id\": \"q26.32\", \"start\": 176000001, \"end\": 179300000, \"type\": \"gneg\"    },\n      { \"id\": \"q26.33\", \"start\": 179300001, \"end\": 183000000, \"type\": \"gpos75\"  },\n      { \"id\": \"q27.1\",  \"start\": 183000001, \"end\": 184800000, \"type\": \"gneg\"    },\n      { \"id\": \"q27.2\",  \"start\": 184800001, \"end\": 186300000, \"type\": \"gpos25\"  },\n      { \"id\": \"q27.3\",  \"start\": 186300001, \"end\": 188200000, \"type\": \"gneg\"    },\n      { \"id\": \"q28\",    \"start\": 188200001, \"end\": 192600000, \"type\": \"gpos75\"  },\n      { \"id\": \"q29\",    \"start\": 192600001, \"end\": 198295559, \"type\": \"gneg\"    }\n    ]\n  },\n  \"4\": {\n    \"size\"  : 190214555,\n    \"bands\" : [\n      { \"id\": \"p11\",    \"start\": 48200001,  \"end\": 50000000,  \"type\": \"acen\"    },\n      { \"id\": \"p12\",    \"start\": 44600001,  \"end\": 48200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p13\",    \"start\": 41200001,  \"end\": 44600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p14\",    \"start\": 35800001,  \"end\": 41200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.1\",  \"start\": 27700001,  \"end\": 35800000,  \"type\": \"gpos100\" },\n      { \"id\": \"p15.2\",  \"start\": 21300001,  \"end\": 27700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.31\", \"start\": 17700001,  \"end\": 21300000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p15.32\", \"start\": 15000001,  \"end\": 17700000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.33\", \"start\": 11300001,  \"end\": 15000000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p16.1\",  \"start\": 6000001,   \"end\": 11300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p16.2\",  \"start\": 4500001,   \"end\": 6000000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p16.3\",  \"start\": 1,         \"end\": 4500000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11\",    \"start\": 50000001,  \"end\": 51800000,  \"type\": \"acen\"    },\n      { \"id\": \"q12\",    \"start\": 51800001,  \"end\": 58500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.1\",  \"start\": 58500001,  \"end\": 65500000,  \"type\": \"gpos100\" },\n      { \"id\": \"q13.2\",  \"start\": 65500001,  \"end\": 69400000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.3\",  \"start\": 69400001,  \"end\": 75300000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q21.1\",  \"start\": 75300001,  \"end\": 78000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.21\", \"start\": 78000001,  \"end\": 81500000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q21.22\", \"start\": 81500001,  \"end\": 83200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.23\", \"start\": 83200001,  \"end\": 86000000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q21.3\",  \"start\": 86000001,  \"end\": 87100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.1\",  \"start\": 87100001,  \"end\": 92800000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q22.2\",  \"start\": 92800001,  \"end\": 94200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.3\",  \"start\": 94200001,  \"end\": 97900000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q23\",    \"start\": 97900001,  \"end\": 100100000, \"type\": \"gneg\"    },\n      { \"id\": \"q24\",    \"start\": 100100001, \"end\": 106700000, \"type\": \"gpos50\"  },\n      { \"id\": \"q25\",    \"start\": 106700001, \"end\": 113200000, \"type\": \"gneg\"    },\n      { \"id\": \"q26\",    \"start\": 113200001, \"end\": 119900000, \"type\": \"gpos75\"  },\n      { \"id\": \"q27\",    \"start\": 119900001, \"end\": 122800000, \"type\": \"gneg\"    },\n      { \"id\": \"q28.1\",  \"start\": 122800001, \"end\": 127900000, \"type\": \"gpos50\"  },\n      { \"id\": \"q28.2\",  \"start\": 127900001, \"end\": 130100000, \"type\": \"gneg\"    },\n      { \"id\": \"q28.3\",  \"start\": 130100001, \"end\": 138500000, \"type\": \"gpos100\" },\n      { \"id\": \"q31.1\",  \"start\": 138500001, \"end\": 140600000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.21\", \"start\": 140600001, \"end\": 145900000, \"type\": \"gpos25\"  },\n      { \"id\": \"q31.22\", \"start\": 145900001, \"end\": 147500000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.23\", \"start\": 147500001, \"end\": 150200000, \"type\": \"gpos25\"  },\n      { \"id\": \"q31.3\",  \"start\": 150200001, \"end\": 154600000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.1\",  \"start\": 154600001, \"end\": 160800000, \"type\": \"gpos100\" },\n      { \"id\": \"q32.2\",  \"start\": 160800001, \"end\": 163600000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.3\",  \"start\": 163600001, \"end\": 169200000, \"type\": \"gpos100\" },\n      { \"id\": \"q33\",    \"start\": 169200001, \"end\": 171000000, \"type\": \"gneg\"    },\n      { \"id\": \"q34.1\",  \"start\": 171000001, \"end\": 175400000, \"type\": \"gpos75\"  },\n      { \"id\": \"q34.2\",  \"start\": 175400001, \"end\": 176600000, \"type\": \"gneg\"    },\n      { \"id\": \"q34.3\",  \"start\": 176600001, \"end\": 182300000, \"type\": \"gpos100\" },\n      { \"id\": \"q35.1\",  \"start\": 182300001, \"end\": 186200000, \"type\": \"gneg\"    },\n      { \"id\": \"q35.2\",  \"start\": 186200001, \"end\": 190214555, \"type\": \"gpos25\"  }\n    ]\n  },\n  \"5\": {\n    \"size\"  : 181538259,\n    \"bands\" : [\n      { \"id\": \"p11\",    \"start\": 46100001,  \"end\": 48800000,  \"type\": \"acen\"    },\n      { \"id\": \"p12\",    \"start\": 42500001,  \"end\": 46100000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p13.1\",  \"start\": 38400001,  \"end\": 42500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p13.2\",  \"start\": 33800001,  \"end\": 38400000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p13.3\",  \"start\": 28900001,  \"end\": 33800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.1\",  \"start\": 24600001,  \"end\": 28900000,  \"type\": \"gpos100\" },\n      { \"id\": \"p14.2\",  \"start\": 23300001,  \"end\": 24600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.3\",  \"start\": 18400001,  \"end\": 23300000,  \"type\": \"gpos100\" },\n      { \"id\": \"p15.1\",  \"start\": 15000001,  \"end\": 18400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.2\",  \"start\": 9900001,   \"end\": 15000000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p15.31\", \"start\": 6300001,   \"end\": 9900000,   \"type\": \"gneg\"    },\n      { \"id\": \"p15.32\", \"start\": 4400001,   \"end\": 6300000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p15.33\", \"start\": 1,         \"end\": 4400000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 48800001,  \"end\": 51400000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 51400001,  \"end\": 59600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.1\",  \"start\": 59600001,  \"end\": 63600000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q12.2\",  \"start\": 63600001,  \"end\": 63900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.3\",  \"start\": 63900001,  \"end\": 67400000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q13.1\",  \"start\": 67400001,  \"end\": 69100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.2\",  \"start\": 69100001,  \"end\": 74000000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.3\",  \"start\": 74000001,  \"end\": 77600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.1\",  \"start\": 77600001,  \"end\": 82100000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q14.2\",  \"start\": 82100001,  \"end\": 83500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.3\",  \"start\": 83500001,  \"end\": 93000000,  \"type\": \"gpos100\" },\n      { \"id\": \"q15\",    \"start\": 93000001,  \"end\": 98900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 98900001,  \"end\": 103400000, \"type\": \"gpos100\" },\n      { \"id\": \"q21.2\",  \"start\": 103400001, \"end\": 105100000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.3\",  \"start\": 105100001, \"end\": 110200000, \"type\": \"gpos100\" },\n      { \"id\": \"q22.1\",  \"start\": 110200001, \"end\": 112200000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 112200001, \"end\": 113800000, \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 113800001, \"end\": 115900000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.1\",  \"start\": 115900001, \"end\": 122100000, \"type\": \"gpos100\" },\n      { \"id\": \"q23.2\",  \"start\": 122100001, \"end\": 127900000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.3\",  \"start\": 127900001, \"end\": 131200000, \"type\": \"gpos100\" },\n      { \"id\": \"q31.1\",  \"start\": 131200001, \"end\": 136900000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.2\",  \"start\": 136900001, \"end\": 140100000, \"type\": \"gpos25\"  },\n      { \"id\": \"q31.3\",  \"start\": 140100001, \"end\": 145100000, \"type\": \"gneg\"    },\n      { \"id\": \"q32\",    \"start\": 145100001, \"end\": 150400000, \"type\": \"gpos75\"  },\n      { \"id\": \"q33.1\",  \"start\": 150400001, \"end\": 153300000, \"type\": \"gneg\"    },\n      { \"id\": \"q33.2\",  \"start\": 153300001, \"end\": 156300000, \"type\": \"gpos50\"  },\n      { \"id\": \"q33.3\",  \"start\": 156300001, \"end\": 160500000, \"type\": \"gneg\"    },\n      { \"id\": \"q34\",    \"start\": 160500001, \"end\": 169000000, \"type\": \"gpos100\" },\n      { \"id\": \"q35.1\",  \"start\": 169000001, \"end\": 173300000, \"type\": \"gneg\"    },\n      { \"id\": \"q35.2\",  \"start\": 173300001, \"end\": 177100000, \"type\": \"gpos25\"  },\n      { \"id\": \"q35.3\",  \"start\": 177100001, \"end\": 181538259, \"type\": \"gneg\"    }\n    ]\n  },\n  \"6\": {\n    \"size\"  : 170805979,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 58500001,  \"end\": 59800000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 57200001,  \"end\": 58500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.1\",  \"start\": 53000001,  \"end\": 57200000,  \"type\": \"gpos100\" },\n      { \"id\": \"p12.2\",  \"start\": 51800001,  \"end\": 53000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.3\",  \"start\": 46200001,  \"end\": 51800000,  \"type\": \"gpos100\" },\n      { \"id\": \"p21.1\",  \"start\": 40500001,  \"end\": 46200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.2\",  \"start\": 36600001,  \"end\": 40500000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p21.31\", \"start\": 33500001,  \"end\": 36600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.32\", \"start\": 32100001,  \"end\": 33500000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p21.33\", \"start\": 30500001,  \"end\": 32100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.1\",  \"start\": 27100001,  \"end\": 30500000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p22.2\",  \"start\": 25200001,  \"end\": 27100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.3\",  \"start\": 15200001,  \"end\": 25200000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p23\",    \"start\": 13400001,  \"end\": 15200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p24.1\",  \"start\": 11600001,  \"end\": 13400000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p24.2\",  \"start\": 10600001,  \"end\": 11600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p24.3\",  \"start\": 7100001,   \"end\": 10600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p25.1\",  \"start\": 4200001,   \"end\": 7100000,   \"type\": \"gneg\"    },\n      { \"id\": \"p25.2\",  \"start\": 2300001,   \"end\": 4200000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p25.3\",  \"start\": 1,         \"end\": 2300000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 59800001,  \"end\": 62600000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 62600001,  \"end\": 62700000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12\",    \"start\": 62700001,  \"end\": 69200000,  \"type\": \"gpos100\" },\n      { \"id\": \"q13\",    \"start\": 69200001,  \"end\": 75200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.1\",  \"start\": 75200001,  \"end\": 83200000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q14.2\",  \"start\": 83200001,  \"end\": 84200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.3\",  \"start\": 84200001,  \"end\": 87300000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q15\",    \"start\": 87300001,  \"end\": 92500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q16.1\",  \"start\": 92500001,  \"end\": 98900000,  \"type\": \"gpos100\" },\n      { \"id\": \"q16.2\",  \"start\": 98900001,  \"end\": 100000000, \"type\": \"gneg\"    },\n      { \"id\": \"q16.3\",  \"start\": 100000001, \"end\": 105000000, \"type\": \"gpos100\" },\n      { \"id\": \"q21\",    \"start\": 105000001, \"end\": 114200000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.1\",  \"start\": 114200001, \"end\": 117900000, \"type\": \"gpos75\"  },\n      { \"id\": \"q22.2\",  \"start\": 117900001, \"end\": 118100000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.31\", \"start\": 118100001, \"end\": 125800000, \"type\": \"gpos100\" },\n      { \"id\": \"q22.32\", \"start\": 125800001, \"end\": 126800000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.33\", \"start\": 126800001, \"end\": 130000000, \"type\": \"gpos75\"  },\n      { \"id\": \"q23.1\",  \"start\": 130000001, \"end\": 130900000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.2\",  \"start\": 130900001, \"end\": 134700000, \"type\": \"gpos50\"  },\n      { \"id\": \"q23.3\",  \"start\": 134700001, \"end\": 138300000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.1\",  \"start\": 138300001, \"end\": 142200000, \"type\": \"gpos75\"  },\n      { \"id\": \"q24.2\",  \"start\": 142200001, \"end\": 145100000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.3\",  \"start\": 145100001, \"end\": 148500000, \"type\": \"gpos75\"  },\n      { \"id\": \"q25.1\",  \"start\": 148500001, \"end\": 152100000, \"type\": \"gneg\"    },\n      { \"id\": \"q25.2\",  \"start\": 152100001, \"end\": 155200000, \"type\": \"gpos50\"  },\n      { \"id\": \"q25.3\",  \"start\": 155200001, \"end\": 160600000, \"type\": \"gneg\"    },\n      { \"id\": \"q26\",    \"start\": 160600001, \"end\": 164100000, \"type\": \"gpos50\"  },\n      { \"id\": \"q27\",    \"start\": 164100001, \"end\": 170805979, \"type\": \"gneg\"    }\n    ]\n  },\n  \"7\": {\n    \"size\"  : 159345973,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 58100001,  \"end\": 60100000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 53900001,  \"end\": 58100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.1\",  \"start\": 50500001,  \"end\": 53900000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p12.2\",  \"start\": 49000001,  \"end\": 50500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.3\",  \"start\": 45400001,  \"end\": 49000000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p13\",    \"start\": 43300001,  \"end\": 45400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.1\",  \"start\": 37100001,  \"end\": 43300000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p14.2\",  \"start\": 34900001,  \"end\": 37100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.3\",  \"start\": 28800001,  \"end\": 34900000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p15.1\",  \"start\": 27900001,  \"end\": 28800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.2\",  \"start\": 25500001,  \"end\": 27900000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p15.3\",  \"start\": 20900001,  \"end\": 25500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.1\",  \"start\": 16500001,  \"end\": 20900000,  \"type\": \"gpos100\" },\n      { \"id\": \"p21.2\",  \"start\": 13700001,  \"end\": 16500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.3\",  \"start\": 7200001,   \"end\": 13700000,  \"type\": \"gpos100\" },\n      { \"id\": \"p22.1\",  \"start\": 4500001,   \"end\": 7200000,   \"type\": \"gneg\"    },\n      { \"id\": \"p22.2\",  \"start\": 2800001,   \"end\": 4500000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p22.3\",  \"start\": 1,         \"end\": 2800000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 60100001,  \"end\": 62100000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.21\", \"start\": 62100001,  \"end\": 67500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q11.22\", \"start\": 67500001,  \"end\": 72700000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q11.23\", \"start\": 72700001,  \"end\": 77900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.11\", \"start\": 77900001,  \"end\": 86700000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.12\", \"start\": 86700001,  \"end\": 88500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.13\", \"start\": 88500001,  \"end\": 91500000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q21.2\",  \"start\": 91500001,  \"end\": 93300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.3\",  \"start\": 93300001,  \"end\": 98400000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q22.1\",  \"start\": 98400001,  \"end\": 104200000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 104200001, \"end\": 104900000, \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 104900001, \"end\": 107800000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.1\",  \"start\": 107800001, \"end\": 115000000, \"type\": \"gpos75\"  },\n      { \"id\": \"q31.2\",  \"start\": 115000001, \"end\": 117700000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.31\", \"start\": 117700001, \"end\": 121400000, \"type\": \"gpos75\"  },\n      { \"id\": \"q31.32\", \"start\": 121400001, \"end\": 124100000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.33\", \"start\": 124100001, \"end\": 127500000, \"type\": \"gpos75\"  },\n      { \"id\": \"q32.1\",  \"start\": 127500001, \"end\": 129600000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.2\",  \"start\": 129600001, \"end\": 130800000, \"type\": \"gpos25\"  },\n      { \"id\": \"q32.3\",  \"start\": 130800001, \"end\": 132900000, \"type\": \"gneg\"    },\n      { \"id\": \"q33\",    \"start\": 132900001, \"end\": 138500000, \"type\": \"gpos50\"  },\n      { \"id\": \"q34\",    \"start\": 138500001, \"end\": 143400000, \"type\": \"gneg\"    },\n      { \"id\": \"q35\",    \"start\": 143400001, \"end\": 148200000, \"type\": \"gpos75\"  },\n      { \"id\": \"q36.1\",  \"start\": 148200001, \"end\": 152800000, \"type\": \"gneg\"    },\n      { \"id\": \"q36.2\",  \"start\": 152800001, \"end\": 155200000, \"type\": \"gpos25\"  },\n      { \"id\": \"q36.3\",  \"start\": 155200001, \"end\": 159345973, \"type\": \"gneg\"    }\n    ]\n  },\n  \"8\": {\n    \"size\"  : 145138636,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 43200001,  \"end\": 45200000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.21\", \"start\": 39900001,  \"end\": 43200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p11.22\", \"start\": 38500001,  \"end\": 39900000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p11.23\", \"start\": 36700001,  \"end\": 38500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12\",    \"start\": 29000001,  \"end\": 36700000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p21.1\",  \"start\": 27500001,  \"end\": 29000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.2\",  \"start\": 23500001,  \"end\": 27500000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p21.3\",  \"start\": 19200001,  \"end\": 23500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22\",    \"start\": 12800001,  \"end\": 19200000,  \"type\": \"gpos100\" },\n      { \"id\": \"p23.1\",  \"start\": 6300001,   \"end\": 12800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p23.2\",  \"start\": 2300001,   \"end\": 6300000,   \"type\": \"gpos75\"  },\n      { \"id\": \"p23.3\",  \"start\": 1,         \"end\": 2300000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 45200001,  \"end\": 47200000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.21\", \"start\": 47200001,  \"end\": 51300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q11.22\", \"start\": 51300001,  \"end\": 51700000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q11.23\", \"start\": 51700001,  \"end\": 54600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.1\",  \"start\": 54600001,  \"end\": 60600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q12.2\",  \"start\": 60600001,  \"end\": 61300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.3\",  \"start\": 61300001,  \"end\": 65100000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.1\",  \"start\": 65100001,  \"end\": 67100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.2\",  \"start\": 67100001,  \"end\": 69600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.3\",  \"start\": 69600001,  \"end\": 72000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.11\", \"start\": 72000001,  \"end\": 74600000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.12\", \"start\": 74600001,  \"end\": 74700000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.13\", \"start\": 74700001,  \"end\": 83500000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q21.2\",  \"start\": 83500001,  \"end\": 85900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.3\",  \"start\": 85900001,  \"end\": 92300000,  \"type\": \"gpos100\" },\n      { \"id\": \"q22.1\",  \"start\": 92300001,  \"end\": 97900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 97900001,  \"end\": 100500000, \"type\": \"gpos25\"  },\n      { \"id\": \"q22.3\",  \"start\": 100500001, \"end\": 105100000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.1\",  \"start\": 105100001, \"end\": 109500000, \"type\": \"gpos75\"  },\n      { \"id\": \"q23.2\",  \"start\": 109500001, \"end\": 111100000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.3\",  \"start\": 111100001, \"end\": 116700000, \"type\": \"gpos100\" },\n      { \"id\": \"q24.11\", \"start\": 116700001, \"end\": 118300000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.12\", \"start\": 118300001, \"end\": 121500000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.13\", \"start\": 121500001, \"end\": 126300000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.21\", \"start\": 126300001, \"end\": 130400000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.22\", \"start\": 130400001, \"end\": 135400000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.23\", \"start\": 135400001, \"end\": 138900000, \"type\": \"gpos75\"  },\n      { \"id\": \"q24.3\",  \"start\": 138900001, \"end\": 145138636, \"type\": \"gneg\"    }\n    ]\n  },\n  \"9\": {\n    \"size\"  : 138394717,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 42200001,  \"end\": 43000000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 40000001,  \"end\": 42200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12\",    \"start\": 39000001,  \"end\": 40000000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p13.1\",  \"start\": 37900001,  \"end\": 39000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p13.2\",  \"start\": 36300001,  \"end\": 37900000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p13.3\",  \"start\": 33200001,  \"end\": 36300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.1\",  \"start\": 28000001,  \"end\": 33200000,  \"type\": \"gpos100\" },\n      { \"id\": \"p21.2\",  \"start\": 25600001,  \"end\": 28000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.3\",  \"start\": 19900001,  \"end\": 25600000,  \"type\": \"gpos100\" },\n      { \"id\": \"p22.1\",  \"start\": 18500001,  \"end\": 19900000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.2\",  \"start\": 16600001,  \"end\": 18500000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p22.3\",  \"start\": 14200001,  \"end\": 16600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p23\",    \"start\": 9000001,   \"end\": 14200000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p24.1\",  \"start\": 4600001,   \"end\": 9000000,   \"type\": \"gneg\"    },\n      { \"id\": \"p24.2\",  \"start\": 2200001,   \"end\": 4600000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p24.3\",  \"start\": 1,         \"end\": 2200000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11\",    \"start\": 43000001,  \"end\": 45500000,  \"type\": \"acen\"    },\n      { \"id\": \"q12\",    \"start\": 45500001,  \"end\": 61500000,  \"type\": \"gvar\"    },\n      { \"id\": \"q13\",    \"start\": 61500001,  \"end\": 65000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.11\", \"start\": 65000001,  \"end\": 69300000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q21.12\", \"start\": 69300001,  \"end\": 71300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.13\", \"start\": 71300001,  \"end\": 76600000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q21.2\",  \"start\": 76600001,  \"end\": 78500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.31\", \"start\": 78500001,  \"end\": 81500000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q21.32\", \"start\": 81500001,  \"end\": 84300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.33\", \"start\": 84300001,  \"end\": 87800000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q22.1\",  \"start\": 87800001,  \"end\": 89200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 89200001,  \"end\": 91200000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q22.31\", \"start\": 91200001,  \"end\": 93900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.32\", \"start\": 93900001,  \"end\": 96500000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q22.33\", \"start\": 96500001,  \"end\": 99800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q31.1\",  \"start\": 99800001,  \"end\": 105400000, \"type\": \"gpos100\" },\n      { \"id\": \"q31.2\",  \"start\": 105400001, \"end\": 108500000, \"type\": \"gneg\"    },\n      { \"id\": \"q31.3\",  \"start\": 108500001, \"end\": 112100000, \"type\": \"gpos25\"  },\n      { \"id\": \"q32\",    \"start\": 112100001, \"end\": 114900000, \"type\": \"gneg\"    },\n      { \"id\": \"q33.1\",  \"start\": 114900001, \"end\": 119800000, \"type\": \"gpos75\"  },\n      { \"id\": \"q33.2\",  \"start\": 119800001, \"end\": 123100000, \"type\": \"gneg\"    },\n      { \"id\": \"q33.3\",  \"start\": 123100001, \"end\": 127500000, \"type\": \"gpos25\"  },\n      { \"id\": \"q34.11\", \"start\": 127500001, \"end\": 130600000, \"type\": \"gneg\"    },\n      { \"id\": \"q34.12\", \"start\": 130600001, \"end\": 131100000, \"type\": \"gpos25\"  },\n      { \"id\": \"q34.13\", \"start\": 131100001, \"end\": 133100000, \"type\": \"gneg\"    },\n      { \"id\": \"q34.2\",  \"start\": 133100001, \"end\": 134500000, \"type\": \"gpos25\"  },\n      { \"id\": \"q34.3\",  \"start\": 134500001, \"end\": 138394717, \"type\": \"gneg\"    }\n    ]\n  },\n  \"10\": {\n    \"size\"  : 133797422,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 38000001,  \"end\": 39800000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.21\", \"start\": 34200001,  \"end\": 38000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p11.22\", \"start\": 31100001,  \"end\": 34200000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p11.23\", \"start\": 29300001,  \"end\": 31100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.1\",  \"start\": 24300001,  \"end\": 29300000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p12.2\",  \"start\": 22300001,  \"end\": 24300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.31\", \"start\": 18400001,  \"end\": 22300000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p12.32\", \"start\": 18300001,  \"end\": 18400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.33\", \"start\": 17300001,  \"end\": 18300000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p13\",    \"start\": 12200001,  \"end\": 17300000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14\",    \"start\": 6600001,   \"end\": 12200000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p15.1\",  \"start\": 3800001,   \"end\": 6600000,   \"type\": \"gneg\"    },\n      { \"id\": \"p15.2\",  \"start\": 3000001,   \"end\": 3800000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p15.3\",  \"start\": 1,         \"end\": 3000000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 39800001,  \"end\": 41600000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.21\", \"start\": 41600001,  \"end\": 45500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q11.22\", \"start\": 45500001,  \"end\": 48600000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q11.23\", \"start\": 48600001,  \"end\": 51100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 51100001,  \"end\": 59400000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.2\",  \"start\": 59400001,  \"end\": 62800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.3\",  \"start\": 62800001,  \"end\": 68800000,  \"type\": \"gpos100\" },\n      { \"id\": \"q22.1\",  \"start\": 68800001,  \"end\": 73100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 73100001,  \"end\": 75900000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 75900001,  \"end\": 80300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q23.1\",  \"start\": 80300001,  \"end\": 86100000,  \"type\": \"gpos100\" },\n      { \"id\": \"q23.2\",  \"start\": 86100001,  \"end\": 87700000,  \"type\": \"gneg\"    },\n      { \"id\": \"q23.31\", \"start\": 87700001,  \"end\": 91100000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q23.32\", \"start\": 91100001,  \"end\": 92300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q23.33\", \"start\": 92300001,  \"end\": 95300000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q24.1\",  \"start\": 95300001,  \"end\": 97500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q24.2\",  \"start\": 97500001,  \"end\": 100100000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.31\", \"start\": 100100001, \"end\": 101200000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.32\", \"start\": 101200001, \"end\": 103100000, \"type\": \"gpos25\"  },\n      { \"id\": \"q24.33\", \"start\": 103100001, \"end\": 104000000, \"type\": \"gneg\"    },\n      { \"id\": \"q25.1\",  \"start\": 104000001, \"end\": 110100000, \"type\": \"gpos100\" },\n      { \"id\": \"q25.2\",  \"start\": 110100001, \"end\": 113100000, \"type\": \"gneg\"    },\n      { \"id\": \"q25.3\",  \"start\": 113100001, \"end\": 117300000, \"type\": \"gpos75\"  },\n      { \"id\": \"q26.11\", \"start\": 117300001, \"end\": 119900000, \"type\": \"gneg\"    },\n      { \"id\": \"q26.12\", \"start\": 119900001, \"end\": 121400000, \"type\": \"gpos50\"  },\n      { \"id\": \"q26.13\", \"start\": 121400001, \"end\": 125700000, \"type\": \"gneg\"    },\n      { \"id\": \"q26.2\",  \"start\": 125700001, \"end\": 128800000, \"type\": \"gpos50\"  },\n      { \"id\": \"q26.3\",  \"start\": 128800001, \"end\": 133797422, \"type\": \"gneg\"    }\n    ]\n  },\n  \"11\": {\n    \"size\"  : 135086622,\n    \"bands\" : [\n      { \"id\": \"p11.11\", \"start\": 51000001,  \"end\": 53400000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.12\", \"start\": 48800001,  \"end\": 51000000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p11.2\",  \"start\": 43400001,  \"end\": 48800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12\",    \"start\": 36400001,  \"end\": 43400000,  \"type\": \"gpos100\" },\n      { \"id\": \"p13\",    \"start\": 31000001,  \"end\": 36400000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.1\",  \"start\": 27200001,  \"end\": 31000000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p14.2\",  \"start\": 26200001,  \"end\": 27200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p14.3\",  \"start\": 22000001,  \"end\": 26200000,  \"type\": \"gpos100\" },\n      { \"id\": \"p15.1\",  \"start\": 16900001,  \"end\": 22000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.2\",  \"start\": 13800001,  \"end\": 16900000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p15.3\",  \"start\": 11700001,  \"end\": 13800000,  \"type\": \"gneg\"    },\n      { \"id\": \"p15.4\",  \"start\": 2800001,   \"end\": 11700000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p15.5\",  \"start\": 1,         \"end\": 2800000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11\",    \"start\": 53400001,  \"end\": 55800000,  \"type\": \"acen\"    },\n      { \"id\": \"q12.1\",  \"start\": 55800001,  \"end\": 60100000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q12.2\",  \"start\": 60100001,  \"end\": 61900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.3\",  \"start\": 61900001,  \"end\": 63600000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q13.1\",  \"start\": 63600001,  \"end\": 66100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.2\",  \"start\": 66100001,  \"end\": 68700000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q13.3\",  \"start\": 68700001,  \"end\": 70500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.4\",  \"start\": 70500001,  \"end\": 75500000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.5\",  \"start\": 75500001,  \"end\": 77400000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.1\",  \"start\": 77400001,  \"end\": 85900000,  \"type\": \"gpos100\" },\n      { \"id\": \"q14.2\",  \"start\": 85900001,  \"end\": 88600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.3\",  \"start\": 88600001,  \"end\": 93000000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21\",    \"start\": 93000001,  \"end\": 97400000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.1\",  \"start\": 97400001,  \"end\": 102300000, \"type\": \"gpos100\" },\n      { \"id\": \"q22.2\",  \"start\": 102300001, \"end\": 103000000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.3\",  \"start\": 103000001, \"end\": 110600000, \"type\": \"gpos100\" },\n      { \"id\": \"q23.1\",  \"start\": 110600001, \"end\": 112700000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.2\",  \"start\": 112700001, \"end\": 114600000, \"type\": \"gpos50\"  },\n      { \"id\": \"q23.3\",  \"start\": 114600001, \"end\": 121300000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.1\",  \"start\": 121300001, \"end\": 124000000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.2\",  \"start\": 124000001, \"end\": 127900000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.3\",  \"start\": 127900001, \"end\": 130900000, \"type\": \"gpos50\"  },\n      { \"id\": \"q25\",    \"start\": 130900001, \"end\": 135086622, \"type\": \"gneg\"    }\n    ]\n  },\n  \"12\": {\n    \"size\"  : 133275309,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 33200001,  \"end\": 35500000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.21\", \"start\": 30500001,  \"end\": 33200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p11.22\", \"start\": 27600001,  \"end\": 30500000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p11.23\", \"start\": 26300001,  \"end\": 27600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.1\",  \"start\": 21100001,  \"end\": 26300000,  \"type\": \"gpos100\" },\n      { \"id\": \"p12.2\",  \"start\": 19800001,  \"end\": 21100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p12.3\",  \"start\": 14600001,  \"end\": 19800000,  \"type\": \"gpos100\" },\n      { \"id\": \"p13.1\",  \"start\": 12600001,  \"end\": 14600000,  \"type\": \"gneg\"    },\n      { \"id\": \"p13.2\",  \"start\": 10000001,  \"end\": 12600000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p13.31\", \"start\": 5300001,   \"end\": 10000000,  \"type\": \"gneg\"    },\n      { \"id\": \"p13.32\", \"start\": 3200001,   \"end\": 5300000,   \"type\": \"gpos25\"  },\n      { \"id\": \"p13.33\", \"start\": 1,         \"end\": 3200000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11\",    \"start\": 35500001,  \"end\": 37800000,  \"type\": \"acen\"    },\n      { \"id\": \"q12\",    \"start\": 37800001,  \"end\": 46000000,  \"type\": \"gpos100\" },\n      { \"id\": \"q13.11\", \"start\": 46000001,  \"end\": 48700000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.12\", \"start\": 48700001,  \"end\": 51100000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q13.13\", \"start\": 51100001,  \"end\": 54500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.2\",  \"start\": 54500001,  \"end\": 56200000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q13.3\",  \"start\": 56200001,  \"end\": 57700000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.1\",  \"start\": 57700001,  \"end\": 62700000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q14.2\",  \"start\": 62700001,  \"end\": 64700000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.3\",  \"start\": 64700001,  \"end\": 67300000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q15\",    \"start\": 67300001,  \"end\": 71100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 71100001,  \"end\": 75300000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q21.2\",  \"start\": 75300001,  \"end\": 79900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.31\", \"start\": 79900001,  \"end\": 86300000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.32\", \"start\": 86300001,  \"end\": 88600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.33\", \"start\": 88600001,  \"end\": 92200000,  \"type\": \"gpos100\" },\n      { \"id\": \"q22\",    \"start\": 92200001,  \"end\": 95800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q23.1\",  \"start\": 95800001,  \"end\": 101200000, \"type\": \"gpos75\"  },\n      { \"id\": \"q23.2\",  \"start\": 101200001, \"end\": 103500000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.3\",  \"start\": 103500001, \"end\": 108600000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.11\", \"start\": 108600001, \"end\": 111300000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.12\", \"start\": 111300001, \"end\": 111900000, \"type\": \"gpos25\"  },\n      { \"id\": \"q24.13\", \"start\": 111900001, \"end\": 113900000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.21\", \"start\": 113900001, \"end\": 116400000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.22\", \"start\": 116400001, \"end\": 117700000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.23\", \"start\": 117700001, \"end\": 120300000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.31\", \"start\": 120300001, \"end\": 125400000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.32\", \"start\": 125400001, \"end\": 128700000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.33\", \"start\": 128700001, \"end\": 133275309, \"type\": \"gneg\"    }\n    ]\n  },\n  \"13\": {\n    \"size\"  : 114364328,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 16500001,  \"end\": 17700000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 10100001,  \"end\": 16500000,  \"type\": \"gvar\"    },\n      { \"id\": \"p12\",    \"start\": 4600001,   \"end\": 10100000,  \"type\": \"stalk\"   },\n      { \"id\": \"p13\",    \"start\": 1,         \"end\": 4600000,   \"type\": \"gvar\"    },\n      { \"id\": \"q11\",    \"start\": 17700001,  \"end\": 18900000,  \"type\": \"acen\"    },\n      { \"id\": \"q12.11\", \"start\": 18900001,  \"end\": 22600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.12\", \"start\": 22600001,  \"end\": 24900000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q12.13\", \"start\": 24900001,  \"end\": 27200000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12.2\",  \"start\": 27200001,  \"end\": 28300000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q12.3\",  \"start\": 28300001,  \"end\": 31600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.1\",  \"start\": 31600001,  \"end\": 33400000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.2\",  \"start\": 33400001,  \"end\": 34900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.3\",  \"start\": 34900001,  \"end\": 39500000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q14.11\", \"start\": 39500001,  \"end\": 44600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.12\", \"start\": 44600001,  \"end\": 45200000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q14.13\", \"start\": 45200001,  \"end\": 46700000,  \"type\": \"gneg\"    },\n      { \"id\": \"q14.2\",  \"start\": 46700001,  \"end\": 50300000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q14.3\",  \"start\": 50300001,  \"end\": 54700000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 54700001,  \"end\": 59000000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.2\",  \"start\": 59000001,  \"end\": 61800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.31\", \"start\": 61800001,  \"end\": 65200000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q21.32\", \"start\": 65200001,  \"end\": 68100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.33\", \"start\": 68100001,  \"end\": 72800000,  \"type\": \"gpos100\" },\n      { \"id\": \"q22.1\",  \"start\": 72800001,  \"end\": 74900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 74900001,  \"end\": 76700000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 76700001,  \"end\": 78500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q31.1\",  \"start\": 78500001,  \"end\": 87100000,  \"type\": \"gpos100\" },\n      { \"id\": \"q31.2\",  \"start\": 87100001,  \"end\": 89400000,  \"type\": \"gneg\"    },\n      { \"id\": \"q31.3\",  \"start\": 89400001,  \"end\": 94400000,  \"type\": \"gpos100\" },\n      { \"id\": \"q32.1\",  \"start\": 94400001,  \"end\": 97500000,  \"type\": \"gneg\"    },\n      { \"id\": \"q32.2\",  \"start\": 97500001,  \"end\": 98700000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q32.3\",  \"start\": 98700001,  \"end\": 101100000, \"type\": \"gneg\"    },\n      { \"id\": \"q33.1\",  \"start\": 101100001, \"end\": 104200000, \"type\": \"gpos100\" },\n      { \"id\": \"q33.2\",  \"start\": 104200001, \"end\": 106400000, \"type\": \"gneg\"    },\n      { \"id\": \"q33.3\",  \"start\": 106400001, \"end\": 109600000, \"type\": \"gpos100\" },\n      { \"id\": \"q34\",    \"start\": 109600001, \"end\": 114364328, \"type\": \"gneg\"    }\n    ]\n  },\n  \"14\": {\n    \"size\"  : 107043718,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 16100001,  \"end\": 17200000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 8000001,   \"end\": 16100000,  \"type\": \"gvar\"    },\n      { \"id\": \"p12\",    \"start\": 3600001,   \"end\": 8000000,   \"type\": \"stalk\"   },\n      { \"id\": \"p13\",    \"start\": 1,         \"end\": 3600000,   \"type\": \"gvar\"    },\n      { \"id\": \"q11.1\",  \"start\": 17200001,  \"end\": 18200000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 18200001,  \"end\": 24100000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12\",    \"start\": 24100001,  \"end\": 32900000,  \"type\": \"gpos100\" },\n      { \"id\": \"q13.1\",  \"start\": 32900001,  \"end\": 34800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.2\",  \"start\": 34800001,  \"end\": 36100000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.3\",  \"start\": 36100001,  \"end\": 37400000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 37400001,  \"end\": 43000000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.2\",  \"start\": 43000001,  \"end\": 46700000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.3\",  \"start\": 46700001,  \"end\": 50400000,  \"type\": \"gpos100\" },\n      { \"id\": \"q22.1\",  \"start\": 50400001,  \"end\": 53600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 53600001,  \"end\": 55000000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q22.3\",  \"start\": 55000001,  \"end\": 57600000,  \"type\": \"gneg\"    },\n      { \"id\": \"q23.1\",  \"start\": 57600001,  \"end\": 61600000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q23.2\",  \"start\": 61600001,  \"end\": 64300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q23.3\",  \"start\": 64300001,  \"end\": 67400000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q24.1\",  \"start\": 67400001,  \"end\": 69800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q24.2\",  \"start\": 69800001,  \"end\": 73300000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q24.3\",  \"start\": 73300001,  \"end\": 78800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q31.1\",  \"start\": 78800001,  \"end\": 83100000,  \"type\": \"gpos100\" },\n      { \"id\": \"q31.2\",  \"start\": 83100001,  \"end\": 84400000,  \"type\": \"gneg\"    },\n      { \"id\": \"q31.3\",  \"start\": 84400001,  \"end\": 89300000,  \"type\": \"gpos100\" },\n      { \"id\": \"q32.11\", \"start\": 89300001,  \"end\": 91400000,  \"type\": \"gneg\"    },\n      { \"id\": \"q32.12\", \"start\": 91400001,  \"end\": 94200000,  \"type\": \"gpos25\"  },\n      { \"id\": \"q32.13\", \"start\": 94200001,  \"end\": 95800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q32.2\",  \"start\": 95800001,  \"end\": 100900000, \"type\": \"gpos50\"  },\n      { \"id\": \"q32.31\", \"start\": 100900001, \"end\": 102700000, \"type\": \"gneg\"    },\n      { \"id\": \"q32.32\", \"start\": 102700001, \"end\": 103500000, \"type\": \"gpos50\"  },\n      { \"id\": \"q32.33\", \"start\": 103500001, \"end\": 107043718, \"type\": \"gneg\"    }\n    ]\n  },\n  \"15\": {\n    \"size\"  : 101991189,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 17500001, \"end\": 19000000,  \"type\": \"acen\"   },\n      { \"id\": \"p11.2\",  \"start\": 9700001,  \"end\": 17500000,  \"type\": \"gvar\"   },\n      { \"id\": \"p12\",    \"start\": 4200001,  \"end\": 9700000,   \"type\": \"stalk\"  },\n      { \"id\": \"p13\",    \"start\": 1,        \"end\": 4200000,   \"type\": \"gvar\"   },\n      { \"id\": \"q11.1\",  \"start\": 19000001, \"end\": 20500000,  \"type\": \"acen\"   },\n      { \"id\": \"q11.2\",  \"start\": 20500001, \"end\": 25500000,  \"type\": \"gneg\"   },\n      { \"id\": \"q12\",    \"start\": 25500001, \"end\": 27800000,  \"type\": \"gpos50\" },\n      { \"id\": \"q13.1\",  \"start\": 27800001, \"end\": 30000000,  \"type\": \"gneg\"   },\n      { \"id\": \"q13.2\",  \"start\": 30000001, \"end\": 30900000,  \"type\": \"gpos50\" },\n      { \"id\": \"q13.3\",  \"start\": 30900001, \"end\": 33400000,  \"type\": \"gneg\"   },\n      { \"id\": \"q14\",    \"start\": 33400001, \"end\": 39800000,  \"type\": \"gpos75\" },\n      { \"id\": \"q15.1\",  \"start\": 39800001, \"end\": 42500000,  \"type\": \"gneg\"   },\n      { \"id\": \"q15.2\",  \"start\": 42500001, \"end\": 43300000,  \"type\": \"gpos25\" },\n      { \"id\": \"q15.3\",  \"start\": 43300001, \"end\": 44500000,  \"type\": \"gneg\"   },\n      { \"id\": \"q21.1\",  \"start\": 44500001, \"end\": 49200000,  \"type\": \"gpos75\" },\n      { \"id\": \"q21.2\",  \"start\": 49200001, \"end\": 52600000,  \"type\": \"gneg\"   },\n      { \"id\": \"q21.3\",  \"start\": 52600001, \"end\": 58800000,  \"type\": \"gpos75\" },\n      { \"id\": \"q22.1\",  \"start\": 58800001, \"end\": 59000000,  \"type\": \"gneg\"   },\n      { \"id\": \"q22.2\",  \"start\": 59000001, \"end\": 63400000,  \"type\": \"gpos25\" },\n      { \"id\": \"q22.31\", \"start\": 63400001, \"end\": 66900000,  \"type\": \"gneg\"   },\n      { \"id\": \"q22.32\", \"start\": 66900001, \"end\": 67000000,  \"type\": \"gpos25\" },\n      { \"id\": \"q22.33\", \"start\": 67000001, \"end\": 67200000,  \"type\": \"gneg\"   },\n      { \"id\": \"q23\",    \"start\": 67200001, \"end\": 72400000,  \"type\": \"gpos25\" },\n      { \"id\": \"q24.1\",  \"start\": 72400001, \"end\": 74900000,  \"type\": \"gneg\"   },\n      { \"id\": \"q24.2\",  \"start\": 74900001, \"end\": 76300000,  \"type\": \"gpos25\" },\n      { \"id\": \"q24.3\",  \"start\": 76300001, \"end\": 78000000,  \"type\": \"gneg\"   },\n      { \"id\": \"q25.1\",  \"start\": 78000001, \"end\": 81400000,  \"type\": \"gpos50\" },\n      { \"id\": \"q25.2\",  \"start\": 81400001, \"end\": 84700000,  \"type\": \"gneg\"   },\n      { \"id\": \"q25.3\",  \"start\": 84700001, \"end\": 88500000,  \"type\": \"gpos50\" },\n      { \"id\": \"q26.1\",  \"start\": 88500001, \"end\": 93800000,  \"type\": \"gneg\"   },\n      { \"id\": \"q26.2\",  \"start\": 93800001, \"end\": 98000000,  \"type\": \"gpos50\" },\n      { \"id\": \"q26.3\",  \"start\": 98000001, \"end\": 101991189, \"type\": \"gneg\"   }\n    ]\n  },\n  \"16\": {\n    \"size\"  : 90338345,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 35300001, \"end\": 36800000, \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 28500001, \"end\": 35300000, \"type\": \"gneg\"    },\n      { \"id\": \"p12.1\",  \"start\": 24200001, \"end\": 28500000, \"type\": \"gpos50\"  },\n      { \"id\": \"p12.2\",  \"start\": 21200001, \"end\": 24200000, \"type\": \"gneg\"    },\n      { \"id\": \"p12.3\",  \"start\": 16700001, \"end\": 21200000, \"type\": \"gpos50\"  },\n      { \"id\": \"p13.11\", \"start\": 14700001, \"end\": 16700000, \"type\": \"gneg\"    },\n      { \"id\": \"p13.12\", \"start\": 12500001, \"end\": 14700000, \"type\": \"gpos50\"  },\n      { \"id\": \"p13.13\", \"start\": 10400001, \"end\": 12500000, \"type\": \"gneg\"    },\n      { \"id\": \"p13.2\",  \"start\": 7800001,  \"end\": 10400000, \"type\": \"gpos50\"  },\n      { \"id\": \"p13.3\",  \"start\": 1,        \"end\": 7800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 36800001, \"end\": 38400000, \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 38400001, \"end\": 47000000, \"type\": \"gvar\"    },\n      { \"id\": \"q12.1\",  \"start\": 47000001, \"end\": 52600000, \"type\": \"gneg\"    },\n      { \"id\": \"q12.2\",  \"start\": 52600001, \"end\": 56000000, \"type\": \"gpos50\"  },\n      { \"id\": \"q13\",    \"start\": 56000001, \"end\": 57300000, \"type\": \"gneg\"    },\n      { \"id\": \"q21\",    \"start\": 57300001, \"end\": 66600000, \"type\": \"gpos100\" },\n      { \"id\": \"q22.1\",  \"start\": 66600001, \"end\": 70800000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 70800001, \"end\": 72800000, \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 72800001, \"end\": 74100000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.1\",  \"start\": 74100001, \"end\": 79200000, \"type\": \"gpos75\"  },\n      { \"id\": \"q23.2\",  \"start\": 79200001, \"end\": 81600000, \"type\": \"gneg\"    },\n      { \"id\": \"q23.3\",  \"start\": 81600001, \"end\": 84100000, \"type\": \"gpos50\"  },\n      { \"id\": \"q24.1\",  \"start\": 84100001, \"end\": 87000000, \"type\": \"gneg\"    },\n      { \"id\": \"q24.2\",  \"start\": 87000001, \"end\": 88700000, \"type\": \"gpos25\"  },\n      { \"id\": \"q24.3\",  \"start\": 88700001, \"end\": 90338345, \"type\": \"gneg\"    }\n    ]\n  },\n  \"17\": {\n    \"size\"  : 83257441,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 22700001, \"end\": 25100000, \"type\": \"acen\"   },\n      { \"id\": \"p11.2\",  \"start\": 16100001, \"end\": 22700000, \"type\": \"gneg\"   },\n      { \"id\": \"p12\",    \"start\": 10800001, \"end\": 16100000, \"type\": \"gpos75\" },\n      { \"id\": \"p13.1\",  \"start\": 6500001,  \"end\": 10800000, \"type\": \"gneg\"   },\n      { \"id\": \"p13.2\",  \"start\": 3400001,  \"end\": 6500000,  \"type\": \"gpos50\" },\n      { \"id\": \"p13.3\",  \"start\": 1,        \"end\": 3400000,  \"type\": \"gneg\"   },\n      { \"id\": \"q11.1\",  \"start\": 25100001, \"end\": 27400000, \"type\": \"acen\"   },\n      { \"id\": \"q11.2\",  \"start\": 27400001, \"end\": 33500000, \"type\": \"gneg\"   },\n      { \"id\": \"q12\",    \"start\": 33500001, \"end\": 39800000, \"type\": \"gpos50\" },\n      { \"id\": \"q21.1\",  \"start\": 39800001, \"end\": 40200000, \"type\": \"gneg\"   },\n      { \"id\": \"q21.2\",  \"start\": 40200001, \"end\": 42800000, \"type\": \"gpos25\" },\n      { \"id\": \"q21.31\", \"start\": 42800001, \"end\": 46800000, \"type\": \"gneg\"   },\n      { \"id\": \"q21.32\", \"start\": 46800001, \"end\": 49300000, \"type\": \"gpos25\" },\n      { \"id\": \"q21.33\", \"start\": 49300001, \"end\": 52100000, \"type\": \"gneg\"   },\n      { \"id\": \"q22\",    \"start\": 52100001, \"end\": 59500000, \"type\": \"gpos75\" },\n      { \"id\": \"q23.1\",  \"start\": 59500001, \"end\": 60200000, \"type\": \"gneg\"   },\n      { \"id\": \"q23.2\",  \"start\": 60200001, \"end\": 63100000, \"type\": \"gpos75\" },\n      { \"id\": \"q23.3\",  \"start\": 63100001, \"end\": 64600000, \"type\": \"gneg\"   },\n      { \"id\": \"q24.1\",  \"start\": 64600001, \"end\": 66200000, \"type\": \"gpos50\" },\n      { \"id\": \"q24.2\",  \"start\": 66200001, \"end\": 69100000, \"type\": \"gneg\"   },\n      { \"id\": \"q24.3\",  \"start\": 69100001, \"end\": 72900000, \"type\": \"gpos75\" },\n      { \"id\": \"q25.1\",  \"start\": 72900001, \"end\": 76800000, \"type\": \"gneg\"   },\n      { \"id\": \"q25.2\",  \"start\": 76800001, \"end\": 77200000, \"type\": \"gpos25\" },\n      { \"id\": \"q25.3\",  \"start\": 77200001, \"end\": 83257441, \"type\": \"gneg\"   }\n    ]\n  },\n  \"18\": {\n    \"size\"  : 80373285,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 15400001, \"end\": 18500000, \"type\": \"acen\"    },\n      { \"id\": \"p11.21\", \"start\": 10900001, \"end\": 15400000, \"type\": \"gneg\"    },\n      { \"id\": \"p11.22\", \"start\": 8500001,  \"end\": 10900000, \"type\": \"gpos25\"  },\n      { \"id\": \"p11.23\", \"start\": 7200001,  \"end\": 8500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p11.31\", \"start\": 2900001,  \"end\": 7200000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p11.32\", \"start\": 1,        \"end\": 2900000,  \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 18500001, \"end\": 21500000, \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 21500001, \"end\": 27500000, \"type\": \"gneg\"    },\n      { \"id\": \"q12.1\",  \"start\": 27500001, \"end\": 35100000, \"type\": \"gpos100\" },\n      { \"id\": \"q12.2\",  \"start\": 35100001, \"end\": 39500000, \"type\": \"gneg\"    },\n      { \"id\": \"q12.3\",  \"start\": 39500001, \"end\": 45900000, \"type\": \"gpos75\"  },\n      { \"id\": \"q21.1\",  \"start\": 45900001, \"end\": 50700000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.2\",  \"start\": 50700001, \"end\": 56200000, \"type\": \"gpos75\"  },\n      { \"id\": \"q21.31\", \"start\": 56200001, \"end\": 58600000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.32\", \"start\": 58600001, \"end\": 61300000, \"type\": \"gpos50\"  },\n      { \"id\": \"q21.33\", \"start\": 61300001, \"end\": 63900000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.1\",  \"start\": 63900001, \"end\": 69100000, \"type\": \"gpos100\" },\n      { \"id\": \"q22.2\",  \"start\": 69100001, \"end\": 71000000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.3\",  \"start\": 71000001, \"end\": 75400000, \"type\": \"gpos25\"  },\n      { \"id\": \"q23\",    \"start\": 75400001, \"end\": 80373285, \"type\": \"gneg\"    }\n    ]\n  },\n  \"19\": {\n    \"size\"  : 58617616,\n    \"bands\" : [\n      { \"id\": \"p11\",    \"start\": 24200001, \"end\": 26200000, \"type\": \"acen\"   },\n      { \"id\": \"p12\",    \"start\": 19900001, \"end\": 24200000, \"type\": \"gvar\"   },\n      { \"id\": \"p13.11\", \"start\": 16100001, \"end\": 19900000, \"type\": \"gneg\"   },\n      { \"id\": \"p13.12\", \"start\": 13800001, \"end\": 16100000, \"type\": \"gpos25\" },\n      { \"id\": \"p13.13\", \"start\": 12600001, \"end\": 13800000, \"type\": \"gneg\"   },\n      { \"id\": \"p13.2\",  \"start\": 6900001,  \"end\": 12600000, \"type\": \"gpos25\" },\n      { \"id\": \"p13.3\",  \"start\": 1,        \"end\": 6900000,  \"type\": \"gneg\"   },\n      { \"id\": \"q11\",    \"start\": 26200001, \"end\": 28100000, \"type\": \"acen\"   },\n      { \"id\": \"q12\",    \"start\": 28100001, \"end\": 31900000, \"type\": \"gvar\"   },\n      { \"id\": \"q13.11\", \"start\": 31900001, \"end\": 35100000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.12\", \"start\": 35100001, \"end\": 37800000, \"type\": \"gpos25\" },\n      { \"id\": \"q13.13\", \"start\": 37800001, \"end\": 38200000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.2\",  \"start\": 38200001, \"end\": 42900000, \"type\": \"gpos25\" },\n      { \"id\": \"q13.31\", \"start\": 42900001, \"end\": 44700000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.32\", \"start\": 44700001, \"end\": 47500000, \"type\": \"gpos25\" },\n      { \"id\": \"q13.33\", \"start\": 47500001, \"end\": 50900000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.41\", \"start\": 50900001, \"end\": 53100000, \"type\": \"gpos25\" },\n      { \"id\": \"q13.42\", \"start\": 53100001, \"end\": 55800000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.43\", \"start\": 55800001, \"end\": 58617616, \"type\": \"gpos25\" }\n    ]\n  },\n  \"20\": {\n    \"size\"  : 64444167,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 25700001, \"end\": 28100000, \"type\": \"acen\"   },\n      { \"id\": \"p11.21\", \"start\": 22300001, \"end\": 25700000, \"type\": \"gneg\"   },\n      { \"id\": \"p11.22\", \"start\": 21300001, \"end\": 22300000, \"type\": \"gpos25\" },\n      { \"id\": \"p11.23\", \"start\": 17900001, \"end\": 21300000, \"type\": \"gneg\"   },\n      { \"id\": \"p12.1\",  \"start\": 12000001, \"end\": 17900000, \"type\": \"gpos75\" },\n      { \"id\": \"p12.2\",  \"start\": 9200001,  \"end\": 12000000, \"type\": \"gneg\"   },\n      { \"id\": \"p12.3\",  \"start\": 5100001,  \"end\": 9200000,  \"type\": \"gpos75\" },\n      { \"id\": \"p13\",    \"start\": 1,        \"end\": 5100000,  \"type\": \"gneg\"   },\n      { \"id\": \"q11.1\",  \"start\": 28100001, \"end\": 30400000, \"type\": \"acen\"   },\n      { \"id\": \"q11.21\", \"start\": 30400001, \"end\": 33500000, \"type\": \"gneg\"   },\n      { \"id\": \"q11.22\", \"start\": 33500001, \"end\": 35800000, \"type\": \"gpos25\" },\n      { \"id\": \"q11.23\", \"start\": 35800001, \"end\": 39000000, \"type\": \"gneg\"   },\n      { \"id\": \"q12\",    \"start\": 39000001, \"end\": 43100000, \"type\": \"gpos75\" },\n      { \"id\": \"q13.11\", \"start\": 43100001, \"end\": 43500000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.12\", \"start\": 43500001, \"end\": 47800000, \"type\": \"gpos25\" },\n      { \"id\": \"q13.13\", \"start\": 47800001, \"end\": 51200000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.2\",  \"start\": 51200001, \"end\": 56400000, \"type\": \"gpos75\" },\n      { \"id\": \"q13.31\", \"start\": 56400001, \"end\": 57800000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.32\", \"start\": 57800001, \"end\": 59700000, \"type\": \"gpos50\" },\n      { \"id\": \"q13.33\", \"start\": 59700001, \"end\": 64444167, \"type\": \"gneg\"   }\n    ]\n  },\n  \"21\": {\n    \"size\"  : 46709983,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 10900001, \"end\": 12000000, \"type\": \"acen\"    },\n      { \"id\": \"p11.2\",  \"start\": 7000001,  \"end\": 10900000, \"type\": \"gvar\"    },\n      { \"id\": \"p12\",    \"start\": 3100001,  \"end\": 7000000,  \"type\": \"stalk\"   },\n      { \"id\": \"p13\",    \"start\": 1,        \"end\": 3100000,  \"type\": \"gvar\"    },\n      { \"id\": \"q11.1\",  \"start\": 12000001, \"end\": 13000000, \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 13000001, \"end\": 15000000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 15000001, \"end\": 22600000, \"type\": \"gpos100\" },\n      { \"id\": \"q21.2\",  \"start\": 22600001, \"end\": 25500000, \"type\": \"gneg\"    },\n      { \"id\": \"q21.3\",  \"start\": 25500001, \"end\": 30200000, \"type\": \"gpos75\"  },\n      { \"id\": \"q22.11\", \"start\": 30200001, \"end\": 34400000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.12\", \"start\": 34400001, \"end\": 36400000, \"type\": \"gpos50\"  },\n      { \"id\": \"q22.13\", \"start\": 36400001, \"end\": 38300000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 38300001, \"end\": 41200000, \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 41200001, \"end\": 46709983, \"type\": \"gneg\"    }\n    ]\n  },\n  \"22\": {\n    \"size\"  : 50818468,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 13700001, \"end\": 15000000, \"type\": \"acen\"   },\n      { \"id\": \"p11.2\",  \"start\": 9400001,  \"end\": 13700000, \"type\": \"gvar\"   },\n      { \"id\": \"p12\",    \"start\": 4300001,  \"end\": 9400000,  \"type\": \"stalk\"  },\n      { \"id\": \"p13\",    \"start\": 1,        \"end\": 4300000,  \"type\": \"gvar\"   },\n      { \"id\": \"q11.1\",  \"start\": 15000001, \"end\": 17400000, \"type\": \"acen\"   },\n      { \"id\": \"q11.21\", \"start\": 17400001, \"end\": 21700000, \"type\": \"gneg\"   },\n      { \"id\": \"q11.22\", \"start\": 21700001, \"end\": 23100000, \"type\": \"gpos25\" },\n      { \"id\": \"q11.23\", \"start\": 23100001, \"end\": 25500000, \"type\": \"gneg\"   },\n      { \"id\": \"q12.1\",  \"start\": 25500001, \"end\": 29200000, \"type\": \"gpos50\" },\n      { \"id\": \"q12.2\",  \"start\": 29200001, \"end\": 31800000, \"type\": \"gneg\"   },\n      { \"id\": \"q12.3\",  \"start\": 31800001, \"end\": 37200000, \"type\": \"gpos50\" },\n      { \"id\": \"q13.1\",  \"start\": 37200001, \"end\": 40600000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.2\",  \"start\": 40600001, \"end\": 43800000, \"type\": \"gpos50\" },\n      { \"id\": \"q13.31\", \"start\": 43800001, \"end\": 48100000, \"type\": \"gneg\"   },\n      { \"id\": \"q13.32\", \"start\": 48100001, \"end\": 49100000, \"type\": \"gpos50\" },\n      { \"id\": \"q13.33\", \"start\": 49100001, \"end\": 50818468, \"type\": \"gneg\"   }\n    ]\n  },\n  \"X\": {\n    \"size\"  : 156040895,\n    \"bands\" : [\n      { \"id\": \"p11.1\",  \"start\": 58100001,  \"end\": 61000000,  \"type\": \"acen\"    },\n      { \"id\": \"p11.21\", \"start\": 54800001,  \"end\": 58100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p11.22\", \"start\": 50100001,  \"end\": 54800000,  \"type\": \"gpos25\"  },\n      { \"id\": \"p11.23\", \"start\": 47600001,  \"end\": 50100000,  \"type\": \"gneg\"    },\n      { \"id\": \"p11.3\",  \"start\": 42500001,  \"end\": 47600000,  \"type\": \"gpos75\"  },\n      { \"id\": \"p11.4\",  \"start\": 37800001,  \"end\": 42500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.1\",  \"start\": 31500001,  \"end\": 37800000,  \"type\": \"gpos100\" },\n      { \"id\": \"p21.2\",  \"start\": 29300001,  \"end\": 31500000,  \"type\": \"gneg\"    },\n      { \"id\": \"p21.3\",  \"start\": 24900001,  \"end\": 29300000,  \"type\": \"gpos100\" },\n      { \"id\": \"p22.11\", \"start\": 21900001,  \"end\": 24900000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.12\", \"start\": 19200001,  \"end\": 21900000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p22.13\", \"start\": 17400001,  \"end\": 19200000,  \"type\": \"gneg\"    },\n      { \"id\": \"p22.2\",  \"start\": 9600001,   \"end\": 17400000,  \"type\": \"gpos50\"  },\n      { \"id\": \"p22.31\", \"start\": 6100001,   \"end\": 9600000,   \"type\": \"gneg\"    },\n      { \"id\": \"p22.32\", \"start\": 4400001,   \"end\": 6100000,   \"type\": \"gpos50\"  },\n      { \"id\": \"p22.33\", \"start\": 1,         \"end\": 4400000,   \"type\": \"gneg\"    },\n      { \"id\": \"q11.1\",  \"start\": 61000001,  \"end\": 63800000,  \"type\": \"acen\"    },\n      { \"id\": \"q11.2\",  \"start\": 63800001,  \"end\": 65400000,  \"type\": \"gneg\"    },\n      { \"id\": \"q12\",    \"start\": 65400001,  \"end\": 68500000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.1\",  \"start\": 68500001,  \"end\": 73000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q13.2\",  \"start\": 73000001,  \"end\": 74700000,  \"type\": \"gpos50\"  },\n      { \"id\": \"q13.3\",  \"start\": 74700001,  \"end\": 76800000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.1\",  \"start\": 76800001,  \"end\": 85400000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.2\",  \"start\": 85400001,  \"end\": 87000000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.31\", \"start\": 87000001,  \"end\": 92700000,  \"type\": \"gpos100\" },\n      { \"id\": \"q21.32\", \"start\": 92700001,  \"end\": 94300000,  \"type\": \"gneg\"    },\n      { \"id\": \"q21.33\", \"start\": 94300001,  \"end\": 99100000,  \"type\": \"gpos75\"  },\n      { \"id\": \"q22.1\",  \"start\": 99100001,  \"end\": 103300000, \"type\": \"gneg\"    },\n      { \"id\": \"q22.2\",  \"start\": 103300001, \"end\": 104500000, \"type\": \"gpos50\"  },\n      { \"id\": \"q22.3\",  \"start\": 104500001, \"end\": 109400000, \"type\": \"gneg\"    },\n      { \"id\": \"q23\",    \"start\": 109400001, \"end\": 117400000, \"type\": \"gpos75\"  },\n      { \"id\": \"q24\",    \"start\": 117400001, \"end\": 121800000, \"type\": \"gneg\"    },\n      { \"id\": \"q25\",    \"start\": 121800001, \"end\": 129500000, \"type\": \"gpos100\" },\n      { \"id\": \"q26.1\",  \"start\": 129500001, \"end\": 131300000, \"type\": \"gneg\"    },\n      { \"id\": \"q26.2\",  \"start\": 131300001, \"end\": 134500000, \"type\": \"gpos25\"  },\n      { \"id\": \"q26.3\",  \"start\": 134500001, \"end\": 138900000, \"type\": \"gneg\"    },\n      { \"id\": \"q27.1\",  \"start\": 138900001, \"end\": 141200000, \"type\": \"gpos75\"  },\n      { \"id\": \"q27.2\",  \"start\": 141200001, \"end\": 143000000, \"type\": \"gneg\"    },\n      { \"id\": \"q27.3\",  \"start\": 143000001, \"end\": 148000000, \"type\": \"gpos100\" },\n      { \"id\": \"q28\",    \"start\": 148000001, \"end\": 156040895, \"type\": \"gneg\"    }\n    ]\n  },\n  \"Y\": {\n    \"size\"  : 57227415,\n    \"bands\" : [\n      { \"id\": \"p11.1\",   \"start\": 10300001, \"end\": 10400000, \"type\": \"acen\"   },\n      { \"id\": \"p11.2\",   \"start\": 600001,   \"end\": 10300000, \"type\": \"gneg\"   },\n      { \"id\": \"p11.31\",  \"start\": 300001,   \"end\": 600000,   \"type\": \"gpos50\" },\n      { \"id\": \"p11.32\",  \"start\": 1,        \"end\": 300000,   \"type\": \"gneg\"   },\n      { \"id\": \"q11.1\",   \"start\": 10400001, \"end\": 10600000, \"type\": \"acen\"   },\n      { \"id\": \"q11.21\",  \"start\": 10600001, \"end\": 12400000, \"type\": \"gneg\"   },\n      { \"id\": \"q11.221\", \"start\": 12400001, \"end\": 17100000, \"type\": \"gpos50\" },\n      { \"id\": \"q11.222\", \"start\": 17100001, \"end\": 19600000, \"type\": \"gneg\"   },\n      { \"id\": \"q11.223\", \"start\": 19600001, \"end\": 23800000, \"type\": \"gpos50\" },\n      { \"id\": \"q11.23\",  \"start\": 23800001, \"end\": 26600000, \"type\": \"gneg\"   },\n      { \"id\": \"q12\",     \"start\": 26600001, \"end\": 57227415, \"type\": \"gvar\"   }\n    ]\n  },\n  \"MT\": {\n    \"size\"  : 16569,\n    \"bands\" : [\n      { \"start\": 1, \"end\": 16569 }\n    ]\n  }\n};","(function () {\n  var BWReader = function (data, callback) {\n    // constants: bigwig/bigbed file header signatures (magic numbers) (32 bit) , can be swapped ( big-endian | BE )\n    var BIG_WIG_MAGIC    = 0x888FFC26;\n    var BIG_WIG_MAGIC_BE = 0x26FC8F88;\n\n    var BIG_BED_MAGIC    = 0x8789F2EB;\n    var BIG_BED_MAGIC_BE = 0xEBF28987;\n\n    var CIRTREE_MAGIC = 0x78ca8c91;\n    var IDXTREE_MAGIC = 0x2468ace0;\n\n    // type of file converted to bigwig bedgraph |variable step wiggle | fixed step wiggle\n    var BIG_WIG_TYPE_GRAPH = 1;\n    var BIG_WIG_TYPE_VSTEP = 2;\n    var BIG_WIG_TYPE_FSTEP = 3;\n\n    // bigbed data color regex\n    var BED_COLOR_REGEXP = new RegExp(\"^[0-9]+,[0-9]+,[0-9]+\");\n\n    var M1 = 256;\n    var M2 = 256*256;\n    var M3 = 256*256*256;\n    var M4 = 256*256*256*256;\n\n    var bbi = {\n      fetchedData: new RTree()\n    };\n\n    function init() {\n      checkSignature();\n    }\n\n    function getData(start, length, cb) {\n      var end     = start + length;\n      var fetched = bbi.fetchedData.search({ x: start, w: length, y: 0, h: 1 }).filter(function (d) { return d[0] <= start && d[1] >= end; });\n\n      if (fetched.length == 1) {\n        cb(fetched[0][2].slice(start - fetched[0][0], start + length));\n      } else {\n        data.slice(start, length).fetch(function (d) {\n          bbi.fetchedData.insert({ x: start, w: length, y: 0, h: 1 }, [ start, start + length, d ]);\n          cb(d);\n        });\n      }\n    }\n\n    function checkSignature() {\n      getData(0, 512, function (header) {\n        var ba    = new Uint8Array(header);\n        var sa    = new Uint16Array(header);\n        var la    = new Uint32Array(header);\n        var magic = la[0];\n        var error, reduction, dataOffset, indexOffset;\n\n        if (magic === BIG_WIG_MAGIC) {\n          bbi.type = 'bigwig';\n        } else if (magic === BIG_BED_MAGIC) {\n          bbi.type = 'bigbed';\n        } else if (magic === BIG_WIG_MAGIC_BE || magic === BIG_BED_MAGIC_BE) {\n          error = 'big-endian files not supported yet!';\n        } else{\n          error = 'unsupported file format';\n        }\n\n        if (error) {\n          callback(null, error);\n        }\n\n        bbi.version             = sa[2];\n        bbi.numZoomLevels       = sa[3];\n        bbi.chromTreeOffset     = read64Bit(ba, 8);\n        bbi.unzoomedDataOffset  = read64Bit(ba, 16);\n        bbi.unzoomedIndexOffset = read64Bit(ba, 24);\n        bbi.fieldCount          = sa[16];\n        bbi.definedFieldCount   = sa[17];\n        bbi.asOffset            = read64Bit(ba, 36);\n        bbi.totalSummaryOffset  = read64Bit(ba, 44);\n        bbi.uncompressBufSize   = la[13];\n        bbi.extHeaderOffset     = read64Bit(ba, 56);\n        bbi.compressed          = bbi.uncompressBufSize  > 0;\n        bbi.summary             = bbi.totalSummaryOffset > 0;\n        bbi.extHeader           = bbi.extHeaderOffset    > 0;\n        bbi.zoomHeaders         = [];\n\n        for (var i = 0; i < bbi.numZoomLevels; i++) {\n          reduction   = la[16 + 6*i];\n          dataOffset  = read64Bit(ba, 72 + 24*i);\n          indexOffset = read64Bit(ba, 80 + 24*i);\n\n          bbi.zoomHeaders.push({\n            reductionLevel : reduction,\n            dataOffset     : dataOffset,\n            indexOffset    : indexOffset\n          });\n        }\n\n        readAutoSQL(readChromTree); // reading autoSQL passing next task as callback\n      });\n    }\n\n    // autoSQL could be present in some bigbed files\n    function readAutoSQL(cb) {\n      if (bbi.asOffset === 0) {\n        cb(); // no autoSQL present\n      } else {\n        // autoSQL present, need to parse\n        getData(bbi.asOffset, 2048, function (d) {\n          var ba = new Uint8Array(d);\n          var s  = '';\n\n          for (var i = 0; i < ba.length; i++) {\n            if (ba[i] === 0) {\n              break;\n            }\n\n            s += String.fromCharCode(ba[i]);\n          }\n\n          var header_re   = /(\\w+)\\s+(\\w+)\\s+(\"([^\"]+)\")?\\s*\\(\\s*/;\n          var field_re    = /([\\w\\[\\]]+)\\s+(\\w+)\\s*;\\s*(\"([^\"]+)\")?\\s*/g;\n          var headerMatch = header_re.exec(s);\n\n          if (headerMatch) {\n            var as = {\n              declType : headerMatch[1],\n              name     : headerMatch[2],\n              comment  : headerMatch[4],\n              fields   : []\n            };\n\n            s = s.substring(headerMatch[0]);\n\n            for (var m = field_re.exec(s); m !== null; m = field_re.exec(s)) {\n              as.fields.push({\n                type    : m[1],\n                name    : m[2],\n                comment : m[4]\n              });\n            }\n\n            bbi.schema = as;\n          }\n\n          cb();\n        });\n      }\n    }\n\n    // reading B+ tree which maps chrom names to ids used in R-tree\n    function readChromTree() {\n      var len = bbi.unzoomedDataOffset - bbi.chromTreeOffset;\n          len = len + (4 - len%4);\n\n      getData(bbi.chromTreeOffset, len, function (d) {\n        var ba    = new Uint8Array(d);\n        var sa    = new Uint16Array(d);\n        var la    = new Uint32Array(d);\n        var magic = la[0];\n        var error;\n\n        function readChromTreeLeaf(nodeOffset) {\n          // padding 8 byte\n          var children = sa[(nodeOffset/2) + 1];\n          var offset   = nodeOffset + 4;\n          var chrom, i, c, idx, len;\n\n          while (children > 0) {\n            children--;\n            chrom = '';\n\n            for (i = 0; i < bbi.bpTree.keySize; i++) {\n              c = ba[offset + i];\n\n              if (c !== 0) {\n                chrom += String.fromCharCode(c);\n              }\n            }\n\n            offset += bbi.bpTree.keySize;\n\n            idx = (ba[offset + 3] << 24) | (ba[offset + 2] << 16) | (ba[offset + 1] << 8) | (ba[offset + 0]);\n            len = (ba[offset + 7] << 24) | (ba[offset + 6] << 16) | (ba[offset + 5] << 8) | (ba[offset + 4]);\n\n            offset += 8;\n\n            bbi.chroms[idx]  = chrom;\n            bbi.lengths[idx] = len;\n          }\n        }\n\n        if (magic === CIRTREE_MAGIC) {\n          bbi.bpTree = {\n            itemsPerBlock : la[1],\n            keySize       : la[2],\n            valueSize     : la[3],\n            itemCount     : read64Bit(ba, 16)\n          };\n\n          bbi.chroms  = new Array(bbi.bpTree.itemCount);\n          bbi.lengths = new Array(bbi.bpTree.itemCount);\n        } else {\n          error = 'chromosome id B+ tree not found!';\n        }\n\n        if (error) {\n          callback(null, error);\n        } else {\n          readChromTreeLeaf(32);\n        }\n\n        readRTreeIndex();\n      });\n    }\n\n    function readRTreeIndex() {\n      getData(bbi.unzoomedIndexOffset, 48, function (d) {\n        var ba    = new Uint8Array(d);\n        var la    = new Uint32Array(d);\n        var magic = la[0];\n\n        if (magic === IDXTREE_MAGIC) {\n          bbi.Rheader = {\n            blockSize     : la[1],\n            nItems        : read64Bit(ba, 8),\n            chrIdxStart   : la[4],\n            baseStart     : la[5],\n            chrIdxEnd     : la[6],\n            baseEnd       : la[7],\n            endFileOffset : read64Bit(ba, 32),\n            nItemsPerSlot : la[10]\n          };\n\n          bbi.rootOffset = bbi.unzoomedIndexOffset + 48;\n          bbi.getValues  = getValues;\n\n          callback(bbi);\n        } else {\n          callback(null, 'R-tree not found!');\n        }\n      });\n    }\n\n    function getRTreeNode(treedata, offset) {\n      var ba       = new Uint8Array(treedata);\n      var sa       = new Uint16Array(treedata);\n      var la       = new Uint32Array(treedata);\n      var children = sa[offset/2 + 1];\n      var lo, i;\n\n      var node = {\n        isLeaf      : ba[offset],\n        children    : children,\n        chrIdxStart : new Array(children),\n        baseStart   : new Array(children),\n        chrIdxEnd   : new Array(children),\n        baseEnd     : new Array(children),\n        dataOffset  : new Array(children),\n        x           : {}\n      };\n\n      if (node.isLeaf) {\n        node.x.size = new Array(children);\n      } else {\n        node.x.child = new Array(children);\n\n        for (i = 0; i < children; i++) {\n          node.x.child[i] = -1;\n        }\n      }\n\n      offset += 4;\n\n      for (i = 0; i < children; i++) {\n        lo = offset / 4;\n\n        node.chrIdxStart[i] = la[lo];\n        node.baseStart[i]   = la[lo + 1];\n        node.chrIdxEnd[i]   = la[lo + 2];\n        node.baseEnd[i]     = la[lo + 3];\n        node.dataOffset[i]  = read64Bit(ba, offset + 16);\n\n        offset += 24;\n\n        if (node.isLeaf) {\n          node.x.size[i] = read64Bit(ba, offset);\n          offset += 8;\n        }\n      }\n\n      return node;\n    }\n\n    function getValues(chrom, start, end, cb) {\n      var vals    = [];\n      var chromid = bbi.chroms.indexOf(chrom);\n\n      if (chromid == -1) {\n        chromid = bbi.chroms.indexOf('chr' + chrom);\n\n        if (chromid == -1) {\n          return cb([], 'chrom not found');\n        }\n      }\n\n      var query = {\n        chrom : chromid,\n        start : start,\n        end   : end\n      };\n\n      function traverseRTree() {\n        var outstanding = 0;\n\n        function fetchRTreeKids(offset, level) {\n          outstanding += offset.length;\n\n          var min         = offset[0];\n          var maxNodeSize = 4 + bbi.Rheader.blockSize*32;\n          var max         = offset[offset.length - 1] + maxNodeSize;\n\n          getData(min, max - min, function (treedata) {\n            // traverse kids\n            for (var i = 0; i < offset.length; i++) {\n              traverseRTreeKids(treedata, offset[i] - min, level);\n\n              if (--outstanding === 0) {\n                fetchBlocks();\n              }\n            }\n          });\n        }\n\n        function traverseRTreeKids(treedata, offset, level) {\n          var node     = getRTreeNode(treedata, offset);\n          var overlaps = findOverlaps(node);\n          var i;\n\n          if (node.isLeaf) {\n            for (i = 0; i < overlaps.length; i++){\n              vals.push({\n                offset : node.dataOffset[overlaps[i]],\n                size   : node.x.size[overlaps[i]]\n              });\n            }\n\n            return [];\n          } else {\n            fetchRTreeKids(overlaps.map(function (o) { return node.dataOffset[o]; }), level + 1);\n          }\n        }\n\n        function findOverlaps(node) {\n          var children = node.children;\n          var overlaps = [];\n\n          for (var i = 0; i < children; i++) {\n            var startChrom = node.chrIdxStart[i];\n            var startBase  = node.baseStart[i];\n            var endChrom   = node.chrIdxEnd[i];\n            var endBase    = node.baseEnd[i];\n\n            if (\n              ((startChrom < query.chrom) || (startChrom == query.chrom && startBase <= query.end)) &&\n              ((endChrom   > query.chrom) || (endChrom   == query.chrom && endBase   >= query.start))\n            ) {\n              overlaps.push(i);\n            }\n          }\n\n          return overlaps;\n        }\n\n        fetchRTreeKids([bbi.rootOffset], 1);\n      }\n\n      function fetchBlocks() {\n        vals.sort(function (b0, b1) {\n          return (b0.offset | 0) - (b1.offset | 0);\n        });\n\n        if (vals.length === 0) {\n          return getBlocks();\n        }\n\n        var totalSize = 0;\n        var base      = vals[0].offset;\n\n        for (var i = 0; i < vals.length; i++) {\n          totalSize += vals[i].size;\n        }\n\n        getData(base, totalSize, function (buffer) {\n          var ioffset = 0;\n          var bi      = 0;\n          var fb, blockData;\n\n          while (ioffset < totalSize) {\n            fb = vals[bi];\n\n            if (bbi.uncompressBufSize > 0) {\n              blockData = dallianceLib.inflateBuffer(buffer, ioffset + 2, fb.size - 2);\n            } else {\n              blockData = buffer.slice(ioffset, ioffset + fb.size);\n            }\n\n            vals[bi].data = blockData;\n            ioffset      += fb.size;\n            bi++;\n          }\n\n          getBlocks();\n        });\n      }\n\n      function getBlocks() {\n        var parser = bbi.type == 'bigwig' ? WiggleParser : bbi.type == 'bigbed' ? BEDParser : false;\n        var result = [];\n\n        if (parser && vals.length) {\n          for (var i = 0; i < vals.length; i++) {\n            result = result.concat(parser(vals[i].data, query));\n          }\n        }\n\n        cb(result);\n      }\n\n      traverseRTree();\n    }\n\n    function WiggleParser(data, query) {\n      var arr        = [];\n      var ba         = new Uint8Array(data);\n      var sa         = new Int16Array(data);\n      var la         = new Int32Array(data);\n      var fa         = new Float32Array(data);\n      var chromId    = la[0];\n      var chr        = parseInt(bbi.chroms[chromId].replace('chr', ''), 10);\n      var blockStart = la[1] + 1;\n      var itemStep   = la[3];\n      var itemSpan   = la[4];\n      var blockType  = ba[20];\n      var itemCount  = sa[11];\n      var i, start, end, score;\n\n      if (blockType === BIG_WIG_TYPE_FSTEP) { // fixedStep wiggle\n        for (i = 0; i < itemCount; i++) {\n          start = blockStart + i*itemStep;\n          end   = start + itemSpan - 1;\n          score = fa[i + 6];\n\n          if (chromId == query.chrom) {\n            arr.push({\n              chr    : chr,\n              start  : start,\n              end    : end,\n              height : score\n            });\n          }\n        }\n      } else if (blockType === BIG_WIG_TYPE_VSTEP) { // variable step wiggle\n        for (i = 0; i < itemCount; i++) {\n          start = la[i*2 + 6] + 1;\n          end   = start + itemSpan - 1;\n          score = fa[i*2 + 7];\n\n          if (chromId == query.chrom) {\n            arr.push({\n              chr    : chr,\n              start  : start,\n              end    : end,\n              height : score\n            });\n          }\n        }\n      } else if (blockType === BIG_WIG_TYPE_GRAPH) { // bedGraph\n        for (i = 0; i < itemCount; i++) {\n          start = la[i*3 + 6] + 1;\n          end   = la[i*3 + 7];\n          score = fa[i*3 + 8];\n\n          if (start > end) {\n            start = end;\n          }\n\n          if (chromId == query.chrom) {\n            arr.push({\n              chr    : chr,\n              start  : start,\n              end    : end,\n              height : score\n            });\n          }\n        }\n      }\n\n      return arr;\n    }\n\n    function BEDParser(data, query) {\n      var arr      = [];\n      var ba       = new Uint8Array(data);\n      var la       = new Int32Array(data);\n      var offset   = 0;\n      var bbRecord, ch, rest;\n\n      while (offset < la.length) {\n        bbRecord = {\n          chromid : la[offset],\n          chr     : bbi.chroms[la[offset]],\n          start   : la[offset + 1],\n          end     : la[offset + 2]\n        };\n\n        offset += 12;\n\n        while (true) {\n          ch = ba[offset++];\n\n          if (ch !== 0) {\n            rest += String.fromCharCode(ch);\n          } else {\n            break;\n          }\n        }\n\n        if (bbRecord.chromid === query.chrom) {\n          arr.push([ bbRecord.chr, bbRecord.start, bbRecord.end, rest ].join('\\t'));\n        }\n      }\n\n      return arr;\n    }\n\n    // reads 8 bytes from data\n    function read64Bit(ba, o) {\n      var val = ba[o] + ba[o+1]*M1 + ba[o+2]*M2 + ba[o+3]*M3 + ba[o+4]*M4;\n      return val;\n    }\n\n    function readFloat(ba, o) {\n      var a = new Uint8Array([ ba[o], ba[o+1], ba[o+2], ba[o+3] ]);\n      var b = a.buffer;\n      var c = new Float32Array(b);\n      return c[0];\n    }\n\n    // reads 4 bytes from data\n    function read32Bit(ba, o) {\n      var a = ba[o];\n      var b = ba[o+1];\n      var c = ba[o+2];\n      var d = ba[o+3];\n      var r = (a | ((b << 8) >>> 0) | ((c << 16) >>> 0) | ((d << 24) >>> 0)) >>> 0;\n      return r;\n    }\n\n     // reads 2 bytes from data\n    function read16Bit(ba, o) {\n      var r = ba[o] | (ba[o+1] << 8);\n      return r;\n    }\n\n    // reads 1 byte from data\n    function read8Bit(ba, o) {\n      return ba[o];\n    }\n\n    init();\n  };\n\n  window.BWReader = BWReader;\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = BWReader;\n  }\n})();\n","/*\n  Based on Base.js 1.1a (c) 2006-2010, Dean Edwards\n  Updated to pass JSHint and converted into a module by Kenneth Powers\n  License: http://www.opensource.org/licenses/mit-license.php\n*/\n/*global define:true module:true*/\n/*jshint eqeqeq:true*/\n(function (name, global, definition) {\n  if (typeof module !== 'undefined') {\n    module.exports = definition();\n  } else if (typeof define !== 'undefined' && typeof define.amd === 'object') {\n    define(definition);\n  } else {\n    global[name] = definition();\n  }\n})('Base', this, function () {\n  // Base Object\n  var Base = function () {};\n\n  // Implementation\n  Base.extend = function (_instance, _static) { // subclass\n    var extend = Base.prototype.extend;\n    // build the prototype\n    Base._prototyping = true;\n    var proto = new this();\n    extend.call(proto, _instance);\n    proto.base = function () {\n      // call this method from any other method to invoke that method's ancestor\n    };\n    delete Base._prototyping;\n    // create the wrapper for the constructor function\n    //var constructor = proto.constructor.valueOf(); //-dean\n    var constructor = proto.constructor;\n    var klass = proto.constructor = function () {\n        if (!Base._prototyping) {\n          if (this._constructing || this.constructor === klass) { // instantiation\n            this._constructing = true;\n            constructor.apply(this, arguments);\n            delete this._constructing;\n          } else if (arguments[0] !== null) { // casting\n            return (arguments[0].extend || extend).call(arguments[0], proto);\n          }\n        }\n      };\n    // build the class interface\n    klass.ancestor = this;\n    klass.extend = this.extend;\n    klass.forEach = this.forEach;\n    klass.implement = this.implement;\n    klass.prototype = proto;\n    klass.toString = this.toString;\n    klass.valueOf = function (type) {\n      return (type === 'object') ? klass : constructor.valueOf();\n    };\n    extend.call(klass, _static);\n    // class initialization\n    if (typeof klass.init === 'function') klass.init();\n    return klass;\n  };\n\n  Base.prototype = {\n    extend: function (source, value) {\n      if (arguments.length > 1) { // extending with a name/value pair\n        var ancestor = this[source];\n        if (ancestor && (typeof value === 'function') && // overriding a method?\n        // the valueOf() comparison is to avoid circular references\n        (!ancestor.valueOf || ancestor.valueOf() !== value.valueOf()) && /\\bbase\\b/.test(value)) {\n          // get the underlying method\n          var method = value.valueOf();\n          // override\n          value = function () {\n            var previous = this.base || Base.prototype.base;\n            this.base = ancestor;\n            var returnValue = method.apply(this, arguments);\n            this.base = previous;\n            return returnValue;\n          };\n          // point to the underlying method\n          value.valueOf = function (type) {\n            return (type === 'object') ? value : method;\n          };\n          value.toString = Base.toString;\n        }\n        this[source] = value;\n      } else if (source) { // extending with an object literal\n        var extend = Base.prototype.extend;\n        // if this object has a customized extend method then use it\n        if (!Base._prototyping && typeof this !== 'function') {\n          extend = this.extend || extend;\n        }\n        var proto = {\n          toSource: null\n        };\n        // do the \"toString\" and other methods manually\n        var hidden = ['constructor', 'toString', 'valueOf'];\n        // if we are prototyping then include the constructor\n        for (var i = Base._prototyping ? 0 : 1; i < hidden.length; i++) {\n          var h = hidden[i];\n          if (source[h] !== proto[h])\n            extend.call(this, h, source[h]);\n        }\n        // copy each of the source object's properties to this object\n        for (var key in source) {\n          if (!proto[key]) extend.call(this, key, source[key]);\n        }\n      }\n      return this;\n    }\n  };\n\n  // initialize\n  Base = Base.extend({\n    constructor: function () {\n      this.extend(arguments[0]);\n    }\n  }, {\n    ancestor: Object,\n    version: '1.1',\n    forEach: function (object, block, context) {\n      for (var key in object) {\n        if (this.prototype[key] === undefined) {\n          block.call(context, object[key], key, object);\n        }\n      }\n    },\n    implement: function () {\n      for (var i = 0; i < arguments.length; i++) {\n        if (typeof arguments[i] === 'function') {\n          // if it's a function, call it\n          arguments[i](this.prototype);\n        } else {\n          // add the interface using the extend method\n          this.prototype.extend(arguments[i]);\n        }\n      }\n      return this;\n    },\n    toString: function () {\n      return String(this.valueOf());\n    }\n  });\n\n  // Return Base implementation\n  return Base;\n});\n","(function () {\n  var tabi_fmt = {\n    string0: function (size) {\n      return this.parse(['string', size]).replace(/\\0+$/, '');\n    },\n    header: {\n      magic   : ['string', 4],\n      n_ref   : 'int32',\n      format  : 'int32',\n      col_seq : 'int32',\n      col_beg : 'int32',\n      col_end : 'int32',\n      meta    : 'int32',\n      skip    : 'int32',\n      l_nm    : 'int32',\n      names   : ['string0', function () { return this.current.l_nm; }]\n    },\n    chunk: {\n      cnk_beg: 'uint64',\n      cnk_end: 'uint64'\n    },\n    bin: {\n      bin      : 'uint32',\n      n_chunk  : 'int32',\n      chunkseq : ['array', 'chunk', function () { return this.current.n_chunk; }]\n    },\n    index: {\n      n_bin     : 'int32',\n      binseq    : ['array', 'bin', function () { return this.current.n_bin; }],\n      n_intv    : 'int32',\n      intervseq : ['array', 'uint64', function () { return this.current.n_intv; }]\n    },\n    tabix: {\n      head     : 'header',\n      indexseq : ['array', 'index', function () { return this.current.head.n_ref; }]\n    }\n  };\n\n  var bgzf_hd_fmt = {\n    header: {\n      id1   : 'uint8',\n      id2   : 'uint8',\n      cm    : 'uint8',\n      flg   : 'uint8',\n      mtime : 'uint32',\n      xfl   : 'uint8',\n      os    : 'uint8',\n      xlen  : 'uint16'\n    },\n    subheader: {\n      si1   : 'uint8',\n      si2   : 'uint8',\n      slen  : 'uint16',\n      bsize : 'uint16'\n    },\n    bgzfHd: { head: 'header', subhead: 'subheader' }\n  };\n\n  var hdSize  = 18;\n  var inflate = dallianceLib.inflateBuffer;\n  var _2p16   = 1 << 16;\n\n  var VCFReader = function (vcf, tbi) {\n    this.vcf_data = vcf;\n    this.tbi_data = tbi;\n  };\n\n  VCFReader.prototype.readTabix = function (cb) {\n    var bins2hash = function (binseq) {\n      var hash = {};\n      var i    = 0;\n      var b;\n\n      for (var x in binseq) {\n        b       = binseq[x].bin;\n        hash[b] = i;\n        i++;\n      }\n\n      return hash;\n    };\n\n    var parse_tabix = function (tabix_buffer) {\n      var tabix = new jParser(tabix_buffer, tabi_fmt).parse('tabix');\n\n      tabix.head.names = tabix.head.names.split('\\0');\n      tabix.bhash = {};\n\n      for (var i = 0; i < tabix.head.n_ref; i++){\n        tabix.bhash[i] = bins2hash(tabix.indexseq[i].binseq);\n      }\n\n      cb(tabix);\n    };\n\n    this.inflateRegion(this.tbi_data, 0, 100000000, parse_tabix);\n  };\n\n  VCFReader.prototype.getRecords = function (ref, beg, end, callback) {\n    var records = [];\n    var chunks  = this.getChunks(ref, beg, end);\n    var vcfThis = this;\n\n    if (chunks == -1) {\n      return callback([]);\n    }\n\n    (function loop(x) {\n      if (x < chunks.length) {\n        vcfThis.inflateRegion(vcfThis.vcf_data, chunks[x].start, chunks[x].end, function (record, ebsz) {\n          var last = record.byteLength - ebsz + chunks[x].inner_end;\n          record = vcfThis.buffer2String(record).slice(chunks[x].inner_start, last);\n\n          if (record.length > 0) {\n            record = record.split('\\n').filter(function (rec) {\n              if (rec.length > 0) {\n                var n = parseInt(rec.split('\\t')[1]);\n                return ((beg <= n) && (n <= end));\n              }\n            }).join('\\n');\n\n            records.push(record);\n          }\n\n          loop(++x);\n        });\n      } else {\n        callback(records.join('\\n'));\n      }\n    })(0);\n  };\n\n  VCFReader.prototype.getChunks = function (ref, beg, end) {\n    var tbi     = this.tabix;\n    var vcfThis = this;\n\n    ref = tbi.head.names.indexOf(ref.toString());\n\n    if (ref == -1) {\n      return -1;\n    }\n\n    var bids  = this.reg2bins(beg, end + 1).filter(function (x) { return typeof tbi.bhash[ref][x] != 'undefined'; });\n    var bcnks = bids.map(function (x) { return vcfThis.bin2Ranges(tbi, ref, x); });\n    var cnks  = bcnks.reduce(function (V, ranges) {\n      ranges.forEach(function (item) { V.push(item); });\n      return V;\n    }, []);\n\n    cnks = this.remove_duplicates(cnks);\n\n    return cnks;\n  };\n\n  VCFReader.prototype.inflateRegion = function (d, beg, end, cbfn) {\n    var blocks  = [];\n    var vcfThis = this;\n\n    var cb = function (block, nextBlockOffset) {\n      blocks.push(block);\n\n      if (nextBlockOffset == -1) {\n        cbfn(vcfThis.appendBuffers(blocks), blocks[blocks.length - 1].byteLength);\n      } else if (nextBlockOffset <= end) {\n        vcfThis.inflateBlock(d, nextBlockOffset, cb);\n      } else {\n        cbfn(vcfThis.appendBuffers(blocks), blocks[blocks.length - 1].byteLength);\n      }\n    };\n\n    this.inflateBlock(d, beg, cb);\n  };\n\n  VCFReader.prototype.inflateBlock = function (d, blockOffset, cbfn) {\n    var cb2 = function (hdobj) {\n      d.slice(blockOffset, hdobj.subhead.bsize + 1).fetch(function (block) {\n        var inflated_block  = inflate(block, hdSize, block.byteLength - hdSize);\n        var nextBlockOffset = blockOffset + hdobj.subhead.bsize + 1;\n\n        if (hdobj.subhead.bsize == 27) {\n          nextBlockOffset = -1; // last bgzf block\n        }\n\n        cbfn(inflated_block, nextBlockOffset);\n      });\n    };\n\n    this.getBGZFHD(d, blockOffset, cb2);\n  };\n\n  VCFReader.prototype.getBGZFHD = function (d, offset, cbfn) {\n    d.slice(offset, hdSize + 1).fetch(function (buf) {\n      var parser = new jParser(buf, bgzf_hd_fmt);\n      var hdobj  = parser.parse('bgzfHd');\n      cbfn(hdobj);\n    });\n  };\n\n  VCFReader.prototype.appendBuffers = function (bufferVec) {\n    var totalSize = 0;\n\n    for (var i = 0; i < bufferVec.length; i++) {\n      totalSize = totalSize + bufferVec[i].byteLength;\n    }\n\n    var tmp    = new Uint8Array(totalSize);\n    var offset = 0;\n\n    for (i = 0; i < bufferVec.length; i++) {\n      tmp.set(new Uint8Array(bufferVec[i]), offset);\n      offset = offset + bufferVec[i].byteLength;\n    }\n\n    return tmp.buffer;\n  };\n\n  VCFReader.prototype.buffer2String = function (resultBuffer) {\n    var s        = '';\n    var resultBB = new Uint8Array(resultBuffer);\n\n    for (var i = 0; i < resultBB.length; ++i) {\n      s += String.fromCharCode(resultBB[i]);\n    }\n\n    return s;\n  };\n\n  VCFReader.prototype.remove_duplicates = function (objectsArray) {\n    var usedObjects = {};\n\n    for (var i = objectsArray.length - 1; i >= 0; i--) {\n      var so = JSON.stringify(objectsArray[i]);\n\n      if (usedObjects[so]) {\n        objectsArray.splice(i, 1);\n      } else {\n        usedObjects[so] = true;\n      }\n    }\n\n    return objectsArray;\n  };\n\n  VCFReader.prototype.bin2Ranges = function (tbi, ref, binid) {\n    var ranges = [];\n    var bs     = tbi.indexseq[ref].binseq;\n    var cnkseq = bs[tbi.bhash[ref][binid]].chunkseq;\n    var cnk;\n\n    for (var i = 0; i < cnkseq.length; i++) {\n      cnk = cnkseq[i];\n\n      ranges.push({\n        start       : Math.floor(cnk.cnk_beg / _2p16),\n        inner_start : cnk.cnk_beg % _2p16,\n        end         : Math.floor(cnk.cnk_end / _2p16),\n        inner_end   : cnk.cnk_end % _2p16\n      });\n    }\n\n    return ranges;\n  };\n\n  VCFReader.prototype.reg2bins = function (beg, end) {\n    var list = [];\n    var i;\n\n    --end;\n\n    list.push(0);\n\n    for (i = 1    + (beg >> 26); i <= 1    + (end >> 26); ++i) { list.push(i); }\n    for (i = 9    + (beg >> 23); i <= 9    + (end >> 23); ++i) { list.push(i); }\n    for (i = 73   + (beg >> 20); i <= 73   + (end >> 20); ++i) { list.push(i); }\n    for (i = 585  + (beg >> 17); i <= 585  + (end >> 17); ++i) { list.push(i); }\n    for (i = 4681 + (beg >> 14); i <= 4681 + (end >> 14); ++i) { list.push(i); }\n\n    return list;\n  };\n\n  window.VCFReader = VCFReader;\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = VCFReader;\n  }\n})();\n","(function () {\n  // Javascript ZLib\n  // By Thomas Down 2010-2011\n  //\n  // Based very heavily on portions of jzlib (by ymnk@jcraft.com), who in\n  // turn credits Jean-loup Gailly and Mark Adler for the original zlib code.\n  //\n  // inflate.js: ZLib inflate code\n  //\n  //\n  // Shared constants\n  //\n  var MAX_WBITS = 15; // 32K LZ77 window\n  var DEF_WBITS = MAX_WBITS;\n  var MAX_MEM_LEVEL = 9;\n  var MANY = 1440;\n  var BMAX = 15;\n\n  // preset dictionary flag in zlib header\n  var PRESET_DICT = 0x20;\n\n  var Z_NO_FLUSH = 0;\n  var Z_PARTIAL_FLUSH = 1;\n  var Z_SYNC_FLUSH = 2;\n  var Z_FULL_FLUSH = 3;\n  var Z_FINISH = 4;\n\n  var Z_DEFLATED = 8;\n\n  var Z_OK = 0;\n  var Z_STREAM_END = 1;\n  var Z_NEED_DICT = 2;\n  var Z_ERRNO = -1;\n  var Z_STREAM_ERROR = -2;\n  var Z_DATA_ERROR = -3;\n  var Z_MEM_ERROR = -4;\n  var Z_BUF_ERROR = -5;\n  var Z_VERSION_ERROR = -6;\n\n  var METHOD = 0; // waiting for method byte\n  var FLAG = 1; // waiting for flag byte\n  var DICT4 = 2; // four dictionary check bytes to go\n  var DICT3 = 3; // three dictionary check bytes to go\n  var DICT2 = 4; // two dictionary check bytes to go\n  var DICT1 = 5; // one dictionary check byte to go\n  var DICT0 = 6; // waiting for inflateSetDictionary\n  var BLOCKS = 7; // decompressing blocks\n  var CHECK4 = 8; // four check bytes to go\n  var CHECK3 = 9; // three check bytes to go\n  var CHECK2 = 10; // two check bytes to go\n  var CHECK1 = 11; // one check byte to go\n  var DONE = 12; // finished check, done\n  var BAD = 13; // got an error--stay here\n\n  var inflate_mask = [0x00000000, 0x00000001, 0x00000003, 0x00000007, 0x0000000f, 0x0000001f, 0x0000003f, 0x0000007f, 0x000000ff, 0x000001ff, 0x000003ff, 0x000007ff, 0x00000fff, 0x00001fff, 0x00003fff, 0x00007fff, 0x0000ffff];\n\n  var IB_TYPE = 0; // get type bits (3, including end bit)\n  var IB_LENS = 1; // get lengths for stored\n  var IB_STORED = 2; // processing stored block\n  var IB_TABLE = 3; // get table lengths\n  var IB_BTREE = 4; // get bit lengths tree for a dynamic block\n  var IB_DTREE = 5; // get length, distance trees for a dynamic block\n  var IB_CODES = 6; // processing fixed or dynamic block\n  var IB_DRY = 7; // output remaining window bytes\n  var IB_DONE = 8; // finished last block, done\n  var IB_BAD = 9; // ot a data error--stuck here\n\n  var fixed_bl = 9;\n  var fixed_bd = 5;\n\n  var fixed_tl = [\n    96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115,\n    82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9, 192,\n    80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 160,\n    0, 8, 0, 0, 8, 128, 0, 8, 64, 0, 9, 224,\n    80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 144,\n    83, 7, 59, 0, 8, 120, 0, 8, 56, 0, 9, 208,\n    81, 7, 17, 0, 8, 104, 0, 8, 40, 0, 9, 176,\n    0, 8, 8, 0, 8, 136, 0, 8, 72, 0, 9, 240,\n    80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8, 227,\n    83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 200,\n    81, 7, 13, 0, 8, 100, 0, 8, 36, 0, 9, 168,\n    0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 232,\n    80, 7, 8, 0, 8, 92, 0, 8, 28, 0, 9, 152,\n    84, 7, 83, 0, 8, 124, 0, 8, 60, 0, 9, 216,\n    82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 184,\n    0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9, 248,\n    80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163,\n    83, 7, 35, 0, 8, 114, 0, 8, 50, 0, 9, 196,\n    81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 164,\n    0, 8, 2, 0, 8, 130, 0, 8, 66, 0, 9, 228,\n    80, 7, 7, 0, 8, 90, 0, 8, 26, 0, 9, 148,\n    84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 212,\n    82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9, 180,\n    0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 244,\n    80, 7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0,\n    83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 204,\n    81, 7, 15, 0, 8, 102, 0, 8, 38, 0, 9, 172,\n    0, 8, 6, 0, 8, 134, 0, 8, 70, 0, 9, 236,\n    80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 156,\n    84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9, 220,\n    82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 188,\n    0, 8, 14, 0, 8, 142, 0, 8, 78, 0, 9, 252,\n    96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131,\n    82, 7, 31, 0, 8, 113, 0, 8, 49, 0, 9, 194,\n    80, 7, 10, 0, 8, 97, 0, 8, 33, 0, 9, 162,\n    0, 8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 226,\n    80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9, 146,\n    83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 210,\n    81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 178,\n    0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 242,\n    80, 7, 4, 0, 8, 85, 0, 8, 21, 80, 8, 258,\n    83, 7, 43, 0, 8, 117, 0, 8, 53, 0, 9, 202,\n    81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 170,\n    0, 8, 5, 0, 8, 133, 0, 8, 69, 0, 9, 234,\n    80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 154,\n    84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 218,\n    82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 186,\n    0, 8, 13, 0, 8, 141, 0, 8, 77, 0, 9, 250,\n    80, 7, 3, 0, 8, 83, 0, 8, 19, 85, 8, 195,\n    83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 198,\n    81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9, 166,\n    0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 230,\n    80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 150,\n    84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 214,\n    82, 7, 19, 0, 8, 107, 0, 8, 43, 0, 9, 182,\n    0, 8, 11, 0, 8, 139, 0, 8, 75, 0, 9, 246,\n    80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0,\n    83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9, 206,\n    81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 174,\n    0, 8, 7, 0, 8, 135, 0, 8, 71, 0, 9, 238,\n    80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 158,\n    84, 7, 99, 0, 8, 127, 0, 8, 63, 0, 9, 222,\n    82, 7, 27, 0, 8, 111, 0, 8, 47, 0, 9, 190,\n    0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 254,\n    96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115,\n    82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9, 193,\n\n    80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 161,\n    0, 8, 0, 0, 8, 128, 0, 8, 64, 0, 9, 225,\n    80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 145,\n    83, 7, 59, 0, 8, 120, 0, 8, 56, 0, 9, 209,\n    81, 7, 17, 0, 8, 104, 0, 8, 40, 0, 9, 177,\n    0, 8, 8, 0, 8, 136, 0, 8, 72, 0, 9, 241,\n    80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8, 227,\n    83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 201,\n    81, 7, 13, 0, 8, 100, 0, 8, 36, 0, 9, 169,\n    0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 233,\n    80, 7, 8, 0, 8, 92, 0, 8, 28, 0, 9, 153,\n    84, 7, 83, 0, 8, 124, 0, 8, 60, 0, 9, 217,\n    82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 185,\n    0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9, 249,\n    80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163,\n    83, 7, 35, 0, 8, 114, 0, 8, 50, 0, 9, 197,\n    81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 165,\n    0, 8, 2, 0, 8, 130, 0, 8, 66, 0, 9, 229,\n    80, 7, 7, 0, 8, 90, 0, 8, 26, 0, 9, 149,\n    84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 213,\n    82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9, 181,\n    0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 245,\n    80, 7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0,\n    83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 205,\n    81, 7, 15, 0, 8, 102, 0, 8, 38, 0, 9, 173,\n    0, 8, 6, 0, 8, 134, 0, 8, 70, 0, 9, 237,\n    80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 157,\n    84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9, 221,\n    82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 189,\n    0, 8, 14, 0, 8, 142, 0, 8, 78, 0, 9, 253,\n    96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131,\n    82, 7, 31, 0, 8, 113, 0, 8, 49, 0, 9, 195,\n    80, 7, 10, 0, 8, 97, 0, 8, 33, 0, 9, 163,\n    0, 8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 227,\n    80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9, 147,\n    83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 211,\n    81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 179,\n    0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 243,\n    80, 7, 4, 0, 8, 85, 0, 8, 21, 80, 8, 258,\n    83, 7, 43, 0, 8, 117, 0, 8, 53, 0, 9, 203,\n    81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 171,\n    0, 8, 5, 0, 8, 133, 0, 8, 69, 0, 9, 235,\n    80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 155,\n    84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 219,\n    82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 187,\n    0, 8, 13, 0, 8, 141, 0, 8, 77, 0, 9, 251,\n    80, 7, 3, 0, 8, 83, 0, 8, 19, 85, 8, 195,\n    83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 199,\n    81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9, 167,\n    0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 231,\n    80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 151,\n    84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 215,\n    82, 7, 19, 0, 8, 107, 0, 8, 43, 0, 9, 183,\n    0, 8, 11, 0, 8, 139, 0, 8, 75, 0, 9, 247,\n    80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0,\n    83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9, 207,\n    81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 175,\n    0, 8, 7, 0, 8, 135, 0, 8, 71, 0, 9, 239,\n    80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 159,\n    84, 7, 99, 0, 8, 127, 0, 8, 63, 0, 9, 223,\n    82, 7, 27, 0, 8, 111, 0, 8, 47, 0, 9, 191,\n    0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 255\n  ];\n  var fixed_td = [\n    80, 5, 1, 87, 5, 257, 83, 5, 17, 91, 5, 4097,\n    81, 5, 5, 89, 5, 1025, 85, 5, 65, 93, 5, 16385,\n    80, 5, 3, 88, 5, 513, 84, 5, 33, 92, 5, 8193,\n    82, 5, 9, 90, 5, 2049, 86, 5, 129, 192, 5, 24577,\n    80, 5, 2, 87, 5, 385, 83, 5, 25, 91, 5, 6145,\n    81, 5, 7, 89, 5, 1537, 85, 5, 97, 93, 5, 24577,\n    80, 5, 4, 88, 5, 769, 84, 5, 49, 92, 5, 12289,\n    82, 5, 13, 90, 5, 3073, 86, 5, 193, 192, 5, 24577\n  ];\n\n  // Tables for deflate from PKZIP's appnote.txt.\n  var cplens = [ // Copy lengths for literal codes 257..285\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n    35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n  ];\n\n  // see note #13 above about 258\n  var cplext = [ // Extra bits for literal codes 257..285\n    0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2,\n    3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 112, 112 // 112==invalid\n  ];\n\n  var cpdist = [ // Copy offsets for distance codes 0..29\n    1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n    257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n    8193, 12289, 16385, 24577\n  ];\n\n  var cpdext = [ // Extra bits for distance codes\n    0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6,\n    7, 7, 8, 8, 9, 9, 10, 10, 11, 11,\n    12, 12, 13, 13\n  ];\n\n  //\n  // ZStream.java\n  //\n\n  function ZStream() {}\n\n  ZStream.prototype.inflateInit = function(w, nowrap) {\n    if (!w) {\n      w = DEF_WBITS;\n    }\n\n    if (nowrap) {\n      nowrap = false;\n    }\n\n    this.istate = new Inflate();\n\n    return this.istate.inflateInit(this, nowrap ? -w : w);\n  };\n\n  ZStream.prototype.inflate = function(f) {\n    if (this.istate == null) {\n      return Z_STREAM_ERROR;\n    }\n\n    return this.istate.inflate(this, f);\n  };\n\n  ZStream.prototype.inflateEnd = function() {\n    if (this.istate == null) {\n      return Z_STREAM_ERROR;\n    }\n\n    var ret = istate.inflateEnd(this);\n    this.istate = null;\n    return ret;\n  };\n\n  ZStream.prototype.inflateSync = function() {\n    // if(istate == null) return Z_STREAM_ERROR;\n    return istate.inflateSync(this);\n  };\n\n  ZStream.prototype.inflateSetDictionary = function(dictionary, dictLength) {\n    // if(istate == null) return Z_STREAM_ERROR;\n    return istate.inflateSetDictionary(this, dictionary, dictLength);\n  };\n\n  /*\n\n    public int deflateInit(int level){\n      return deflateInit(level, MAX_WBITS);\n    }\n    public int deflateInit(int level, boolean nowrap){\n      return deflateInit(level, MAX_WBITS, nowrap);\n    }\n    public int deflateInit(int level, int bits){\n      return deflateInit(level, bits, false);\n    }\n    public int deflateInit(int level, int bits, boolean nowrap){\n      dstate=new Deflate();\n      return dstate.deflateInit(this, level, nowrap?-bits:bits);\n    }\n    public int deflate(int flush){\n      if(dstate==null){\n        return Z_STREAM_ERROR;\n      }\n      return dstate.deflate(this, flush);\n    }\n    public int deflateEnd(){\n      if(dstate==null) return Z_STREAM_ERROR;\n      int ret=dstate.deflateEnd();\n      dstate=null;\n      return ret;\n    }\n    public int deflateParams(int level, int strategy){\n      if(dstate==null) return Z_STREAM_ERROR;\n      return dstate.deflateParams(this, level, strategy);\n    }\n    public int deflateSetDictionary (byte[] dictionary, int dictLength){\n      if(dstate == null)\n        return Z_STREAM_ERROR;\n      return dstate.deflateSetDictionary(this, dictionary, dictLength);\n    }\n\n  */\n\n  /*\n    // Flush as much pending output as possible. All deflate() output goes\n    // through this function so some applications may wish to modify it\n    // to avoid allocating a large strm->next_out buffer and copying into it.\n    // (See also read_buf()).\n    void flush_pending(){\n      int len=dstate.pending;\n\n      if(len>avail_out) len=avail_out;\n      if(len==0) return;\n\n      if(dstate.pending_buf.length<=dstate.pending_out ||\n         next_out.length<=next_out_index ||\n         dstate.pending_buf.length<(dstate.pending_out+len) ||\n         next_out.length<(next_out_index+len)){\n        System.out.println(dstate.pending_buf.length+\", \"+dstate.pending_out+\n         \", \"+next_out.length+\", \"+next_out_index+\", \"+len);\n        System.out.println(\"avail_out=\"+avail_out);\n      }\n\n      System.arraycopy(dstate.pending_buf, dstate.pending_out,\n           next_out, next_out_index, len);\n\n      next_out_index+=len;\n      dstate.pending_out+=len;\n      total_out+=len;\n      avail_out-=len;\n      dstate.pending-=len;\n      if(dstate.pending==0){\n        dstate.pending_out=0;\n      }\n    }\n\n    // Read a new buffer from the current input stream, update the adler32\n    // and total number of bytes read.  All deflate() input goes through\n    // this function so some applications may wish to modify it to avoid\n    // allocating a large strm->next_in buffer and copying from it.\n    // (See also flush_pending()).\n    int read_buf(byte[] buf, int start, int size) {\n      int len=avail_in;\n\n      if(len>size) len=size;\n      if(len==0) return 0;\n\n      avail_in-=len;\n\n      if(dstate.noheader==0) {\n        adler=_adler.adler32(adler, next_in, next_in_index, len);\n      }\n      System.arraycopy(next_in, next_in_index, buf, start, len);\n      next_in_index  += len;\n      total_in += len;\n      return len;\n    }\n\n    public void free(){\n      next_in=null;\n      next_out=null;\n      msg=null;\n      _adler=null;\n    }\n  }\n  */\n\n\n  //\n  // Inflate.java\n  //\n\n  function Inflate() {\n    this.was = [0];\n  }\n\n  Inflate.prototype.inflateReset = function(z) {\n    if (z == null || z.istate == null) {\n      return Z_STREAM_ERROR;\n    }\n\n    z.total_in = z.total_out = 0;\n    z.msg = null;\n    z.istate.mode = z.istate.nowrap != 0 ? BLOCKS : METHOD;\n    z.istate.blocks.reset(z, null);\n    return Z_OK;\n  };\n\n  Inflate.prototype.inflateEnd = function(z) {\n    if (this.blocks != null) {\n      this.blocks.free(z);\n    }\n\n    this.blocks = null;\n    return Z_OK;\n  };\n\n  Inflate.prototype.inflateInit = function(z, w) {\n    z.msg = null;\n    this.blocks = null;\n\n    // handle undocumented nowrap option (no zlib header or check)\n    nowrap = 0;\n\n    if (w < 0) {\n      w = -w;\n      nowrap = 1;\n    }\n\n    // set window size\n    if (w < 8 || w > 15) {\n      this.inflateEnd(z);\n      return Z_STREAM_ERROR;\n    }\n\n    this.wbits = w;\n\n    z.istate.blocks = new InfBlocks(z, z.istate.nowrap != 0 ? null : this, 1 << w);\n\n    // reset state\n    this.inflateReset(z);\n    return Z_OK;\n  };\n\n  Inflate.prototype.inflate = function(z, f) {\n    var r, b;\n\n    if (z == null || z.istate == null || z.next_in == null) {\n      return Z_STREAM_ERROR;\n    }\n\n    f = f == Z_FINISH ? Z_BUF_ERROR : Z_OK;\n    r = Z_BUF_ERROR;\n\n    while (true) {\n      switch (z.istate.mode) {\n        case METHOD:\n\n          if (z.avail_in == 0) {\n            return r;\n          }\n\n          r = f;\n\n          z.avail_in--;\n          z.total_in++;\n\n          if (((z.istate.method = z.next_in[z.next_in_index++]) & 0xf) != Z_DEFLATED) {\n            z.istate.mode = BAD;\n            z.msg = \"unknown compression method\";\n            z.istate.marker = 5; // can't try inflateSync\n            break;\n          }\n\n          if ((z.istate.method >> 4) + 8 > z.istate.wbits) {\n            z.istate.mode = BAD;\n            z.msg = \"invalid window size\";\n            z.istate.marker = 5; // can't try inflateSync\n            break;\n          }\n\n          z.istate.mode = FLAG;\n        case FLAG:\n          if (z.avail_in == 0) {\n            return r;\n          }\n\n          r = f;\n\n          z.avail_in--;\n          z.total_in++;\n          b = (z.next_in[z.next_in_index++]) & 0xff;\n\n          if ((((z.istate.method << 8) + b) % 31) != 0) {\n            z.istate.mode = BAD;\n            z.msg = \"incorrect header check\";\n            z.istate.marker = 5; // can't try inflateSync\n            break;\n          }\n\n          if ((b & PRESET_DICT) == 0) {\n            z.istate.mode = BLOCKS;\n            break;\n          }\n\n          z.istate.mode = DICT4;\n        case DICT4:\n          if (z.avail_in == 0) {\n            return r;\n          }\n\n          r = f;\n\n          z.avail_in--;\n          z.total_in++;\n          z.istate.need = ((z.next_in[z.next_in_index++] & 0xff) << 24) & 0xff000000;\n          z.istate.mode = DICT3;\n        case DICT3:\n          if (z.avail_in == 0) {\n            return r;\n          }\n\n          r = f;\n\n          z.avail_in--;\n          z.total_in++;\n          z.istate.need += ((z.next_in[z.next_in_index++] & 0xff) << 16) & 0xff0000;\n          z.istate.mode = DICT2;\n        case DICT2:\n          if (z.avail_in == 0) {\n            return r;\n          }\n\n          r = f;\n\n          z.avail_in--;\n          z.total_in++;\n          z.istate.need += ((z.next_in[z.next_in_index++] & 0xff) << 8) & 0xff00;\n          z.istate.mode = DICT1;\n        case DICT1:\n          if (z.avail_in == 0) {\n            return r;\n          }\n\n          r = f;\n\n          z.avail_in--;\n          z.total_in++;\n          z.istate.need += (z.next_in[z.next_in_index++] & 0xff);\n          z.adler = z.istate.need;\n          z.istate.mode = DICT0;\n          return Z_NEED_DICT;\n        case DICT0:\n          z.istate.mode = BAD;\n          z.msg = \"need dictionary\";\n          z.istate.marker = 0; // can try inflateSync\n          return Z_STREAM_ERROR;\n        case BLOCKS:\n          r = z.istate.blocks.proc(z, r);\n\n          if (r == Z_DATA_ERROR) {\n            z.istate.mode = BAD;\n            z.istate.marker = 0; // can try inflateSync\n            break;\n          }\n\n          if (r == Z_OK) {\n            r = f;\n          }\n\n          if (r != Z_STREAM_END) {\n            return r;\n          }\n\n          r = f;\n          z.istate.blocks.reset(z, z.istate.was);\n\n          if (z.istate.nowrap != 0) {\n            z.istate.mode = DONE;\n            break;\n          }\n\n          z.istate.mode = CHECK4;\n        case CHECK4:\n          if (z.avail_in == 0) {\n            return r;\n          }\n\n          r = f;\n\n          z.avail_in--;\n          z.total_in++;\n          z.istate.need = ((z.next_in[z.next_in_index++] & 0xff) << 24) & 0xff000000;\n          z.istate.mode = CHECK3;\n        case CHECK3:\n          if (z.avail_in == 0) {\n            return r;\n          }\n\n          r = f;\n\n          z.avail_in--;\n          z.total_in++;\n          z.istate.need += ((z.next_in[z.next_in_index++] & 0xff) << 16) & 0xff0000;\n          z.istate.mode = CHECK2;\n        case CHECK2:\n          if (z.avail_in == 0) {\n            return r;\n          }\n\n          r = f;\n\n          z.avail_in--;\n          z.total_in++;\n          z.istate.need += ((z.next_in[z.next_in_index++] & 0xff) << 8) & 0xff00;\n          z.istate.mode = CHECK1;\n        case CHECK1:\n          if (z.avail_in == 0) {\n            return r;\n          }\n\n          r = f;\n\n          z.avail_in--;\n          z.total_in++;\n          z.istate.need += (z.next_in[z.next_in_index++] & 0xff);\n\n          if (((z.istate.was[0])) != ((z.istate.need))) {\n            z.istate.mode = BAD;\n            z.msg = \"incorrect data check\";\n            z.istate.marker = 5; // can't try inflateSync\n            break;\n          }\n\n          z.istate.mode = DONE;\n        case DONE:\n          return Z_STREAM_END;\n        case BAD:\n          return Z_DATA_ERROR;\n        default:\n          return Z_STREAM_ERROR;\n      }\n    }\n  };\n\n  Inflate.prototype.inflateSetDictionary = function(z, dictionary, dictLength) {\n    var index = 0;\n    var length = dictLength;\n\n    if (z == null || z.istate == null || z.istate.mode != DICT0) {\n      return Z_STREAM_ERROR;\n    }\n\n    if (z._adler.adler32(1, dictionary, 0, dictLength) != z.adler) {\n      return Z_DATA_ERROR;\n    }\n\n    z.adler = z._adler.adler32(0, null, 0, 0);\n\n    if (length >= (1 << z.istate.wbits)) {\n      length = (1 << z.istate.wbits) - 1;\n      index = dictLength - length;\n    }\n\n    z.istate.blocks.set_dictionary(dictionary, index, length);\n    z.istate.mode = BLOCKS;\n    return Z_OK;\n  };\n\n  //  static private byte[] mark = {(byte)0, (byte)0, (byte)0xff, (byte)0xff};\n  var mark = [0, 0, 255, 255];\n\n  Inflate.prototype.inflateSync = function(z) {\n    var n; // number of bytes to look at\n    var p; // pointer to bytes\n    var m; // number of marker bytes found in a row\n    var r, w; // temporaries to save total_in and total_out\n\n    // set up\n    if (z == null || z.istate == null) {\n      return Z_STREAM_ERROR;\n    }\n\n    if (z.istate.mode != BAD) {\n      z.istate.mode = BAD;\n      z.istate.marker = 0;\n    }\n\n    if ((n = z.avail_in) == 0) {\n      return Z_BUF_ERROR;\n    }\n\n    p = z.next_in_index;\n    m = z.istate.marker;\n\n    // search\n    while (n != 0 && m < 4) {\n      if (z.next_in[p] == mark[m]) {\n        m++;\n      } else if (z.next_in[p] != 0) {\n        m = 0;\n      } else {\n        m = 4 - m;\n      }\n\n      p++;\n      n--;\n    }\n\n    // restore\n    z.total_in += p - z.next_in_index;\n    z.next_in_index = p;\n    z.avail_in = n;\n    z.istate.marker = m;\n\n    // return no joy or set up to restart on a new block\n    if (m != 4) {\n      return Z_DATA_ERROR;\n    }\n\n    r = z.total_in;\n    w = z.total_out;\n    this.inflateReset(z);\n    z.total_in = r;\n    z.total_out = w;\n    z.istate.mode = BLOCKS;\n    return Z_OK;\n  };\n\n  // Returns true if inflate is currently at the end of a block generated\n  // by Z_SYNC_FLUSH or Z_FULL_FLUSH. This function is used by one PPP\n  // implementation to provide an additional safety check. PPP uses Z_SYNC_FLUSH\n  // but removes the length bytes of the resulting empty stored block. When\n  // decompressing, PPP checks that at the end of input packet, inflate is\n  // waiting for these length bytes.\n  Inflate.prototype.inflateSyncPoint = function(z) {\n    if (z == null || z.istate == null || z.istate.blocks == null) {\n      return Z_STREAM_ERROR;\n    }\n\n    return z.istate.blocks.sync_point();\n  };\n\n\n  //\n  // InfBlocks.java\n  //\n\n  var INFBLOCKS_BORDER = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n  function InfBlocks(z, checkfn, w) {\n    this.hufts = new Int32Array(MANY * 3);\n    this.window = new Uint8Array(w);\n    this.end = w;\n    this.checkfn = checkfn;\n    this.mode = IB_TYPE;\n    this.reset(z, null);\n\n    this.left = 0; // if STORED, bytes left to copy\n\n    this.table = 0; // table lengths (14 bits)\n    this.index = 0; // index into blens (or border)\n    this.blens = null; // bit lengths of codes\n    this.bb = new Int32Array(1); // bit length tree depth\n    this.tb = new Int32Array(1); // bit length decoding tree\n\n    this.codes = new InfCodes();\n\n    this.last = 0; // true if this block is the last block\n\n    // mode independent information\n    this.bitk = 0; // bits in bit buffer\n    this.bitb = 0; // bit buffer\n    this.read = 0; // window read pointer\n    this.write = 0; // window write pointer\n    this.check = 0; // check on output\n\n    this.inftree = new InfTree();\n  }\n\n  InfBlocks.prototype.reset = function(z, c) {\n    if (c) {\n      c[0] = this.check;\n    }\n\n    if (this.mode == IB_CODES) {\n      this.codes.free(z);\n    }\n\n    this.mode = IB_TYPE;\n    this.bitk = 0;\n    this.bitb = 0;\n    this.read = this.write = 0;\n\n    if (this.checkfn) {\n      z.adler = this.check = z._adler.adler32(0, null, 0, 0);\n    }\n  };\n\n  InfBlocks.prototype.proc = function(z, r) {\n    var t; // temporary storage\n    var b; // bit buffer\n    var k; // bits in bit buffer\n    var p; // input data pointer\n    var n; // bytes available there\n    var q; // output window write pointer\n    var m; // bytes to end of window or read pointer\n\n    // copy input/output information to locals (UPDATE macro restores)\n    {\n      p = z.next_in_index;\n      n = z.avail_in;\n      b = this.bitb;\n      k = this.bitk;\n    } {\n      q = this.write;\n      m = (q < this.read ? this.read - q - 1 : this.end - q);\n    }\n\n    // process input based on current state\n    while (true) {\n      switch (this.mode) {\n        case IB_TYPE:\n          while (k < (3)) {\n            if (n != 0) {\n              r = Z_OK;\n            } else {\n              this.bitb = b;\n              this.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              this.write = q;\n              return this.inflate_flush(z, r);\n            }\n\n            n--;\n            b |= (z.next_in[p++] & 0xff) << k;\n            k += 8;\n          }\n\n          t = (b & 7);\n          this.last = t & 1;\n\n          switch (t >>> 1) {\n            case 0: // stored\n              {\n                b >>>= (3);\n                k -= (3);\n              }\n\n              t = k & 7; // go to byte boundary\n\n              {\n                b >>>= (t);\n                k -= (t);\n              }\n\n              this.mode = IB_LENS; // get length of stored block\n              break;\n            case 1: // fixed\n              {\n                var bl = new Int32Array(1);\n                var bd = new Int32Array(1);\n                var tl = [];\n                var td = [];\n\n                inflate_trees_fixed(bl, bd, tl, td, z);\n                this.codes.init(bl[0], bd[0], tl[0], 0, td[0], 0, z);\n              }\n\n              {\n                b >>>= (3);\n                k -= (3);\n              }\n\n              this.mode = IB_CODES;\n              break;\n            case 2: // dynamic\n              {\n                b >>>= (3);k -= (3);\n              }\n\n              this.mode = IB_TABLE;\n              break;\n            case 3: // illegal\n              {\n                b >>>= (3);k -= (3);\n              }\n\n              this.mode = BAD;\n              z.msg = \"invalid block type\";\n              r = Z_DATA_ERROR;\n\n              this.bitb = b;\n              this.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              this.write = q;\n              return this.inflate_flush(z, r);\n          }\n\n          break;\n        case IB_LENS:\n          while (k < (32)) {\n            if (n != 0) {\n              r = Z_OK;\n            } else {\n              this.bitb = b;\n              this.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              this.write = q;\n              return this.inflate_flush(z, r);\n            }\n\n            n--;\n            b |= (z.next_in[p++] & 0xff) << k;\n            k += 8;\n          }\n\n          if ((((~b) >>> 16) & 0xffff) != (b & 0xffff)) {\n            this.mode = BAD;\n            z.msg = \"invalid stored block lengths\";\n            r = Z_DATA_ERROR;\n\n            this.bitb = b;\n            this.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            this.write = q;\n            return this.inflate_flush(z, r);\n          }\n\n          this.left = (b & 0xffff);\n          b = k = 0; // dump bits\n          this.mode = this.left != 0 ? IB_STORED : (this.last != 0 ? IB_DRY : IB_TYPE);\n          break;\n        case IB_STORED:\n          if (n == 0) {\n            this.bitb = b;\n            this.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            write = q;\n            return this.inflate_flush(z, r);\n          }\n\n          if (m == 0) {\n            if (q == end && read != 0) {\n              q = 0;\n              m = (q < this.read ? this.read - q - 1 : this.end - q);\n            }\n\n            if (m == 0) {\n              this.write = q;\n              r = this.inflate_flush(z, r);\n              q = this.write;\n              m = (q < this.read ? this.read - q - 1 : this.end - q);\n\n              if (q == this.end && this.read != 0) {\n                q = 0;\n                m = (q < this.read ? this.read - q - 1 : this.end - q);\n              }\n\n              if (m == 0) {\n                this.bitb = b;\n                this.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                this.write = q;\n                return this.inflate_flush(z, r);\n              }\n            }\n          }\n\n          r = Z_OK;\n\n          t = this.left;\n\n          if (t > n) {\n            t = n;\n          }\n\n          if (t > m) {\n            t = m;\n          }\n\n          arrayCopy(z.next_in, p, this.window, q, t);\n          p += t;\n          n -= t;\n          q += t;\n          m -= t;\n\n          if ((this.left -= t) != 0) {\n            break;\n          }\n\n          this.mode = (this.last != 0 ? IB_DRY : IB_TYPE);\n          break;\n        case IB_TABLE:\n          while (k < (14)) {\n            if (n != 0) {\n              r = Z_OK;\n            } else {\n              this.bitb = b;\n              this.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              this.write = q;\n              return this.inflate_flush(z, r);\n            }\n\n            n--;\n            b |= (z.next_in[p++] & 0xff) << k;\n            k += 8;\n          }\n\n          this.table = t = (b & 0x3fff);\n\n          if ((t & 0x1f) > 29 || ((t >> 5) & 0x1f) > 29) {\n            this.mode = IB_BAD;\n            z.msg = \"too many length or distance symbols\";\n            r = Z_DATA_ERROR;\n\n            this.bitb = b;\n            this.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            this.write = q;\n            return this.inflate_flush(z, r);\n          }\n\n          t = 258 + (t & 0x1f) + ((t >> 5) & 0x1f);\n\n          if (this.blens == null || this.blens.length < t) {\n            this.blens = new Int32Array(t);\n          } else {\n            for (var i = 0; i < t; i++) {\n              this.blens[i] = 0;\n            }\n          }\n\n          {\n            b >>>= (14);\n            k -= (14);\n          }\n\n          this.index = 0;\n          mode = IB_BTREE;\n        case IB_BTREE:\n          while (this.index < 4 + (this.table >>> 10)) {\n            while (k < (3)) {\n              if (n != 0) {\n                r = Z_OK;\n              } else {\n                this.bitb = b;\n                this.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                this.write = q;\n                return this.inflate_flush(z, r);\n              }\n\n              n--;\n              b |= (z.next_in[p++] & 0xff) << k;\n              k += 8;\n            }\n\n            this.blens[INFBLOCKS_BORDER[this.index++]] = b & 7;\n\n            {\n              b >>>= (3);\n              k -= (3);\n            }\n          }\n\n          while (this.index < 19) {\n            this.blens[INFBLOCKS_BORDER[this.index++]] = 0;\n          }\n\n          this.bb[0] = 7;\n          t = this.inftree.inflate_trees_bits(this.blens, this.bb, this.tb, this.hufts, z);\n\n          if (t != Z_OK) {\n            r = t;\n\n            if (r == Z_DATA_ERROR) {\n              this.blens = null;\n              this.mode = IB_BAD;\n            }\n\n            this.bitb = b;\n            this.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            write = q;\n            return this.inflate_flush(z, r);\n          }\n\n          this.index = 0;\n          this.mode = IB_DTREE;\n        case IB_DTREE:\n          while (true) {\n            t = this.table;\n\n            if (!(this.index < 258 + (t & 0x1f) + ((t >> 5) & 0x1f))) {\n              break;\n            }\n\n            var h; //int[]\n            var i, j, c;\n\n            t = this.bb[0];\n\n            while (k < (t)) {\n              if (n != 0) {\n                r = Z_OK;\n              } else {\n                this.bitb = b;\n                this.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                this.write = q;\n                return this.inflate_flush(z, r);\n              }\n\n              n--;\n              b |= (z.next_in[p++] & 0xff) << k;\n              k += 8;\n            }\n\n            //    if (this.tb[0]==-1){\n            //            dlog(\"null...\");\n            //    }\n\n            t = this.hufts[(this.tb[0] + (b & inflate_mask[t])) * 3 + 1];\n            c = this.hufts[(this.tb[0] + (b & inflate_mask[t])) * 3 + 2];\n\n            if (c < 16) {\n              b >>>= (t);\n              k -= (t);\n              this.blens[this.index++] = c;\n            } else { // c == 16..18\n              i = c == 18 ? 7 : c - 14;\n              j = c == 18 ? 11 : 3;\n\n              while (k < (t + i)) {\n                if (n != 0) {\n                  r = Z_OK;\n                } else {\n                  this.bitb = b;\n                  this.bitk = k;\n                  z.avail_in = n;\n                  z.total_in += p - z.next_in_index;\n                  z.next_in_index = p;\n                  this.write = q;\n                  return this.inflate_flush(z, r);\n                }\n\n                n--;\n                b |= (z.next_in[p++] & 0xff) << k;\n                k += 8;\n              }\n\n              b >>>= (t);\n              k -= (t);\n\n              j += (b & inflate_mask[i]);\n\n              b >>>= (i);\n              k -= (i);\n\n              i = this.index;\n              t = this.table;\n\n              if (i + j > 258 + (t & 0x1f) + ((t >> 5) & 0x1f) || (c == 16 && i < 1)) {\n                this.blens = null;\n                this.mode = IB_BAD;\n                z.msg = \"invalid bit length repeat\";\n                r = Z_DATA_ERROR;\n\n                this.bitb = b;\n                this.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                this.write = q;\n                return this.inflate_flush(z, r);\n              }\n\n              c = c == 16 ? this.blens[i - 1] : 0;\n\n              do {\n                this.blens[i++] = c;\n              } while (--j != 0);\n\n              this.index = i;\n            }\n          }\n\n          this.tb[0] = -1;\n\n          {\n            var bl = new Int32Array(1);\n            var bd = new Int32Array(1);\n            var tl = new Int32Array(1);\n            var td = new Int32Array(1);\n            bl[0] = 9; // must be <= 9 for lookahead assumptions\n            bd[0] = 6; // must be <= 9 for lookahead assumptions\n\n            t = this.table;\n            t = this.inftree.inflate_trees_dynamic(257 + (t & 0x1f), 1 + ((t >> 5) & 0x1f), this.blens, bl, bd, tl, td, this.hufts, z);\n\n            if (t != Z_OK) {\n              if (t == Z_DATA_ERROR) {\n                this.blens = null;\n                this.mode = BAD;\n              }\n\n              r = t;\n\n              this.bitb = b;\n              this.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              this.write = q;\n              return this.inflate_flush(z, r);\n            }\n            this.codes.init(bl[0], bd[0], this.hufts, tl[0], this.hufts, td[0], z);\n          }\n\n          this.mode = IB_CODES;\n        case IB_CODES:\n          this.bitb = b;\n          this.bitk = k;\n          z.avail_in = n;\n          z.total_in += p - z.next_in_index;\n          z.next_in_index = p;\n          this.write = q;\n\n          if ((r = this.codes.proc(this, z, r)) != Z_STREAM_END) {\n            return this.inflate_flush(z, r);\n          }\n\n          r = Z_OK;\n          this.codes.free(z);\n\n          p = z.next_in_index;\n          n = z.avail_in;\n          b = this.bitb;\n          k = this.bitk;\n          q = this.write;\n          m = (q < this.read ? this.read - q - 1 : this.end - q);\n\n          if (this.last == 0) {\n            this.mode = IB_TYPE;\n            break;\n          }\n\n          this.mode = IB_DRY;\n        case IB_DRY:\n          this.write = q;\n          r = this.inflate_flush(z, r);\n          q = this.write;\n          m = (q < this.read ? this.read - q - 1 : this.end - q);\n\n          if (this.read != this.write) {\n            this.bitb = b;\n            this.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            this.write = q;\n            return this.inflate_flush(z, r);\n          }\n\n          mode = DONE;\n        case IB_DONE:\n          r = Z_STREAM_END;\n\n          this.bitb = b;\n          this.bitk = k;\n          z.avail_in = n;\n          z.total_in += p - z.next_in_index;\n          z.next_in_index = p;\n          this.write = q;\n          return this.inflate_flush(z, r);\n        case IB_BAD:\n          r = Z_DATA_ERROR;\n\n          this.bitb = b;\n          this.bitk = k;\n          z.avail_in = n;\n          z.total_in += p - z.next_in_index;\n          z.next_in_index = p;\n          this.write = q;\n          return this.inflate_flush(z, r);\n        default:\n          r = Z_STREAM_ERROR;\n\n          this.bitb = b;\n          this.bitk = k;\n          z.avail_in = n;\n          z.total_in += p - z.next_in_index;\n          z.next_in_index = p;\n          this.write = q;\n          return this.inflate_flush(z, r);\n      }\n    }\n  };\n\n  InfBlocks.prototype.free = function(z) {\n    this.reset(z, null);\n    this.window = null;\n    this.hufts = null;\n  };\n\n  InfBlocks.prototype.set_dictionary = function(d, start, n) {\n    arrayCopy(d, start, window, 0, n);\n    this.read = this.write = n;\n  };\n\n  // Returns true if inflate is currently at the end of a block generated\n  // by Z_SYNC_FLUSH or Z_FULL_FLUSH.\n  InfBlocks.prototype.sync_point = function() {\n    return this.mode == IB_LENS;\n  };\n\n  // copy as much as possible from the sliding window to the output area\n  InfBlocks.prototype.inflate_flush = function(z, r) {\n    var n;\n    var p;\n    var q;\n\n    // local copies of source and destination pointers\n    p = z.next_out_index;\n    q = this.read;\n\n    // compute number of bytes to copy as far as end of window\n    n = ((q <= this.write ? this.write : this.end) - q);\n\n    if (n > z.avail_out) {\n      n = z.avail_out;\n    }\n\n    if (n != 0 && r == Z_BUF_ERROR) {\n      r = Z_OK;\n    }\n\n    // update counters\n    z.avail_out -= n;\n    z.total_out += n;\n\n    // update check information\n    if (this.checkfn != null) {\n      z.adler = this.check = z._adler.adler32(this.check, this.window, q, n);\n    }\n\n    // copy as far as end of window\n    arrayCopy(this.window, q, z.next_out, p, n);\n    p += n;\n    q += n;\n\n    // see if more to copy at beginning of window\n    if (q == this.end) {\n      // wrap pointers\n      q = 0;\n\n      if (this.write == this.end) {\n        this.write = 0;\n      }\n\n      // compute bytes to copy\n      n = this.write - q;\n\n      if (n > z.avail_out) {\n        n = z.avail_out;\n      }\n\n      if (n != 0 && r == Z_BUF_ERROR) {\n        r = Z_OK;\n      }\n\n      // update counters\n      z.avail_out -= n;\n      z.total_out += n;\n\n      // update check information\n      if (this.checkfn != null) {\n        z.adler = this.check = z._adler.adler32(this.check, this.window, q, n);\n      }\n\n      // copy\n      arrayCopy(this.window, q, z.next_out, p, n);\n      p += n;\n      q += n;\n    }\n\n    // update pointers\n    z.next_out_index = p;\n    this.read = q;\n\n    // done\n    return r;\n  };\n\n  //\n  // InfCodes.java\n  //\n\n  var IC_START = 0; // x: set up for LEN\n  var IC_LEN = 1; // i: get length/literal/eob next\n  var IC_LENEXT = 2; // i: getting length extra (have base)\n  var IC_DIST = 3; // i: get distance next\n  var IC_DISTEXT = 4; // i: getting distance extra\n  var IC_COPY = 5; // o: copying bytes in window, waiting for space\n  var IC_LIT = 6; // o: got literal, waiting for output space\n  var IC_WASH = 7; // o: got eob, possibly still output waiting\n  var IC_END = 8; // x: got eob and all data flushed\n  var IC_BADCODE = 9; // x: got error\n\n  function InfCodes() {}\n\n  InfCodes.prototype.init = function(bl, bd, tl, tl_index, td, td_index, z) {\n    this.mode = IC_START;\n    this.lbits = bl;\n    this.dbits = bd;\n    this.ltree = tl;\n    this.ltree_index = tl_index;\n    this.dtree = td;\n    this.dtree_index = td_index;\n    this.tree = null;\n  };\n\n  InfCodes.prototype.proc = function(s, z, r) {\n    var j; // temporary storage\n    var t; // temporary pointer (int[])\n    var tindex; // temporary pointer\n    var e; // extra bits or operation\n    var b = 0; // bit buffer\n    var k = 0; // bits in bit buffer\n    var p = 0; // input data pointer\n    var n; // bytes available there\n    var q; // output window write pointer\n    var m; // bytes to end of window or read pointer\n    var f; // pointer to copy strings from\n\n    // copy input/output information to locals (UPDATE macro restores)\n    p = z.next_in_index;\n    n = z.avail_in;\n    b = s.bitb;\n    k = s.bitk;\n    q = s.write;\n    m = q < s.read ? s.read - q - 1 : s.end - q;\n\n    // process input and output based on current state\n    while (true) {\n      switch (this.mode) {\n        // waiting for \"i:\"=input, \"o:\"=output, \"x:\"=nothing\n        case IC_START: // x: set up for LEN\n          if (m >= 258 && n >= 10) {\n            s.bitb = b;\n            s.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            s.write = q;\n            r = this.inflate_fast(this.lbits, this.dbits, this.ltree, this.ltree_index, this.dtree, this.dtree_index, s, z);\n            p = z.next_in_index;\n            n = z.avail_in;\n            b = s.bitb;\n            k = s.bitk;\n            q = s.write;\n            m = q < s.read ? s.read - q - 1 : s.end - q;\n\n            if (r != Z_OK) {\n              this.mode = r == Z_STREAM_END ? IC_WASH : IC_BADCODE;\n              break;\n            }\n          }\n\n          this.need = this.lbits;\n          this.tree = this.ltree;\n          this.tree_index = this.ltree_index;\n\n          this.mode = IC_LEN;\n        case IC_LEN: // i: get length/literal/eob next\n          j = this.need;\n\n          while (k < (j)) {\n            if (n != 0) {\n              r = Z_OK;\n            } else {\n              s.bitb = b;\n              s.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              s.write = q;\n              return s.inflate_flush(z, r);\n            }\n\n            n--;\n            b |= (z.next_in[p++] & 0xff) << k;\n            k += 8;\n          }\n\n          tindex = (this.tree_index + (b & inflate_mask[j])) * 3;\n\n          b >>>= (this.tree[tindex + 1]);\n          k -= (this.tree[tindex + 1]);\n\n          e = this.tree[tindex];\n\n          if (e == 0) { // literal\n            this.lit = this.tree[tindex + 2];\n            this.mode = IC_LIT;\n            break;\n          }\n\n          if ((e & 16) != 0) { // length\n            this.get = e & 15;\n            this.len = this.tree[tindex + 2];\n            this.mode = IC_LENEXT;\n            break;\n          }\n\n          if ((e & 64) == 0) { // next table\n            this.need = e;\n            this.tree_index = tindex / 3 + this.tree[tindex + 2];\n            break;\n          }\n\n          if ((e & 32) != 0) { // end of block\n            this.mode = IC_WASH;\n            break;\n          }\n\n          this.mode = IC_BADCODE; // invalid code\n          z.msg = \"invalid literal/length code\";\n          r = Z_DATA_ERROR;\n\n          s.bitb = b;\n          s.bitk = k;\n          z.avail_in = n;\n          z.total_in += p - z.next_in_index;\n          z.next_in_index = p;\n          s.write = q;\n          return s.inflate_flush(z, r);\n        case IC_LENEXT: // i: getting length extra (have base)\n          j = this.get;\n\n          while (k < (j)) {\n            if (n != 0) {\n              r = Z_OK;\n            } else {\n              s.bitb = b;\n              s.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              s.write = q;\n              return s.inflate_flush(z, r);\n            }\n\n            n--;\n            b |= (z.next_in[p++] & 0xff) << k;\n            k += 8;\n          }\n\n          this.len += (b & inflate_mask[j]);\n\n          b >>= j;\n          k -= j;\n\n          this.need = this.dbits;\n          this.tree = this.dtree;\n          this.tree_index = this.dtree_index;\n          this.mode = IC_DIST;\n        case IC_DIST: // i: get distance next\n          j = this.need;\n\n          while (k < (j)) {\n            if (n != 0) {\n              r = Z_OK;\n            } else {\n              s.bitb = b;\n              s.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              s.write = q;\n              return s.inflate_flush(z, r);\n            }\n\n            n--;\n            b |= (z.next_in[p++] & 0xff) << k;\n            k += 8;\n          }\n\n          tindex = (this.tree_index + (b & inflate_mask[j])) * 3;\n\n          b >>= this.tree[tindex + 1];\n          k -= this.tree[tindex + 1];\n\n          e = (this.tree[tindex]);\n\n          if ((e & 16) != 0) { // distance\n            this.get = e & 15;\n            this.dist = this.tree[tindex + 2];\n            this.mode = IC_DISTEXT;\n            break;\n          }\n\n          if ((e & 64) == 0) { // next table\n            this.need = e;\n            this.tree_index = tindex / 3 + this.tree[tindex + 2];\n            break;\n          }\n\n          this.mode = IC_BADCODE; // invalid code\n          z.msg = \"invalid distance code\";\n          r = Z_DATA_ERROR;\n\n          s.bitb = b;\n          s.bitk = k;\n          z.avail_in = n;\n          z.total_in += p - z.next_in_index;\n          z.next_in_index = p;\n          s.write = q;\n          return s.inflate_flush(z, r);\n        case IC_DISTEXT: // i: getting distance extra\n          j = this.get;\n\n          while (k < (j)) {\n            if (n != 0) {\n              r = Z_OK;\n            } else {\n              s.bitb = b;\n              s.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              s.write = q;\n              return s.inflate_flush(z, r);\n            }\n\n            n--;\n            b |= (z.next_in[p++] & 0xff) << k;\n            k += 8;\n          }\n\n          this.dist += (b & inflate_mask[j]);\n\n          b >>= j;\n          k -= j;\n\n          this.mode = IC_COPY;\n        case IC_COPY: // o: copying bytes in window, waiting for space\n          f = q - this.dist;\n\n          while (f < 0) { // modulo window size-\"while\" instead\n            f += s.end; // of \"if\" handles invalid distances\n          }\n\n          while (this.len != 0) {\n            if (m == 0) {\n              if (q == s.end && s.read != 0) {\n                q = 0;\n                m = q < s.read ? s.read - q - 1 : s.end - q;\n              }\n\n              if (m == 0) {\n                s.write = q;\n                r = s.inflate_flush(z, r);\n                q = s.write;\n                m = q < s.read ? s.read - q - 1 : s.end - q;\n\n                if (q == s.end && s.read != 0) {\n                  q = 0;\n                  m = q < s.read ? s.read - q - 1 : s.end - q;\n                }\n\n                if (m == 0) {\n                  s.bitb = b;\n                  s.bitk = k;\n                  z.avail_in = n;\n                  z.total_in += p - z.next_in_index;\n                  z.next_in_index = p;\n                  s.write = q;\n                  return s.inflate_flush(z, r);\n                }\n              }\n            }\n\n            s.window[q++] = s.window[f++];\n            m--;\n\n            if (f == s.end) {\n              f = 0;\n            }\n\n            this.len--;\n          }\n\n          this.mode = IC_START;\n          break;\n        case IC_LIT: // o: got literal, waiting for output space\n          if (m == 0) {\n            if (q == s.end && s.read != 0) {\n              q = 0;\n              m = q < s.read ? s.read - q - 1 : s.end - q;\n            }\n\n            if (m == 0) {\n              s.write = q;\n              r = s.inflate_flush(z, r);\n              q = s.write;\n              m = q < s.read ? s.read - q - 1 : s.end - q;\n\n              if (q == s.end && s.read != 0) {\n                q = 0;\n                m = q < s.read ? s.read - q - 1 : s.end - q;\n              }\n\n              if (m == 0) {\n                s.bitb = b;\n                s.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                s.write = q;\n                return s.inflate_flush(z, r);\n              }\n            }\n          }\n\n          r = Z_OK;\n\n          s.window[q++] = this.lit;\n          m--;\n\n          this.mode = IC_START;\n          break;\n        case IC_WASH: // o: got eob, possibly more output\n          if (k > 7) { // return unused byte, if any\n            k -= 8;\n            n++;\n            p--; // can always return one\n          }\n\n          s.write = q;\n          r = s.inflate_flush(z, r);\n          q = s.write;\n          m = q < s.read ? s.read - q - 1 : s.end - q;\n\n          if (s.read != s.write) {\n            s.bitb = b;\n            s.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            s.write = q;\n            return s.inflate_flush(z, r);\n          }\n\n          this.mode = IC_END;\n        case IC_END:\n          r = Z_STREAM_END;\n          s.bitb = b;\n          s.bitk = k;\n          z.avail_in = n;\n          z.total_in += p - z.next_in_index;\n          z.next_in_index = p;\n          s.write = q;\n          return s.inflate_flush(z, r);\n        case IC_BADCODE: // x: got error\n\n          r = Z_DATA_ERROR;\n\n          s.bitb = b;\n          s.bitk = k;\n          z.avail_in = n;\n          z.total_in += p - z.next_in_index;\n          z.next_in_index = p;\n          s.write = q;\n          return s.inflate_flush(z, r);\n        default:\n          r = Z_STREAM_ERROR;\n\n          s.bitb = b;\n          s.bitk = k;\n          z.avail_in = n;\n          z.total_in += p - z.next_in_index;\n          z.next_in_index = p;\n          s.write = q;\n          return s.inflate_flush(z, r);\n      }\n    }\n  };\n\n  InfCodes.prototype.free = function(z) {\n    //  ZFREE(z, c);\n  };\n\n  // Called with number of bytes left to write in window at least 258\n  // (the maximum string length) and number of input bytes available\n  // at least ten. The ten bytes are six bytes for the longest length/\n  // distance pair plus four bytes for overloading the bit buffer.\n\n  InfCodes.prototype.inflate_fast = function(bl, bd, tl, tl_index, td, td_index, s, z) {\n    var t; // temporary pointer\n    var tp; // temporary pointer (int[])\n    var tp_index; // temporary pointer\n    var e; // extra bits or operation\n    var b; // bit buffer\n    var k; // bits in bit buffer\n    var p; // input data pointer\n    var n; // bytes available there\n    var q; // output window write pointer\n    var m; // bytes to end of window or read pointer\n    var ml; // mask for literal/length tree\n    var md; // mask for distance tree\n    var c; // bytes to copy\n    var d; // distance back to copy from\n    var r; // copy source pointer\n\n    var tp_index_t_3; // (tp_index+t)*3\n\n    // load input, output, bit values\n    p = z.next_in_index;\n    n = z.avail_in;\n    b = s.bitb;\n    k = s.bitk;\n    q = s.write;\n    m = q < s.read ? s.read - q - 1 : s.end - q;\n\n    // initialize masks\n    ml = inflate_mask[bl];\n    md = inflate_mask[bd];\n\n    // do until not enough input or output space for fast loop\n    do { // assume called with m >= 258 && n >= 10\n      // get literal/length code\n      while (k < (20)) { // max bits for literal/length code\n        n--;\n        b |= (z.next_in[p++] & 0xff) << k;\n        k += 8;\n      }\n\n      t = b & ml;\n      tp = tl;\n      tp_index = tl_index;\n      tp_index_t_3 = (tp_index + t) * 3;\n\n      if ((e = tp[tp_index_t_3]) == 0) {\n        b >>= (tp[tp_index_t_3 + 1]);\n        k -= (tp[tp_index_t_3 + 1]);\n\n        s.window[q++] = tp[tp_index_t_3 + 2];\n        m--;\n        continue;\n      }\n\n      do {\n        b >>= (tp[tp_index_t_3 + 1]);\n        k -= (tp[tp_index_t_3 + 1]);\n\n        if ((e & 16) != 0) {\n          e &= 15;\n          c = tp[tp_index_t_3 + 2] + (b & inflate_mask[e]);\n\n          b >>= e;\n          k -= e;\n\n          // decode distance base of block to copy\n          while (k < (15)) { // max bits for distance code\n            n--;\n            b |= (z.next_in[p++] & 0xff) << k;\n            k += 8;\n          }\n\n          t = b & md;\n          tp = td;\n          tp_index = td_index;\n          tp_index_t_3 = (tp_index + t) * 3;\n          e = tp[tp_index_t_3];\n\n          do {\n            b >>= (tp[tp_index_t_3 + 1]);\n            k -= (tp[tp_index_t_3 + 1]);\n\n            if ((e & 16) != 0) {\n              // get extra bits to add to distance base\n              e &= 15;\n\n              while (k < (e)) { // get extra bits (up to 13)\n                n--;\n                b |= (z.next_in[p++] & 0xff) << k;\n                k += 8;\n              }\n\n              d = tp[tp_index_t_3 + 2] + (b & inflate_mask[e]);\n\n              b >>= (e);\n              k -= (e);\n\n              // do the copy\n              m -= c;\n\n              if (q >= d) { // offset before dest\n                //  just copy\n                r = q - d;\n\n                if (q - r > 0 && 2 > (q - r)) {\n                  s.window[q++] = s.window[r++]; // minimum count is three,\n                  s.window[q++] = s.window[r++]; // so unroll loop a little\n                  c -= 2;\n                } else {\n                  s.window[q++] = s.window[r++]; // minimum count is three,\n                  s.window[q++] = s.window[r++]; // so unroll loop a little\n                  c -= 2;\n                }\n              } else { // else offset after destination\n                r = q - d;\n\n                do {\n                  r += s.end; // force pointer in window\n                } while (r < 0); // covers invalid distances\n\n                e = s.end - r;\n\n                if (c > e) { // if source crosses,\n                  c -= e; // wrapped copy\n\n                  if (q - r > 0 && e > (q - r)) {\n                    do {\n                      s.window[q++] = s.window[r++];\n                    } while (--e != 0);\n                  } else {\n                    arrayCopy(s.window, r, s.window, q, e);\n                    q += e;\n                    r += e;\n                    e = 0;\n                  }\n\n                  r = 0; // copy rest from start of window\n                }\n              }\n\n              // copy all or what's left\n              do {\n                s.window[q++] = s.window[r++];\n              } while (--c != 0);\n\n              break;\n            } else if ((e & 64) == 0) {\n              t += tp[tp_index_t_3 + 2];\n              t += (b & inflate_mask[e]);\n              tp_index_t_3 = (tp_index + t) * 3;\n              e = tp[tp_index_t_3];\n            } else {\n              z.msg = \"invalid distance code\";\n\n              c = z.avail_in - n;\n              c = (k >> 3) < c ? k >> 3 : c;\n              n += c;\n              p -= c;\n              k -= c << 3;\n\n              s.bitb = b;\n              s.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              s.write = q;\n\n              return Z_DATA_ERROR;\n            }\n          } while (true);\n\n          break;\n        }\n\n        if ((e & 64) == 0) {\n          t += tp[tp_index_t_3 + 2];\n          t += (b & inflate_mask[e]);\n          tp_index_t_3 = (tp_index + t) * 3;\n\n          if ((e = tp[tp_index_t_3]) == 0) {\n            b >>= (tp[tp_index_t_3 + 1]);\n            k -= (tp[tp_index_t_3 + 1]);\n\n            s.window[q++] = tp[tp_index_t_3 + 2];\n            m--;\n            break;\n          }\n        } else if ((e & 32) != 0) {\n          c = z.avail_in - n;\n          c = (k >> 3) < c ? k >> 3 : c;\n          n += c;\n          p -= c;\n          k -= c << 3;\n\n          s.bitb = b;\n          s.bitk = k;\n          z.avail_in = n;\n          z.total_in += p - z.next_in_index;\n          z.next_in_index = p;\n          s.write = q;\n\n          return Z_STREAM_END;\n        } else {\n          z.msg = \"invalid literal/length code\";\n\n          c = z.avail_in - n;\n          c = (k >> 3) < c ? k >> 3 : c;\n          n += c;\n          p -= c;\n          k -= c << 3;\n\n          s.bitb = b;\n          s.bitk = k;\n          z.avail_in = n;\n          z.total_in += p - z.next_in_index;\n          z.next_in_index = p;\n          s.write = q;\n\n          return Z_DATA_ERROR;\n        }\n      } while (true);\n    } while (m >= 258 && n >= 10);\n\n    // not enough input or output--restore pointers and return\n    c = z.avail_in - n;\n    c = (k >> 3) < c ? k >> 3 : c;\n    n += c;\n    p -= c;\n    k -= c << 3;\n\n    s.bitb = b;\n    s.bitk = k;\n    z.avail_in = n;\n    z.total_in += p - z.next_in_index;\n    z.next_in_index = p;\n    s.write = q;\n\n    return Z_OK;\n  };\n\n  //\n  // InfTree.java\n  //\n\n  function InfTree() {}\n\n  InfTree.prototype.huft_build = function(b, bindex, n, s, d, e, t, m, hp, hn, v) {\n    // Given a list of code lengths and a maximum table size, make a set of\n    // tables to decode that set of codes.  Return Z_OK on success, Z_BUF_ERROR\n    // if the given code set is incomplete (the tables are still built in this\n    // case), Z_DATA_ERROR if the input is invalid (an over-subscribed set of\n    // lengths), or Z_MEM_ERROR if not enough memory.\n\n    var a; // counter for codes of length k\n    var f; // i repeats in table every f entries\n    var g; // maximum code length\n    var h; // table level\n    var i; // counter, current code\n    var j; // counter\n    var k; // number of bits in current code\n    var l; // bits per table (returned in m)\n    var mask; // (1 << w) - 1, to avoid cc -O bug on HP\n    var p; // pointer into c[], b[], or v[]\n    var q; // points to current table\n    var w; // bits before this table == (l * h)\n    var xp; // pointer into x\n    var y; // number of dummy codes added\n    var z; // number of entries in current table\n\n    // Generate counts for each bit length\n\n    p = 0;\n    i = n;\n\n    do {\n      this.c[b[bindex + p]]++;\n      p++;\n      i--; // assume all entries <= BMAX\n    } while (i != 0);\n\n    if (this.c[0] == n) { // null input--all zero length codes\n      t[0] = -1;\n      m[0] = 0;\n      return Z_OK;\n    }\n\n    // Find minimum and maximum length, bound *m by those\n    l = m[0];\n\n    for (j = 1; j <= BMAX; j++) {\n      if (this.c[j] != 0) {\n        break;\n      }\n    }\n\n    k = j; // minimum code length\n\n    if (l < j) {\n      l = j;\n    }\n\n    for (i = BMAX; i != 0; i--) {\n      if (this.c[i] != 0) {\n        break;\n      }\n    }\n\n    g = i; // maximum code length\n\n    if (l > i) {\n      l = i;\n    }\n\n    m[0] = l;\n\n    // Adjust last length count to fill out codes, if needed\n    for (y = 1 << j; j < i; j++, y <<= 1) {\n      if ((y -= this.c[j]) < 0) {\n        return Z_DATA_ERROR;\n      }\n    }\n\n    if ((y -= this.c[i]) < 0) {\n      return Z_DATA_ERROR;\n    }\n\n    this.c[i] += y;\n\n    // Generate starting offsets into the value table for each length\n    this.x[1] = j = 0;\n    p = 1;\n    xp = 2;\n\n    while (--i != 0) { // note that i == g from above\n      this.x[xp] = (j += this.c[p]);\n      xp++;\n      p++;\n    }\n\n    // Make a table of values in order of bit lengths\n    i = 0;\n    p = 0;\n\n    do {\n      if ((j = b[bindex + p]) != 0) {\n        this.v[this.x[j]++] = i;\n      }\n      p++;\n    } while (++i < n);\n\n    n = this.x[g]; // set n to length of v\n\n    // Generate the Huffman codes and for each, make the table entries\n    this.x[0] = i = 0; // first Huffman code is zero\n    p = 0; // grab values in bit order\n    h = -1; // no tables yet--level -1\n    w = -l; // bits decoded == (l * h)\n    this.u[0] = 0; // just to keep compilers happy\n    q = 0; // ditto\n    z = 0; // ditto\n\n    // go through the bit lengths (k already is bits in shortest code)\n    for (; k <= g; k++) {\n      a = this.c[k];\n\n      while (a-- != 0) {\n        // here i is the Huffman code of length k bits for value *p\n        // make tables up to required level\n        while (k > w + l) {\n          h++;\n          w += l; // previous table always l bits\n          // compute minimum size table less than or equal to l bits\n          z = g - w;\n          z = (z > l) ? l : z; // table size upper limit\n\n          if ((f = 1 << (j = k - w)) > a + 1) { // try a k-w bit table\n            // too few codes for k-w bit table\n            f -= a + 1; // deduct codes from patterns left\n            xp = k;\n\n            if (j < z) {\n              while (++j < z) { // try smaller tables up to z bits\n                if ((f <<= 1) <= this.c[++xp]) {\n                  break; // enough codes to use up j bits\n                }\n\n                f -= this.c[xp]; // else deduct codes from patterns\n              }\n            }\n          }\n\n          z = 1 << j; // table entries for j-bit table\n\n          // allocate new table\n          if (this.hn[0] + z > MANY) { // (note: doesn't matter for fixed)\n            return Z_DATA_ERROR; // overflow of MANY\n          }\n\n          this.u[h] = q = /*hp+*/ this.hn[0]; // DEBUG\n          this.hn[0] += z;\n\n          // connect to last table, if there is one\n          if (h != 0) {\n            this.x[h] = i; // save pattern for backing up\n            this.r[0] = j; // bits in this table\n            this.r[1] = l; // bits to dump before this table\n            j = i >>> (w - l);\n            this.r[2] = (q - this.u[h - 1] - j); // offset to this table\n            arrayCopy(this.r, 0, hp, (this.u[h - 1] + j) * 3, 3); // connect to last table\n          } else {\n            t[0] = q; // first table is returned result\n          }\n        }\n\n        // set up table entry in r\n        this.r[1] = (k - w);\n\n        if (p >= n) {\n          this.r[0] = 128 + 64; // out of values--invalid code\n        } else if (v[p] < s) {\n          this.r[0] = (this.v[p] < 256 ? 0 : 32 + 64); // 256 is end-of-block\n          this.r[2] = this.v[p++]; // simple code is just the value\n        } else {\n          this.r[0] = (e[this.v[p] - s] + 16 + 64); // non-simple--look up in lists\n          this.r[2] = d[this.v[p++] - s];\n        }\n\n        // fill code-like entries with r\n        f = 1 << (k - w);\n\n        for (j = i >>> w; j < z; j += f) {\n          arrayCopy(this.r, 0, hp, (q + j) * 3, 3);\n        }\n\n        // backwards increment the k-bit code i\n        for (j = 1 << (k - 1); (i & j) != 0; j >>>= 1) {\n          i ^= j;\n        }\n\n        i ^= j;\n\n        // backup over finished tables\n        mask = (1 << w) - 1; // needed on HP, cc -O bug\n\n        while ((i & mask) != this.x[h]) {\n          h--; // don't need to update q\n          w -= l;\n          mask = (1 << w) - 1;\n        }\n      }\n    }\n\n    // Return Z_BUF_ERROR if we were given an incomplete table\n    return y != 0 && g != 1 ? Z_BUF_ERROR : Z_OK;\n  };\n\n  InfTree.prototype.inflate_trees_bits = function(c, bb, tb, hp, z) {\n    var result;\n    this.initWorkArea(19);\n    this.hn[0] = 0;\n    result = this.huft_build(c, 0, 19, 19, null, null, tb, bb, hp, this.hn, this.v);\n\n    if (result == Z_DATA_ERROR) {\n      z.msg = \"oversubscribed dynamic bit lengths tree\";\n    } else if (result == Z_BUF_ERROR || bb[0] == 0) {\n      z.msg = \"incomplete dynamic bit lengths tree\";\n      result = Z_DATA_ERROR;\n    }\n\n    return result;\n  };\n\n  InfTree.prototype.inflate_trees_dynamic = function(nl, nd, c, bl, bd, tl, td, hp, z) {\n    var result;\n\n    // build literal/length tree\n    this.initWorkArea(288);\n    this.hn[0] = 0;\n    result = this.huft_build(c, 0, nl, 257, cplens, cplext, tl, bl, hp, this.hn, this.v);\n\n    if (result != Z_OK || bl[0] == 0) {\n      if (result == Z_DATA_ERROR) {\n        z.msg = \"oversubscribed literal/length tree\";\n      } else if (result != Z_MEM_ERROR) {\n        z.msg = \"incomplete literal/length tree\";\n        result = Z_DATA_ERROR;\n      }\n\n      return result;\n    }\n\n    // build distance tree\n    this.initWorkArea(288);\n    result = this.huft_build(c, nl, nd, 0, cpdist, cpdext, td, bd, hp, this.hn, this.v);\n\n    if (result != Z_OK || (bd[0] == 0 && nl > 257)) {\n      if (result == Z_DATA_ERROR) {\n        z.msg = \"oversubscribed distance tree\";\n      } else if (result == Z_BUF_ERROR) {\n        z.msg = \"incomplete distance tree\";\n        result = Z_DATA_ERROR;\n      } else if (result != Z_MEM_ERROR) {\n        z.msg = \"empty distance tree with lengths\";\n        result = Z_DATA_ERROR;\n      }\n\n      return result;\n    }\n\n    return Z_OK;\n  };\n\n  /*\n    static int inflate_trees_fixed(int[] bl,  //literal desired/actual bit depth\n                                   int[] bd,  //distance desired/actual bit depth\n                                   int[][] tl,//literal/length tree result\n                                   int[][] td,//distance tree result\n                                   ZStream z  //for memory allocation\n    ){\n\n  */\n\n  function inflate_trees_fixed(bl, bd, tl, td, z) {\n    bl[0] = fixed_bl;\n    bd[0] = fixed_bd;\n    tl[0] = fixed_tl;\n    td[0] = fixed_td;\n    return Z_OK;\n  }\n\n  InfTree.prototype.initWorkArea = function(vsize) {\n    if (this.hn == null) {\n      this.hn = new Int32Array(1);\n      this.v = new Int32Array(vsize);\n      this.c = new Int32Array(BMAX + 1);\n      this.r = new Int32Array(3);\n      this.u = new Int32Array(BMAX);\n      this.x = new Int32Array(BMAX + 1);\n    }\n\n    if (this.v.length < vsize) {\n      this.v = new Int32Array(vsize);\n    }\n\n    for (var i = 0; i < vsize; i++) {\n      this.v[i] = 0;\n    }\n\n    for (var i = 0; i < BMAX + 1; i++) {\n      this.c[i] = 0;\n    }\n\n    for (var i = 0; i < 3; i++) {\n      this.r[i] = 0;\n    }\n\n    //  for(int i=0; i<BMAX; i++){u[i]=0;}\n    arrayCopy(this.c, 0, this.u, 0, BMAX);\n    //  for(int i=0; i<BMAX+1; i++){x[i]=0;}\n    arrayCopy(this.c, 0, this.x, 0, BMAX + 1);\n  };\n\n  var testArray = new Uint8Array(1);\n  var hasSubarray = (typeof testArray.subarray === 'function');\n  var hasSlice = false; /* (typeof testArray.slice === 'function'); */ // Chrome slice performance is so dire that we're currently not using it...\n\n  function arrayCopy(src, srcOffset, dest, destOffset, count) {\n    if (count == 0) {\n      return;\n    }\n\n    if (!src) {\n      throw \"Undef src\";\n    } else if (!dest) {\n      throw \"Undef dest\";\n    }\n\n    if (srcOffset == 0 && count == src.length) {\n      arrayCopy_fast(src, dest, destOffset);\n    } else if (hasSubarray) {\n      arrayCopy_fast(src.subarray(srcOffset, srcOffset + count), dest, destOffset);\n    } else if (src.BYTES_PER_ELEMENT == 1 && count > 100) {\n      arrayCopy_fast(new Uint8Array(src.buffer, src.byteOffset + srcOffset, count), dest, destOffset);\n    } else {\n      arrayCopy_slow(src, srcOffset, dest, destOffset, count);\n    }\n  }\n\n  function arrayCopy_slow(src, srcOffset, dest, destOffset, count) {\n    // dlog('_slow call: srcOffset=' + srcOffset + '; destOffset=' + destOffset + '; count=' + count);\n    for (var i = 0; i < count; ++i) {\n      dest[destOffset + i] = src[srcOffset + i];\n    }\n  }\n\n  function arrayCopy_fast(src, dest, destOffset) {\n    dest.set(src, destOffset);\n  }\n\n  // largest prime smaller than 65536\n  var ADLER_BASE = 65521;\n  // NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1\n  var ADLER_NMAX = 5552;\n\n  function adler32(adler, /* byte[] */ buf, index, len) {\n    if (buf == null) {\n      return 1;\n    }\n\n    var s1 = adler & 0xffff;\n    var s2 = (adler >> 16) & 0xffff;\n    var k;\n\n    while (len > 0) {\n      k = len < ADLER_NMAX ? len : ADLER_NMAX;\n      len -= k;\n\n      while (k >= 16) {\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        s1 += buf[index++] & 0xff;\n        s2 += s1;\n        k -= 16;\n      }\n\n      if (k != 0) {\n        do {\n          s1 += buf[index++] & 0xff;\n          s2 += s1;\n        } while (--k != 0);\n      }\n\n      s1 %= ADLER_BASE;\n      s2 %= ADLER_BASE;\n    }\n\n    return (s2 << 16) | s1;\n  }\n\n  function inflateBuffer(buffer, start, length, afterUncOffset) {\n    if (!start) {\n      buffer = new Uint8Array(buffer);\n    } else if (!length) {\n      buffer = new Uint8Array(buffer, start, buffer.byteLength - start);\n    } else {\n      buffer = new Uint8Array(buffer, start, length);\n    }\n\n    var z = new ZStream();\n    z.inflateInit(DEF_WBITS, true);\n    z.next_in = buffer;\n    z.next_in_index = 0;\n    z.avail_in = buffer.length;\n\n    var oBlockList = [];\n    var totalSize = 0;\n\n    while (true) {\n      var obuf = new Uint8Array(32000);\n      z.next_out = obuf;\n      z.next_out_index = 0;\n      z.avail_out = obuf.length;\n      var status = z.inflate(Z_NO_FLUSH);\n\n      if (status != Z_OK && status != Z_STREAM_END && status != Z_BUF_ERROR) {\n        throw z.msg;\n      }\n\n      if (z.avail_out != 0) {\n        var newob = new Uint8Array(obuf.length - z.avail_out);\n        arrayCopy(obuf, 0, newob, 0, (obuf.length - z.avail_out));\n        obuf = newob;\n      }\n\n      oBlockList.push(obuf);\n      totalSize += obuf.length;\n\n      if (status == Z_STREAM_END || status == Z_BUF_ERROR) {\n        break;\n      }\n    }\n\n    if (afterUncOffset) {\n      afterUncOffset[0] = (start || 0) + z.next_in_index;\n    }\n\n    if (oBlockList.length == 1) {\n      return oBlockList[0].buffer;\n    } else {\n      var out = new Uint8Array(totalSize);\n      var cursor = 0;\n\n      for (var i = 0; i < oBlockList.length; ++i) {\n        var b = oBlockList[i];\n        arrayCopy(b, 0, out, cursor, b.length);\n        cursor += b.length;\n      }\n\n      return out.buffer;\n    }\n  }\n\n  /*-------------------------------------------------------------------------------------------------------------------------------*/\n\n  //\n  // Dalliance Genome Explorer\n  // (c) Thomas Down 2006-2011\n  //\n  // js: common support for lh3's file formats\n  //\n\n  function Vob(b, o) {\n    this.block = b;\n    this.offset = o;\n  }\n\n  Vob.prototype.toString = function() {\n    return '' + this.block + ':' + this.offset;\n  };\n\n  function readVob(ba, offset, allowZero) {\n    var block = ((ba[offset + 6] & 0xff) * 0x100000000) + ((ba[offset + 5] & 0xff) * 0x1000000) + ((ba[offset + 4] & 0xff) * 0x10000) + ((ba[offset + 3] & 0xff) * 0x100) + ((ba[offset + 2] & 0xff));\n    var bint = (ba[offset + 1] << 8) | (ba[offset]);\n\n    if (block == 0 && bint == 0 && !allowZero) {\n      return null; // Should only happen in the linear index?\n    } else {\n      return new Vob(block, bint);\n    }\n  }\n\n  function unbgzf(data, lim) {\n    lim = Math.min(lim || 1, data.byteLength - 50);\n    var oBlockList = [];\n    var ptr = [0];\n    var totalSize = 0;\n\n    while (ptr[0] < lim) {\n      var ba = new Uint8Array(data, ptr[0], 12); // FIXME is this enough for all credible BGZF block headers?\n      var xlen = (ba[11] << 8) | (ba[10]);\n      // dlog('xlen[' + (ptr[0]) +']=' + xlen);\n      var unc = inflateBuffer(data, 12 + xlen + ptr[0], Math.min(65536, data.byteLength - 12 - xlen - ptr[0]), ptr);\n      ptr[0] += 8;\n      totalSize += unc.byteLength;\n      oBlockList.push(unc);\n    }\n\n    if (oBlockList.length == 1) {\n      return oBlockList[0];\n    } else {\n      var out = new Uint8Array(totalSize);\n      var cursor = 0;\n\n      for (var i = 0; i < oBlockList.length; ++i) {\n        var b = new Uint8Array(oBlockList[i]);\n        arrayCopy(b, 0, out, cursor, b.length);\n        cursor += b.length;\n      }\n\n      return out.buffer;\n    }\n  }\n\n  function Chunk(minv, maxv) {\n    this.minv = minv;\n    this.maxv = maxv;\n  }\n\n\n  //\n  // Binning (transliterated from SAM1.3 spec)\n  //\n\n  /* calculate bin given an alignment covering [beg,end) (zero-based, half-close-half-open) */\n  function reg2bin(beg, end) {\n    --end;\n\n    if (beg >> 14 == end >> 14) {\n      return ((1 << 15) - 1) / 7 + (beg >> 14);\n    }\n\n    if (beg >> 17 == end >> 17) {\n      return ((1 << 12) - 1) / 7 + (beg >> 17);\n    }\n\n    if (beg >> 20 == end >> 20) {\n      return ((1 << 9) - 1) / 7 + (beg >> 20);\n    }\n\n    if (beg >> 23 == end >> 23) {\n      return ((1 << 6) - 1) / 7 + (beg >> 23);\n    }\n\n    if (beg >> 26 == end >> 26) {\n      return ((1 << 3) - 1) / 7 + (beg >> 26);\n    }\n\n    return 0;\n  }\n\n  /* calculate the list of bins that may overlap with region [beg,end) (zero-based) */\n  var MAX_BIN = (((1 << 18) - 1) / 7);\n\n  function reg2bins(beg, end) {\n    var i = 0, k, list = [];\n    --end;\n    list.push(0);\n\n    for (k = 1 + (beg >> 26); k <= 1 + (end >> 26); ++k) {\n      list.push(k);\n    }\n\n    for (k = 9 + (beg >> 23); k <= 9 + (end >> 23); ++k) {\n      list.push(k);\n    }\n\n    for (k = 73 + (beg >> 20); k <= 73 + (end >> 20); ++k) {\n      list.push(k);\n    }\n\n    for (k = 585 + (beg >> 17); k <= 585 + (end >> 17); ++k) {\n      list.push(k);\n    }\n\n    for (k = 4681 + (beg >> 14); k <= 4681 + (end >> 14); ++k) {\n      list.push(k);\n    }\n\n    return list;\n  }\n\n  /*-------------------------------------------------------------------------------------------------------------------------------*/\n\n  //\n  // Dalliance Genome Explorer\n  // (c) Thomas Down 2006-2011\n  //\n  // bin.js general binary data support\n  //\n\n  function shallowCopy(o) {\n    var n = {};\n\n    for (var k in o) {\n      n[k] = o[k];\n    }\n\n    return n;\n  }\n\n  function BlobFetchable(b) {\n    this.blob = b;\n  }\n\n  BlobFetchable.prototype.slice = function(start, length) {\n    var b;\n\n    if (this.blob.slice) {\n      if (length) {\n        b = this.blob.slice(start, start + length);\n      } else {\n        b = this.blob.slice(start);\n      }\n    } else {\n      if (length) {\n        b = this.blob.webkitSlice(start, start + length);\n      } else {\n        b = this.blob.webkitSlice(start);\n      }\n    }\n\n    return new BlobFetchable(b);\n  };\n\n  BlobFetchable.prototype.salted = function() {\n    return this;\n  };\n\n  if (typeof(FileReader) !== 'undefined') {\n    // console.log('defining async BlobFetchable.fetch');\n\n    BlobFetchable.prototype.fetch = function(callback) {\n      var reader = new FileReader();\n\n      reader.onloadend = function(ev) {\n        callback(bstringToBuffer(reader.result));\n      };\n\n      reader.readAsBinaryString(this.blob);\n    };\n  } else {\n    // if (console && console.log)\n    //    console.log('defining sync BlobFetchable.fetch');\n\n    BlobFetchable.prototype.fetch = function(callback) {\n      var reader = new FileReaderSync();\n\n      try {\n        var res = reader.readAsArrayBuffer(this.blob);\n        callback(res);\n      } catch (e) {\n        callback(null, e);\n      }\n    };\n  }\n\n  function URLFetchable(url, start, end, opts) {\n    if (!opts) {\n      if (typeof start === 'object') {\n        opts = start;\n        start = undefined;\n      } else {\n        opts = {};\n      }\n    }\n\n    this.url = url;\n    this.start = start || 0;\n\n    if (end) {\n      this.end = end;\n    }\n\n    this.opts = opts;\n  }\n\n  URLFetchable.prototype.slice = function(s, l) {\n    if (s < 0) {\n      throw 'Bad slice ' + s;\n    }\n\n    var ns = this.start, ne = this.end;\n\n    if (ns && s) {\n      ns = ns + s;\n    } else {\n      ns = s || ns;\n    }\n\n    if (l && ns) {\n      ne = ns + l - 1;\n    } else {\n      ne = ne || l - 1;\n    }\n\n    return new URLFetchable(this.url, ns, ne, this.opts);\n  };\n\n  var isSafari = navigator.userAgent.indexOf('Safari') >= 0 && navigator.userAgent.indexOf('Chrome') < 0;\n\n  URLFetchable.prototype.fetchAsText = function(callback) {\n    var thisB = this;\n\n    this.getURL().then(function(url) {\n      try {\n        var req = new XMLHttpRequest();\n        var length;\n\n        req.open('GET', url, true);\n\n        if (thisB.end) {\n          if (thisB.end - thisB.start > 100000000) {\n            throw 'Monster fetch!';\n          }\n\n          req.setRequestHeader('Range', 'bytes=' + thisB.start + '-' + thisB.end);\n          length = thisB.end - thisB.start + 1;\n        }\n\n        req.onreadystatechange = function() {\n          if (req.readyState == 4) {\n            if (req.status == 200 || req.status == 206) {\n              return callback(req.responseText);\n            } else {\n              return callback(null);\n            }\n          }\n        };\n\n        if (thisB.opts.credentials) {\n          req.withCredentials = true;\n        }\n\n        req.send('');\n      } catch (e) {\n        return callback(null);\n      }\n    }).fail(function(err) {\n      console.log(err);\n      return callback(null, err);\n    });\n  };\n\n  URLFetchable.prototype.salted = function() {\n    var o = shallowCopy(this.opts);\n    o.salt = true;\n    return new URLFetchable(this.url, this.start, this.end, o);\n  };\n\n  URLFetchable.prototype.getURL = function() {\n    if (this.opts.resolver) {\n      return this.opts.resolver(this.url).then(function(urlOrObj) {\n        if (typeof urlOrObj === 'string') {\n          return urlOrObj;\n        } else {\n          return urlOrObj.url;\n        }\n      });\n    } else {\n      return $.Deferred().resolve(this.url);\n    }\n  };\n\n  URLFetchable.prototype.fetch = function(callback, opts) {\n    var thisB = this;\n\n    opts = opts || {};\n    var attempt = opts.attempt || 1;\n    var truncatedLength = opts.truncatedLength;\n\n    if (attempt > 3) {\n      return callback(null);\n    }\n\n    this.getURL().then(function(url) {\n      try {\n        var timeout;\n\n        if (opts.timeout && !thisB.opts.credentials) {\n          timeout = setTimeout(\n            function() {\n              console.log('timing out ' + url);\n              req.abort();\n              return callback(null, 'Timeout');\n            },\n            opts.timeout\n          );\n        }\n\n        var req = new XMLHttpRequest();\n        var length;\n\n        req.open('GET', url, true);\n        req.overrideMimeType('text/plain; charset=x-user-defined');\n\n        if (thisB.end) {\n          if (thisB.end - thisB.start > 100000000) {\n            throw 'Monster fetch!';\n          }\n\n          req.setRequestHeader('Range', 'bytes=' + thisB.start + '-' + thisB.end);\n          length = thisB.end - thisB.start + 1;\n        }\n\n        req.responseType = 'arraybuffer';\n        req.onreadystatechange = function() {\n          if (req.readyState == 4) {\n            if (timeout) {\n              clearTimeout(timeout);\n            }\n\n            if (req.status == 200 || req.status == 206) {\n              if (req.response) {\n                var bl = req.response.byteLength;\n\n                if (length && length != bl && (!truncatedLength || bl != truncatedLength)) {\n                  return thisB.fetch(callback, {\n                    attempt: attempt + 1,\n                    truncatedLength: bl\n                  });\n                } else {\n                  return callback(req.response);\n                }\n              } else if (req.mozResponseArrayBuffer) {\n                return callback(req.mozResponseArrayBuffer);\n              } else {\n                var r = req.responseText;\n\n                if (length && length != r.length && (!truncatedLength || r.length != truncatedLength)) {\n                  return thisB.fetch(callback, {\n                    attempt: attempt + 1,\n                    truncatedLength: r.length\n                  });\n                } else {\n                  return callback(bstringToBuffer(req.responseText));\n                }\n              }\n            } else {\n              return thisB.fetch(callback, {\n                attempt: attempt + 1\n              });\n            }\n          }\n        };\n\n        if (thisB.opts.credentials) {\n          req.withCredentials = true;\n        }\n        req.send('');\n      } catch (e) {\n        return callback(null);\n      }\n    }).fail(function(err) {\n      console.log(err);\n      return callback(null, err);\n    });\n  };\n\n  function bstringToBuffer(result) {\n    if (!result) {\n      return null;\n    }\n\n    var ba = new Uint8Array(result.length);\n\n    for (var i = 0; i < ba.length; ++i) {\n      ba[i] = result.charCodeAt(i);\n    }\n\n    return ba.buffer;\n  }\n\n  // Read from Uint8Array\n  function readFloat(buf, offset) {\n    var convertBuffer = new ArrayBuffer(8);\n    var ba = new Uint8Array(convertBuffer);\n    var fa = new Float32Array(convertBuffer);\n\n    ba[0] = buf[offset];\n    ba[1] = buf[offset + 1];\n    ba[2] = buf[offset + 2];\n    ba[3] = buf[offset + 3];\n\n    return fa[0];\n  }\n\n  function readInt64(ba, offset) {\n    return (ba[offset + 7] << 24) | (ba[offset + 6] << 16) | (ba[offset + 5] << 8) | (ba[offset + 4]);\n  }\n\n  function readInt(ba, offset) {\n    return (ba[offset + 3] << 24) | (ba[offset + 2] << 16) | (ba[offset + 1] << 8) | (ba[offset]);\n  }\n\n  function readShort(ba, offset) {\n    return (ba[offset + 1] << 8) | (ba[offset]);\n  }\n\n  function readByte(ba, offset) {\n    return ba[offset];\n  }\n\n  function readIntBE(ba, offset) {\n    return (ba[offset] << 24) | (ba[offset + 1] << 16) | (ba[offset + 2] << 8) | (ba[offset + 3]);\n  }\n\n  /*-------------------------------------------------------------------------------------------------------------------------------*/\n\n  //\n  // Dalliance Genome Explorer\n  // (c) Thomas Down 2006-2011\n  //\n  // bam.js: indexed binary alignments\n  //\n\n  var BAM_MAGIC = 0x14d4142;\n  var BAI_MAGIC = 0x1494142;\n\n  var BamFlags = {\n    MULTIPLE_SEGMENTS: 0x1,\n    ALL_SEGMENTS_ALIGN: 0x2,\n    SEGMENT_UNMAPPED: 0x4,\n    NEXT_SEGMENT_UNMAPPED: 0x8,\n    REVERSE_COMPLEMENT: 0x10,\n    NEXT_REVERSE_COMPLEMENT: 0x20,\n    FIRST_SEGMENT: 0x40,\n    LAST_SEGMENT: 0x80,\n    SECONDARY_ALIGNMENT: 0x100,\n    QC_FAIL: 0x200,\n    DUPLICATE: 0x400,\n    SUPPLEMENTARY: 0x800\n  };\n\n  function BamFile() {}\n\n  // Calculate the length (in bytes) of the BAI ref starting at offset.\n  // Returns {nbin, length, minBlockIndex}\n  function _getBaiRefLength(uncba, offset) {\n    var p = offset;\n    var nbin = readInt(uncba, p);\n    p += 4;\n\n    for (var b = 0; b < nbin; ++b) {\n      var bin = readInt(uncba, p);\n      var nchnk = readInt(uncba, p + 4);\n      p += 8 + (nchnk * 16);\n    }\n\n    var nintv = readInt(uncba, p);\n    p += 4;\n\n    var minBlockIndex = 1000000000;\n    var q = p;\n\n    for (var i = 0; i < nintv; ++i) {\n      var v = readVob(uncba, q);\n      q += 8;\n\n      if (v) {\n        var bi = v.block;\n        if (v.offset > 0) {\n          bi += 65536;\n        }\n\n        if (bi < minBlockIndex) {\n          minBlockIndex = bi;\n        }\n\n        break;\n      }\n    }\n\n    p += (nintv * 8);\n\n    return {\n      minBlockIndex: minBlockIndex,\n      nbin: nbin,\n      length: p - offset\n    };\n  }\n\n  function makeBam(data, bai, indexChunks, callback, attempted) {\n    // Do an initial probe on the BAM file to catch any mixed-content errors.\n    data.slice(0, 10).fetch(function(header) {\n      if (header) {\n        return makeBam2(data, bai, indexChunks, callback, attempted);\n      } else {\n        return callback(null, \"Couldn't access BAM.\");\n      }\n    }, {\n      timeout: 5000\n    });\n  }\n\n  function makeBam2(data, bai, indexChunks, callback, attempted) {\n    var bam = new BamFile();\n    bam.data = data;\n    bam.bai = bai;\n    bam.indexChunks = indexChunks;\n\n    var minBlockIndex = bam.indexChunks ? bam.indexChunks.minBlockIndex : 1000000000;\n\n    // Fills out bam.chrToIndex and bam.indexToChr based on the first few bytes of the BAM.\n    function parseBamHeader(r) {\n      if (!r) {\n        return callback(null, \"Couldn't access BAM\");\n      }\n\n      var unc = unbgzf(r, r.byteLength);\n      var uncba = new Uint8Array(unc);\n\n      var magic = readInt(uncba, 0);\n\n      if (magic != BAM_MAGIC) {\n        return callback(null, \"Not a BAM file, magic=0x\" + magic.toString(16));\n      }\n\n      var headLen = readInt(uncba, 4);\n      var header = '';\n\n      for (var i = 0; i < headLen; ++i) {\n        header += String.fromCharCode(uncba[i + 8]);\n      }\n\n      var nRef = readInt(uncba, headLen + 8);\n      var p = headLen + 12;\n\n      bam.chrToIndex = {};\n      bam.indexToChr = [];\n\n      for (var i = 0; i < nRef; ++i) {\n        var lName = readInt(uncba, p);\n        var name = '';\n\n        for (var j = 0; j < lName - 1; ++j) {\n          name += String.fromCharCode(uncba[p + 4 + j]);\n        }\n\n        var lRef = readInt(uncba, p + lName + 4);\n        bam.chrToIndex[name] = i;\n\n        if (name.indexOf('chr') == 0) {\n          bam.chrToIndex[name.substring(3)] = i;\n        } else {\n          bam.chrToIndex['chr' + name] = i;\n        }\n\n        bam.indexToChr.push(name);\n\n        p = p + 8 + lName;\n      }\n\n      if (bam.indices) {\n        return callback(bam);\n      }\n    }\n\n    function parseBai(header) {\n      if (!header) {\n        return \"Couldn't access BAI\";\n      }\n\n      var uncba = new Uint8Array(header);\n      var baiMagic = readInt(uncba, 0);\n\n      if (baiMagic != BAI_MAGIC) {\n        return callback(null, 'Not a BAI file, magic=0x' + baiMagic.toString(16));\n      }\n\n      var nref = readInt(uncba, 4);\n\n      bam.indices = [];\n\n      var p = 8;\n\n      for (var ref = 0; ref < nref; ++ref) {\n        var blockStart = p;\n        var o = _getBaiRefLength(uncba, blockStart);\n        p += o.length;\n\n        minBlockIndex = Math.min(o.minBlockIndex, minBlockIndex);\n\n        var nbin = o.nbin;\n\n        if (nbin > 0) {\n          bam.indices[ref] = new Uint8Array(header, blockStart, p - blockStart);\n        }\n      }\n\n      return true;\n    }\n\n    if (!bam.indexChunks) {\n      bam.bai.fetch(function(header) { // Do we really need to fetch the whole thing? :-(\n        var result = parseBai(header);\n\n        if (result !== true) {\n          if (bam.bai.url && typeof(attempted) === \"undefined\") {\n            // Already attempted x.bam.bai not there so now trying x.bai\n            bam.bai.url = bam.data.url.replace(new RegExp('.bam$'), '.bai');\n\n            // True lets us know we are making a second attempt\n            makeBam2(data, bam.bai, indexChunks, callback, true);\n          } else {\n            // We've attempted x.bam.bai & x.bai and nothing worked\n            callback(null, result);\n          }\n        } else {\n          bam.data.slice(0, minBlockIndex).fetch(parseBamHeader);\n        }\n      }); // Timeout on first request to catch Chrome mixed-content error.\n    } else {\n      var chunks = bam.indexChunks.chunks;\n      bam.indices = [];\n\n      for (var i = 0; i < chunks.length; i++) {\n        bam.indices[i] = null; // To be filled out lazily as needed\n      }\n\n      bam.data.slice(0, minBlockIndex).fetch(parseBamHeader);\n    }\n  }\n\n  BamFile.prototype.blocksForRange = function(refId, min, max) {\n    var index = this.indices[refId];\n    if (!index) {\n      return [];\n    }\n\n    var intBinsL = reg2bins(min, max);\n    var intBins = [];\n\n    for (var i = 0; i < intBinsL.length; ++i) {\n      intBins[intBinsL[i]] = true;\n    }\n\n    var leafChunks = [], otherChunks = [];\n    var nbin = readInt(index, 0);\n    var p = 4;\n\n    for (var b = 0; b < nbin; ++b) {\n      var bin = readInt(index, p);\n      var nchnk = readInt(index, p + 4);\n      //        dlog('bin=' + bin + '; nchnk=' + nchnk);\n      p += 8;\n\n      if (intBins[bin]) {\n        for (var c = 0; c < nchnk; ++c) {\n          var cs = readVob(index, p);\n          var ce = readVob(index, p + 8);\n          (bin < 4681 ? otherChunks : leafChunks).push(new Chunk(cs, ce));\n          p += 16;\n        }\n      } else {\n        p += (nchnk * 16);\n      }\n    }\n\n    // console.log('leafChunks = ' + miniJSONify(leafChunks));\n    // console.log('otherChunks = ' + miniJSONify(otherChunks));\n\n    var nintv = readInt(index, p);\n    var lowest = null;\n    var minLin = Math.min(min >> 14, nintv - 1), maxLin = Math.min(max >> 14, nintv - 1);\n\n    for (var i = minLin; i <= maxLin; ++i) {\n      var lb = readVob(index, p + 4 + (i * 8));\n\n      if (!lb) {\n        continue;\n      }\n\n      if (!lowest || lb.block < lowest.block || lb.offset < lowest.offset) {\n        lowest = lb;\n      }\n    }\n\n    // console.log('Lowest LB = ' + lowest);\n\n    var prunedOtherChunks = [];\n\n    if (lowest != null) {\n      for (var i = 0; i < otherChunks.length; ++i) {\n        var chnk = otherChunks[i];\n\n        if (chnk.maxv.block >= lowest.block && chnk.maxv.offset >= lowest.offset) {\n          prunedOtherChunks.push(chnk);\n        }\n      }\n    }\n\n    // console.log('prunedOtherChunks = ' + miniJSONify(prunedOtherChunks));\n    otherChunks = prunedOtherChunks;\n\n    var intChunks = [];\n\n    for (var i = 0; i < otherChunks.length; ++i) {\n      intChunks.push(otherChunks[i]);\n    }\n\n    for (var i = 0; i < leafChunks.length; ++i) {\n      intChunks.push(leafChunks[i]);\n    }\n\n    intChunks.sort(function(c0, c1) {\n      var dif = c0.minv.block - c1.minv.block;\n\n      if (dif != 0) {\n        return dif;\n      } else {\n        return c0.minv.offset - c1.minv.offset;\n      }\n    });\n\n    var mergedChunks = [];\n\n    if (intChunks.length > 0) {\n      var cur = intChunks[0];\n\n      for (var i = 1; i < intChunks.length; ++i) {\n        var nc = intChunks[i];\n\n        if (nc.minv.block == cur.maxv.block /* && nc.minv.offset == cur.maxv.offset */ ) { // no point splitting mid-block\n          cur = new Chunk(cur.minv, nc.maxv);\n        } else {\n          mergedChunks.push(cur);\n          cur = nc;\n        }\n      }\n\n      mergedChunks.push(cur);\n    }\n\n    // console.log('mergedChunks = ' + miniJSONify(mergedChunks));\n\n    return mergedChunks;\n  };\n\n  BamFile.prototype.fetch = function(chr, min, max, callback, opts) {\n    var thisB = this;\n    opts = opts || {};\n\n    var chrId = this.chrToIndex[chr];\n    var chunks;\n\n    if (chrId === undefined) {\n      chunks = [];\n    } else {\n      // Fetch this portion of the BAI if it hasn't been loaded yet.\n      if (this.indices[chrId] === null && this.indexChunks.chunks[chrId]) {\n        var start_stop = this.indexChunks.chunks[chrId];\n\n        return this.bai.slice(start_stop[0], start_stop[1]).fetch(function(data) {\n          var buffer = new Uint8Array(data);\n          this.indices[chrId] = buffer;\n          return this.fetch(chr, min, max, callback, opts);\n        }.bind(this));\n      }\n\n      chunks = this.blocksForRange(chrId, min, max);\n\n      if (!chunks) {\n        callback(null, 'Error in index fetch');\n      }\n    }\n\n    var records = [];\n    var index = 0;\n    var data;\n\n    function tramp() {\n      if (index >= chunks.length) {\n        return callback(records);\n      } else if (!data) {\n        var c = chunks[index];\n        var fetchMin = c.minv.block;\n        var fetchMax = c.maxv.block + (1 << 16); // *sigh*\n        // console.log('fetching ' + fetchMin + ':' + fetchMax);\n        thisB.data.slice(fetchMin, fetchMax - fetchMin).fetch(function(r) {\n          data = unbgzf(r, c.maxv.block - c.minv.block + 1);\n          return tramp();\n        });\n      } else {\n        var ba = new Uint8Array(data);\n        var finished = thisB.readBamRecords(ba, chunks[index].minv.offset, records, min, max, chrId, opts);\n        data = null;\n        ++index;\n\n        if (finished) {\n          return callback(records);\n        } else {\n          return tramp();\n        }\n      }\n    }\n\n    tramp();\n  };\n\n  var SEQRET_DECODER = ['=', 'A', 'C', 'x', 'G', 'x', 'x', 'x', 'T', 'x', 'x', 'x', 'x', 'x', 'x', 'N'];\n  var CIGAR_DECODER = ['M', 'I', 'D', 'N', 'S', 'H', 'P', '=', 'X', '?', '?', '?', '?', '?', '?', '?'];\n\n  function BamRecord() {}\n\n  BamFile.prototype.readBamRecords = function(ba, offset, sink, min, max, chrId, opts) {\n    while (true) {\n      var blockSize = readInt(ba, offset);\n      var blockEnd = offset + blockSize + 4;\n\n      if (blockEnd >= ba.length) {\n        return false;\n      }\n\n      var record = new BamRecord();\n\n      var refID = readInt(ba, offset + 4);\n      var pos = readInt(ba, offset + 8);\n\n      var bmn = readInt(ba, offset + 12);\n      var bin = (bmn & 0xffff0000) >> 16;\n      var mq = (bmn & 0xff00) >> 8;\n      var nl = bmn & 0xff;\n\n      var flag_nc = readInt(ba, offset + 16);\n      var flag = (flag_nc & 0xffff0000) >> 16;\n      var nc = flag_nc & 0xffff;\n\n      var lseq = readInt(ba, offset + 20);\n\n      var nextRef = readInt(ba, offset + 24);\n      var nextPos = readInt(ba, offset + 28);\n\n      var tlen = readInt(ba, offset + 32);\n\n      record.segment = this.indexToChr[refID];\n      record.flag = flag;\n      record.pos = pos;\n      record.mq = mq;\n\n      if (opts.light) {\n        record.seqLength = lseq;\n      }\n\n      if (!opts.light) {\n        if (nextRef >= 0) {\n          record.nextSegment = this.indexToChr[nextRef];\n          record.nextPos = nextPos;\n        }\n\n        var readName = '';\n\n        for (var j = 0; j < nl - 1; ++j) {\n          readName += String.fromCharCode(ba[offset + 36 + j]);\n        }\n\n        record.readName = readName;\n\n        var p = offset + 36 + nl;\n\n        var cigar = '';\n\n        for (var c = 0; c < nc; ++c) {\n          var cigop = readInt(ba, p);\n          cigar = cigar + (cigop >> 4) + CIGAR_DECODER[cigop & 0xf];\n          p += 4;\n        }\n\n        record.cigar = cigar;\n\n        var seq = '';\n        var seqBytes = (lseq + 1) >> 1;\n\n        for (var j = 0; j < seqBytes; ++j) {\n          var sb = ba[p + j];\n          seq += SEQRET_DECODER[(sb & 0xf0) >> 4];\n\n          if (seq.length < lseq) {\n            seq += SEQRET_DECODER[(sb & 0x0f)];\n          }\n        }\n\n        p += seqBytes;\n        record.seq = seq;\n\n        var qseq = '';\n\n        for (var j = 0; j < lseq; ++j) {\n          qseq += String.fromCharCode(ba[p + j] + 33);\n        }\n\n        p += lseq;\n        record.quals = qseq;\n\n        while (p < blockEnd) {\n          var tag = String.fromCharCode(ba[p], ba[p + 1]);\n          var type = String.fromCharCode(ba[p + 2]);\n          var value;\n\n          if (type == 'A') {\n            value = String.fromCharCode(ba[p + 3]);\n            p += 4;\n          } else if (type == 'i' || type == 'I') {\n            value = readInt(ba, p + 3);\n            p += 7;\n          } else if (type == 'c' || type == 'C') {\n            value = ba[p + 3];\n            p += 4;\n          } else if (type == 's' || type == 'S') {\n            value = readShort(ba, p + 3);\n            p += 5;\n          } else if (type == 'f') {\n            value = readFloat(ba, p + 3);\n            p += 7;\n          } else if (type == 'Z' || type == 'H') {\n            p += 3;\n            value = '';\n\n            for (;;) {\n              var cc = ba[p++];\n\n              if (cc == 0) {\n                break;\n              } else {\n                value += String.fromCharCode(cc);\n              }\n            }\n          } else if (type == 'B') {\n            var atype = String.fromCharCode(ba[p + 3]);\n            var alen = readInt(ba, p + 4);\n            var elen;\n            var reader;\n\n            if (atype == 'i' || atype == 'I' || atype == 'f') {\n              elen = 4;\n\n              if (atype == 'f') {\n                reader = readFloat;\n              } else {\n                reader = readInt;\n              }\n            } else if (atype == 's' || atype == 'S') {\n              elen = 2;\n              reader = readShort;\n            } else if (atype == 'c' || atype == 'C') {\n              elen = 1;\n              reader = readByte;\n            } else {\n              throw 'Unknown array type ' + atype;\n            }\n\n            p += 8;\n            value = [];\n\n            for (var i = 0; i < alen; ++i) {\n              value.push(reader(ba, p));\n              p += elen;\n            }\n          } else {\n            throw 'Unknown type ' + type;\n          }\n\n          record[tag] = value;\n        }\n      }\n\n      if (!min || record.pos <= max && record.pos + lseq >= min) {\n        if (chrId === undefined || refID == chrId) {\n          sink.push(record);\n        }\n      }\n\n      if (record.pos > max) {\n        return true;\n      }\n\n      offset = blockEnd;\n    }\n\n    // Exits via top of loop.\n  };\n\n  /*-------------------------------------------------------------------------------------------------------------------------------*/\n\n  window.dallianceLib = {\n    URLFetchable  : URLFetchable,\n    BlobFetchable : BlobFetchable,\n    makeBam       : makeBam,\n    inflateBuffer : inflateBuffer\n  };\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = window.dallianceLib;\n  }\n})();\n","(function(){function C(){}function A(){this.was=[0]}function B(a,b,c){this.hufts=new Int32Array(4320);this.window=new Uint8Array(c);this.end=c;this.checkfn=b;this.mode=0;this.reset(a,null);this.index=this.table=this.left=0;this.blens=null;this.bb=new Int32Array(1);this.tb=new Int32Array(1);this.codes=new D;this.check=this.write=this.read=this.bitb=this.bitk=this.last=0;this.inftree=new E}function D(){}function E(){}function y(a,b,c,d,h){if(0!=h){if(!a)throw\"Undef src\";if(!c)throw\"Undef dest\";if(0==\nb&&h==a.length)c.set(a,d);else if(T)a=a.subarray(b,b+h),c.set(a,d);else if(1==a.BYTES_PER_ELEMENT&&100<h)a=new Uint8Array(a.buffer,a.byteOffset+b,h),c.set(a,d);else for(var f=0;f<h;++f)c[d+f]=a[b+f]}}function J(a,b,c,d){a=b?c?new Uint8Array(a,b,c):new Uint8Array(a,b,a.byteLength-b):new Uint8Array(a);c=new C;c.inflateInit(15,!0);c.next_in=a;c.next_in_index=0;c.avail_in=a.length;a=[];for(var h=0;;){var f=new Uint8Array(32E3);c.next_out=f;c.next_out_index=0;c.avail_out=f.length;var g=c.inflate(0);if(0!=\ng&&1!=g&&-5!=g)throw c.msg;if(0!=c.avail_out){var e=new Uint8Array(f.length-c.avail_out);y(f,0,e,0,f.length-c.avail_out);f=e}a.push(f);h+=f.length;if(1==g||-5==g)break}d&&(d[0]=(b||0)+c.next_in_index);if(1==a.length)return a[0].buffer;b=new Uint8Array(h);for(c=d=0;c<a.length;++c)h=a[c],y(h,0,b,d,h.length),d+=h.length;return b.buffer}function K(a,b){this.block=a;this.offset=b}function G(a,b,c){var d=4294967296*(a[b+6]&255)+16777216*(a[b+5]&255)+65536*(a[b+4]&255)+256*(a[b+3]&255)+(a[b+2]&255);a=a[b+\n1]<<8|a[b];return 0!=d||0!=a||c?new K(d,a):null}function L(a,b){b=Math.min(b||1,a.byteLength-50);for(var c=[],d=[0],h=0;d[0]<b;){var f=new Uint8Array(a,d[0],12),f=f[11]<<8|f[10],f=J(a,12+f+d[0],Math.min(65536,a.byteLength-12-f-d[0]),d);d[0]+=8;h+=f.byteLength;c.push(f)}if(1==c.length)return c[0];d=new Uint8Array(h);for(f=h=0;f<c.length;++f){var g=new Uint8Array(c[f]);y(g,0,d,h,g.length);h+=g.length}return d.buffer}function M(a,b){this.minv=a;this.maxv=b}function U(a,b){var c,d=[];--b;d.push(0);for(c=\n1+(a>>26);c<=1+(b>>26);++c)d.push(c);for(c=9+(a>>23);c<=9+(b>>23);++c)d.push(c);for(c=73+(a>>20);c<=73+(b>>20);++c)d.push(c);for(c=585+(a>>17);c<=585+(b>>17);++c)d.push(c);for(c=4681+(a>>14);c<=4681+(b>>14);++c)d.push(c);return d}function F(a){this.blob=a}function z(a,b,c,d){d||(\"object\"===typeof b?(d=b,b=void 0):d={});this.url=a;this.start=b||0;c&&(this.end=c);this.opts=d}function N(a){if(!a)return null;for(var b=new Uint8Array(a.length),c=0;c<b.length;++c)b[c]=a.charCodeAt(c);return b.buffer}function O(a,\nb){var c=new ArrayBuffer(8),d=new Uint8Array(c),c=new Float32Array(c);d[0]=a[b];d[1]=a[b+1];d[2]=a[b+2];d[3]=a[b+3];return c[0]}function t(a,b){return a[b+3]<<24|a[b+2]<<16|a[b+1]<<8|a[b]}function P(a,b){return a[b+1]<<8|a[b]}function V(a,b){return a[b]}function H(){}function Q(a,b,c,d,h){function f(a){if(!a)return d(null,\"Couldn't access BAM\");a=L(a,a.byteLength);a=new Uint8Array(a);var b=t(a,0);if(21840194!=b)return d(null,\"Not a BAM file, magic=0x\"+b.toString(16));for(var c=t(a,4),e=\"\",b=0;b<c;++b)e+=\nString.fromCharCode(a[b+8]);e=t(a,c+8);c+=12;g.chrToIndex={};g.indexToChr=[];for(b=0;b<e;++b){for(var f=t(a,c),h=\"\",k=0;k<f-1;++k)h+=String.fromCharCode(a[c+4+k]);t(a,c+f+4);g.chrToIndex[h]=b;0==h.indexOf(\"chr\")?g.chrToIndex[h.substring(3)]=b:g.chrToIndex[\"chr\"+h]=b;g.indexToChr.push(h);c=c+8+f}if(g.indices)return d(g)}var g=new H;g.data=a;g.bai=b;g.indexChunks=c;var e=g.indexChunks?g.indexChunks.minBlockIndex:1E9;if(g.indexChunks){b=g.indexChunks.chunks;g.indices=[];for(var k=0;k<b.length;k++)g.indices[k]=\nnull;g.data.slice(0,e).fetch(f)}else g.bai.fetch(function(b){var k,q,n;if(b){var l=new Uint8Array(b),u=t(l,0);if(21578050!=u)b=d(null,\"Not a BAI file, magic=0x\"+u.toString(16));else{u=t(l,4);g.indices=[];for(var s=8,w=0;w<u;++w){var I=s;k=l;var r=n=I;q=t(k,r);for(var r=r+4,v=0;v<q;++v){t(k,r);var x=t(k,r+4),r=r+(8+16*x)}for(var v=t(k,r),r=r+4,x=1E9,y=r,A=0;A<v;++A){var z=G(k,y),y=y+8;if(z){k=z.block;0<z.offset&&(k+=65536);k<x&&(x=k);break}}r+=8*v;k=x;n=r-n;s+=n;e=Math.min(k,e);0<q&&(g.indices[w]=\nnew Uint8Array(b,I,s-I))}b=!0}}else b=\"Couldn't access BAI\";!0!==b?g.bai.url&&\"undefined\"===typeof h?(g.bai.url=g.data.url.replace(/.bam$/,\".bai\"),Q(a,g.bai,c,d,!0)):d(null,b):g.data.slice(0,e).fetch(f)})}function W(){}var x=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],X=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,\n0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,\n138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,\n80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,\n23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,\n0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,\n205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,\n0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,\n7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],Y=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],Z=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,\n115,131,163,195,227,258,0,0],aa=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],ba=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];C.prototype.inflateInit=function(a,b){a||(a=15);b&&(b=!1);this.istate=new A;return this.istate.inflateInit(this,b?-a:a)};C.prototype.inflate=function(a){return null==this.istate?-2:this.istate.inflate(this,a)};C.prototype.inflateEnd=\nfunction(){if(null==this.istate)return-2;var a=istate.inflateEnd(this);this.istate=null;return a};C.prototype.inflateSync=function(){return istate.inflateSync(this)};C.prototype.inflateSetDictionary=function(a,b){return istate.inflateSetDictionary(this,a,b)};A.prototype.inflateReset=function(a){if(null==a||null==a.istate)return-2;a.total_in=a.total_out=0;a.msg=null;a.istate.mode=0!=a.istate.nowrap?7:0;a.istate.blocks.reset(a,null);return 0};A.prototype.inflateEnd=function(a){null!=this.blocks&&this.blocks.free(a);\nthis.blocks=null;return 0};A.prototype.inflateInit=function(a,b){this.blocks=a.msg=null;nowrap=0;0>b&&(b=-b,nowrap=1);if(8>b||15<b)return this.inflateEnd(a),-2;this.wbits=b;a.istate.blocks=new B(a,0!=a.istate.nowrap?null:this,1<<b);this.inflateReset(a);return 0};A.prototype.inflate=function(a,b){var c,d;if(null==a||null==a.istate||null==a.next_in)return-2;b=4==b?-5:0;for(c=-5;;)switch(a.istate.mode){case 0:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;if(8!=((a.istate.method=a.next_in[a.next_in_index++])&\n15)){a.istate.mode=13;a.msg=\"unknown compression method\";a.istate.marker=5;break}if((a.istate.method>>4)+8>a.istate.wbits){a.istate.mode=13;a.msg=\"invalid window size\";a.istate.marker=5;break}a.istate.mode=1;case 1:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;d=a.next_in[a.next_in_index++]&255;if(0!=((a.istate.method<<8)+d)%31){a.istate.mode=13;a.msg=\"incorrect header check\";a.istate.marker=5;break}if(0==(d&32)){a.istate.mode=7;break}a.istate.mode=2;case 2:if(0==a.avail_in)return c;c=b;\na.avail_in--;a.total_in++;a.istate.need=(a.next_in[a.next_in_index++]&255)<<24&4278190080;a.istate.mode=3;case 3:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need+=(a.next_in[a.next_in_index++]&255)<<16&16711680;a.istate.mode=4;case 4:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need+=(a.next_in[a.next_in_index++]&255)<<8&65280;a.istate.mode=5;case 5:if(0==a.avail_in)return c;a.avail_in--;a.total_in++;a.istate.need+=a.next_in[a.next_in_index++]&255;a.adler=\na.istate.need;a.istate.mode=6;return 2;case 6:return a.istate.mode=13,a.msg=\"need dictionary\",a.istate.marker=0,-2;case 7:c=a.istate.blocks.proc(a,c);if(-3==c){a.istate.mode=13;a.istate.marker=0;break}0==c&&(c=b);if(1!=c)return c;c=b;a.istate.blocks.reset(a,a.istate.was);if(0!=a.istate.nowrap){a.istate.mode=12;break}a.istate.mode=8;case 8:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need=(a.next_in[a.next_in_index++]&255)<<24&4278190080;a.istate.mode=9;case 9:if(0==a.avail_in)return c;\nc=b;a.avail_in--;a.total_in++;a.istate.need+=(a.next_in[a.next_in_index++]&255)<<16&16711680;a.istate.mode=10;case 10:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need+=(a.next_in[a.next_in_index++]&255)<<8&65280;a.istate.mode=11;case 11:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need+=a.next_in[a.next_in_index++]&255;if(a.istate.was[0]!=a.istate.need){a.istate.mode=13;a.msg=\"incorrect data check\";a.istate.marker=5;break}a.istate.mode=12;case 12:return 1;\ncase 13:return-3;default:return-2}};A.prototype.inflateSetDictionary=function(a,b,c){var d=0,h=c;if(null==a||null==a.istate||6!=a.istate.mode)return-2;if(a._adler.adler32(1,b,0,c)!=a.adler)return-3;a.adler=a._adler.adler32(0,null,0,0);h>=1<<a.istate.wbits&&(h=(1<<a.istate.wbits)-1,d=c-h);a.istate.blocks.set_dictionary(b,d,h);a.istate.mode=7;return 0};var da=[0,0,255,255];A.prototype.inflateSync=function(a){var b,c,d;if(null==a||null==a.istate)return-2;13!=a.istate.mode&&(a.istate.mode=13,a.istate.marker=\n0);if(0==(b=a.avail_in))return-5;c=a.next_in_index;for(d=a.istate.marker;0!=b&&4>d;)a.next_in[c]==da[d]?d++:d=0!=a.next_in[c]?0:4-d,c++,b--;a.total_in+=c-a.next_in_index;a.next_in_index=c;a.avail_in=b;a.istate.marker=d;if(4!=d)return-3;b=a.total_in;c=a.total_out;this.inflateReset(a);a.total_in=b;a.total_out=c;a.istate.mode=7;return 0};A.prototype.inflateSyncPoint=function(a){return null==a||null==a.istate||null==a.istate.blocks?-2:a.istate.blocks.sync_point()};var R=[16,17,18,0,8,7,9,6,10,5,11,4,\n12,3,13,2,14,1,15];B.prototype.reset=function(a,b){b&&(b[0]=this.check);6==this.mode&&this.codes.free(a);this.read=this.write=this.bitb=this.bitk=this.mode=0;this.checkfn&&(a.adler=this.check=a._adler.adler32(0,null,0,0))};B.prototype.proc=function(a,b){var c,d,h,f,g,e,k;f=a.next_in_index;g=a.avail_in;d=this.bitb;h=this.bitk;e=this.write;for(k=e<this.read?this.read-e-1:this.end-e;;)switch(this.mode){case 0:for(;3>h;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,\na.next_in_index=f,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}c=d&7;this.last=c&1;switch(c>>>1){case 0:d>>>=3;h-=3;c=h&7;d>>>=c;h-=c;this.mode=1;break;case 1:var m=new Int32Array(1),p=new Int32Array(1),q=[],n=[];c=p;var l=q,u=n;m[0]=9;c[0]=5;l[0]=X;u[0]=Y;this.codes.init(m[0],p[0],q[0],0,n[0],0,a);d>>>=3;h-=3;this.mode=6;break;case 2:d>>>=3;h-=3;this.mode=3;break;case 3:return d>>>=3,h-=3,this.mode=13,a.msg=\"invalid block type\",b=-3,this.bitb=d,this.bitk=h,a.avail_in=\ng,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b)}break;case 1:for(;32>h;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}if((~d>>>16&65535)!=(d&65535))return this.mode=13,a.msg=\"invalid stored block lengths\",b=-3,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,\nb);this.left=d&65535;d=h=0;this.mode=0!=this.left?2:0!=this.last?7:0;break;case 2:if(0==g)return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,write=e,this.inflate_flush(a,b);if(0==k&&(e==end&&0!=read&&(e=0,k=e<this.read?this.read-e-1:this.end-e),0==k&&(this.write=e,b=this.inflate_flush(a,b),e=this.write,k=e<this.read?this.read-e-1:this.end-e,e==this.end&&0!=this.read&&(e=0,k=e<this.read?this.read-e-1:this.end-e),0==k)))return this.bitb=d,this.bitk=h,a.avail_in=\ng,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);b=0;c=this.left;c>g&&(c=g);c>k&&(c=k);y(a.next_in,f,this.window,e,c);f+=c;g-=c;e+=c;k-=c;if(0!=(this.left-=c))break;this.mode=0!=this.last?7:0;break;case 3:for(;14>h;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}this.table=c=d&16383;if(29<(c&31)||29<(c>>5&31))return this.mode=\n9,a.msg=\"too many length or distance symbols\",b=-3,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);c=258+(c&31)+(c>>5&31);if(null==this.blens||this.blens.length<c)this.blens=new Int32Array(c);else for(k=0;k<c;k++)this.blens[k]=0;d>>>=14;h-=14;this.index=0;mode=4;case 4:for(;this.index<4+(this.table>>>10);){for(;3>h;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,\nthis.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}this.blens[R[this.index++]]=d&7;d>>>=3;h-=3}for(;19>this.index;)this.blens[R[this.index++]]=0;this.bb[0]=7;c=this.inftree.inflate_trees_bits(this.blens,this.bb,this.tb,this.hufts,a);if(0!=c)return b=c,-3==b&&(this.blens=null,this.mode=9),this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,write=e,this.inflate_flush(a,b);this.index=0;this.mode=5;case 5:for(;;){c=this.table;if(!(this.index<258+\n(c&31)+(c>>5&31)))break;for(c=this.bb[0];h<c;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}c=this.hufts[3*(this.tb[0]+(d&x[c]))+1];p=this.hufts[3*(this.tb[0]+(d&x[c]))+2];if(16>p)d>>>=c,h-=c,this.blens[this.index++]=p;else{k=18==p?7:p-14;for(m=18==p?11:3;h<c+k;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=\nf,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}d>>>=c;h-=c;m+=d&x[k];d>>>=k;h-=k;k=this.index;c=this.table;if(k+m>258+(c&31)+(c>>5&31)||16==p&&1>k)return this.blens=null,this.mode=9,a.msg=\"invalid bit length repeat\",b=-3,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);p=16==p?this.blens[k-1]:0;do this.blens[k++]=p;while(0!=--m);this.index=k}}this.tb[0]=-1;m=new Int32Array(1);p=new Int32Array(1);q=\nnew Int32Array(1);n=new Int32Array(1);m[0]=9;p[0]=6;c=this.table;c=this.inftree.inflate_trees_dynamic(257+(c&31),1+(c>>5&31),this.blens,m,p,q,n,this.hufts,a);if(0!=c)return-3==c&&(this.blens=null,this.mode=13),b=c,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);this.codes.init(m[0],p[0],this.hufts,q[0],this.hufts,n[0],a);this.mode=6;case 6:this.bitb=d;this.bitk=h;a.avail_in=g;a.total_in+=f-a.next_in_index;a.next_in_index=f;\nthis.write=e;if(1!=(b=this.codes.proc(this,a,b)))return this.inflate_flush(a,b);b=0;this.codes.free(a);f=a.next_in_index;g=a.avail_in;d=this.bitb;h=this.bitk;e=this.write;k=e<this.read?this.read-e-1:this.end-e;if(0==this.last){this.mode=0;break}this.mode=7;case 7:this.write=e;b=this.inflate_flush(a,b);e=this.write;if(this.read!=this.write)return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);mode=12;case 8:return b=1,this.bitb=\nd,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);case 9:return b=-3,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);default:return b=-2,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b)}};B.prototype.free=function(a){this.reset(a,null);this.hufts=this.window=null};B.prototype.set_dictionary=\nfunction(a,b,c){y(a,b,window,0,c);this.read=this.write=c};B.prototype.sync_point=function(){return 1==this.mode};B.prototype.inflate_flush=function(a,b){var c,d,h;d=a.next_out_index;h=this.read;c=(h<=this.write?this.write:this.end)-h;c>a.avail_out&&(c=a.avail_out);0!=c&&-5==b&&(b=0);a.avail_out-=c;a.total_out+=c;null!=this.checkfn&&(a.adler=this.check=a._adler.adler32(this.check,this.window,h,c));y(this.window,h,a.next_out,d,c);d+=c;h+=c;h==this.end&&(h=0,this.write==this.end&&(this.write=0),c=this.write-\nh,c>a.avail_out&&(c=a.avail_out),0!=c&&-5==b&&(b=0),a.avail_out-=c,a.total_out+=c,null!=this.checkfn&&(a.adler=this.check=a._adler.adler32(this.check,this.window,h,c)),y(this.window,h,a.next_out,d,c),d+=c,h+=c);a.next_out_index=d;this.read=h;return b};D.prototype.init=function(a,b,c,d,h,f,g){this.mode=0;this.lbits=a;this.dbits=b;this.ltree=c;this.ltree_index=d;this.dtree=h;this.dtree_index=f;this.tree=null};D.prototype.proc=function(a,b,c){var d,h,f=0,g=0,e=0,k,m,p,e=b.next_in_index;k=b.avail_in;\nf=a.bitb;g=a.bitk;m=a.write;for(p=m<a.read?a.read-m-1:a.end-m;;)switch(this.mode){case 0:if(258<=p&&10<=k&&(a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,c=this.inflate_fast(this.lbits,this.dbits,this.ltree,this.ltree_index,this.dtree,this.dtree_index,a,b),e=b.next_in_index,k=b.avail_in,f=a.bitb,g=a.bitk,m=a.write,p=m<a.read?a.read-m-1:a.end-m,0!=c)){this.mode=1==c?7:9;break}this.need=this.lbits;this.tree=this.ltree;this.tree_index=this.ltree_index;this.mode=\n1;case 1:for(d=this.need;g<d;){if(0!=k)c=0;else return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);k--;f|=(b.next_in[e++]&255)<<g;g+=8}d=3*(this.tree_index+(f&x[d]));f>>>=this.tree[d+1];g-=this.tree[d+1];h=this.tree[d];if(0==h){this.lit=this.tree[d+2];this.mode=6;break}if(0!=(h&16)){this.get=h&15;this.len=this.tree[d+2];this.mode=2;break}if(0==(h&64)){this.need=h;this.tree_index=d/3+this.tree[d+2];break}if(0!=(h&32)){this.mode=7;break}this.mode=\n9;b.msg=\"invalid literal/length code\";c=-3;a.bitb=f;a.bitk=g;b.avail_in=k;b.total_in+=e-b.next_in_index;b.next_in_index=e;a.write=m;return a.inflate_flush(b,c);case 2:for(d=this.get;g<d;){if(0!=k)c=0;else return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);k--;f|=(b.next_in[e++]&255)<<g;g+=8}this.len+=f&x[d];f>>=d;g-=d;this.need=this.dbits;this.tree=this.dtree;this.tree_index=this.dtree_index;this.mode=3;case 3:for(d=this.need;g<d;){if(0!=\nk)c=0;else return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);k--;f|=(b.next_in[e++]&255)<<g;g+=8}d=3*(this.tree_index+(f&x[d]));f>>=this.tree[d+1];g-=this.tree[d+1];h=this.tree[d];if(0!=(h&16)){this.get=h&15;this.dist=this.tree[d+2];this.mode=4;break}if(0==(h&64)){this.need=h;this.tree_index=d/3+this.tree[d+2];break}this.mode=9;b.msg=\"invalid distance code\";c=-3;a.bitb=f;a.bitk=g;b.avail_in=k;b.total_in+=e-b.next_in_index;b.next_in_index=\ne;a.write=m;return a.inflate_flush(b,c);case 4:for(d=this.get;g<d;){if(0!=k)c=0;else return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);k--;f|=(b.next_in[e++]&255)<<g;g+=8}this.dist+=f&x[d];f>>=d;g-=d;this.mode=5;case 5:for(d=m-this.dist;0>d;)d+=a.end;for(;0!=this.len;){if(0==p&&(m==a.end&&0!=a.read&&(m=0,p=m<a.read?a.read-m-1:a.end-m),0==p&&(a.write=m,c=a.inflate_flush(b,c),m=a.write,p=m<a.read?a.read-m-1:a.end-m,m==a.end&&0!=a.read&&\n(m=0,p=m<a.read?a.read-m-1:a.end-m),0==p)))return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);a.window[m++]=a.window[d++];p--;d==a.end&&(d=0);this.len--}this.mode=0;break;case 6:if(0==p&&(m==a.end&&0!=a.read&&(m=0,p=m<a.read?a.read-m-1:a.end-m),0==p&&(a.write=m,c=a.inflate_flush(b,c),m=a.write,p=m<a.read?a.read-m-1:a.end-m,m==a.end&&0!=a.read&&(m=0,p=m<a.read?a.read-m-1:a.end-m),0==p)))return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=\ne-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);c=0;a.window[m++]=this.lit;p--;this.mode=0;break;case 7:7<g&&(g-=8,k++,e--);a.write=m;c=a.inflate_flush(b,c);m=a.write;if(a.read!=a.write)return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);this.mode=8;case 8:return c=1,a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);case 9:return c=-3,a.bitb=f,a.bitk=g,b.avail_in=\nk,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);default:return c=-2,a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c)}};D.prototype.free=function(a){};D.prototype.inflate_fast=function(a,b,c,d,h,f,g,e){var k,m,p,q,n,l,u,s,w,t,r,v;l=e.next_in_index;u=e.avail_in;q=g.bitb;n=g.bitk;s=g.write;w=s<g.read?g.read-s-1:g.end-s;a=x[a];t=x[b];do{for(;20>n;)u--,q|=(e.next_in[l++]&255)<<n,n+=8;k=q&a;m=c;p=d;v=3*(p+k);if(0==\n(b=m[v]))q>>=m[v+1],n-=m[v+1],g.window[s++]=m[v+2],w--;else{do{q>>=m[v+1];n-=m[v+1];if(0!=(b&16)){b&=15;r=m[v+2]+(q&x[b]);q>>=b;for(n-=b;15>n;)u--,q|=(e.next_in[l++]&255)<<n,n+=8;k=q&t;m=h;p=f;v=3*(p+k);b=m[v];do if(q>>=m[v+1],n-=m[v+1],0!=(b&16)){for(b&=15;n<b;)u--,q|=(e.next_in[l++]&255)<<n,n+=8;k=m[v+2]+(q&x[b]);q>>=b;n-=b;w-=r;if(s>=k)k=s-k,g.window[s++]=g.window[k++],g.window[s++]=g.window[k++],r-=2;else{k=s-k;do k+=g.end;while(0>k);b=g.end-k;if(r>b){r-=b;if(0<s-k&&b>s-k){do g.window[s++]=g.window[k++];\nwhile(0!=--b)}else y(g.window,k,g.window,s,b),s+=b;k=0}}do g.window[s++]=g.window[k++];while(0!=--r);break}else if(0==(b&64))k+=m[v+2],k+=q&x[b],v=3*(p+k),b=m[v];else return e.msg=\"invalid distance code\",r=e.avail_in-u,r=n>>3<r?n>>3:r,u+=r,l-=r,n-=r<<3,g.bitb=q,g.bitk=n,e.avail_in=u,e.total_in+=l-e.next_in_index,e.next_in_index=l,g.write=s,-3;while(1);break}if(0==(b&64)){if(k+=m[v+2],k+=q&x[b],v=3*(p+k),0==(b=m[v])){q>>=m[v+1];n-=m[v+1];g.window[s++]=m[v+2];w--;break}}else{if(0!=(b&32))return r=e.avail_in-\nu,r=n>>3<r?n>>3:r,u+=r,l-=r,n-=r<<3,g.bitb=q,g.bitk=n,e.avail_in=u,e.total_in+=l-e.next_in_index,e.next_in_index=l,g.write=s,1;e.msg=\"invalid literal/length code\";r=e.avail_in-u;r=n>>3<r?n>>3:r;u+=r;l-=r;n-=r<<3;g.bitb=q;g.bitk=n;e.avail_in=u;e.total_in+=l-e.next_in_index;e.next_in_index=l;g.write=s;return-3}}while(1)}}while(258<=w&&10<=u);r=e.avail_in-u;r=n>>3<r?n>>3:r;l-=r;g.bitb=q;g.bitk=n-(r<<3);e.avail_in=u+r;e.total_in+=l-e.next_in_index;e.next_in_index=l;g.write=s;return 0};E.prototype.huft_build=\nfunction(a,b,c,d,h,f,g,e,k,m,p){var q,n,l,u,s,w,t,r,v;w=0;n=c;do this.c[a[b+w]]++,w++,n--;while(0!=n);if(this.c[0]==c)return g[0]=-1,e[0]=0;s=e[0];for(l=1;15>=l&&0==this.c[l];l++);u=l;s<l&&(s=l);for(n=15;0!=n&&0==this.c[n];n--);m=n;s>n&&(s=n);e[0]=s;for(e=1<<l;l<n;l++,e<<=1)if(0>(e-=this.c[l]))return-3;if(0>(e-=this.c[n]))return-3;this.c[n]+=e;this.x[1]=l=0;w=1;for(t=2;0!=--n;)this.x[t]=l+=this.c[w],t++,w++;w=n=0;do 0!=(l=a[b+w])&&(this.v[this.x[l]++]=n),w++;while(++n<c);c=this.x[m];w=this.x[0]=n=\n0;b=-1;r=-s;for(v=t=this.u[0]=0;u<=m;u++)for(a=this.c[u];0!=a--;){for(;u>r+s;){b++;r+=s;v=m-r;v=v>s?s:v;if((q=1<<(l=u-r))>a+1&&(q-=a+1,t=u,l<v))for(;++l<v&&!((q<<=1)<=this.c[++t]);)q-=this.c[t];v=1<<l;if(1440<this.hn[0]+v)return-3;this.u[b]=t=this.hn[0];this.hn[0]+=v;0!=b?(this.x[b]=n,this.r[0]=l,this.r[1]=s,l=n>>>r-s,this.r[2]=t-this.u[b-1]-l,y(this.r,0,k,3*(this.u[b-1]+l),3)):g[0]=t}this.r[1]=u-r;w>=c?this.r[0]=192:p[w]<d?(this.r[0]=256>this.v[w]?0:96,this.r[2]=this.v[w++]):(this.r[0]=f[this.v[w]-\nd]+16+64,this.r[2]=h[this.v[w++]-d]);q=1<<u-r;for(l=n>>>r;l<v;l+=q)y(this.r,0,k,3*(t+l),3);for(l=1<<u-1;0!=(n&l);l>>>=1)n^=l;n^=l;for(l=(1<<r)-1;(n&l)!=this.x[b];)b--,r-=s,l=(1<<r)-1}return 0!=e&&1!=m?-5:0};E.prototype.inflate_trees_bits=function(a,b,c,d,h){this.initWorkArea(19);this.hn[0]=0;a=this.huft_build(a,0,19,19,null,null,c,b,d,this.hn,this.v);if(-3==a)h.msg=\"oversubscribed dynamic bit lengths tree\";else if(-5==a||0==b[0])h.msg=\"incomplete dynamic bit lengths tree\",a=-3;return a};E.prototype.inflate_trees_dynamic=\nfunction(a,b,c,d,h,f,g,e,k){this.initWorkArea(288);this.hn[0]=0;f=this.huft_build(c,0,a,257,Z,aa,f,d,e,this.hn,this.v);if(0!=f||0==d[0])return-3==f?k.msg=\"oversubscribed literal/length tree\":-4!=f&&(k.msg=\"incomplete literal/length tree\",f=-3),f;this.initWorkArea(288);f=this.huft_build(c,a,b,0,ba,ca,g,h,e,this.hn,this.v);return 0!=f||0==h[0]&&257<a?(-3==f?k.msg=\"oversubscribed distance tree\":-5==f?(k.msg=\"incomplete distance tree\",f=-3):-4!=f&&(k.msg=\"empty distance tree with lengths\",f=-3),f):0};\nE.prototype.initWorkArea=function(a){null==this.hn&&(this.hn=new Int32Array(1),this.v=new Int32Array(a),this.c=new Int32Array(16),this.r=new Int32Array(3),this.u=new Int32Array(15),this.x=new Int32Array(16));this.v.length<a&&(this.v=new Int32Array(a));for(var b=0;b<a;b++)this.v[b]=0;for(b=0;16>b;b++)this.c[b]=0;for(b=0;3>b;b++)this.r[b]=0;y(this.c,0,this.u,0,15);y(this.c,0,this.x,0,16)};var T=\"function\"===typeof(new Uint8Array(1)).subarray;K.prototype.toString=function(){return\"\"+this.block+\":\"+this.offset};\nF.prototype.slice=function(a,b){var c;c=this.blob.slice?b?this.blob.slice(a,a+b):this.blob.slice(a):b?this.blob.webkitSlice(a,a+b):this.blob.webkitSlice(a);return new F(c)};F.prototype.salted=function(){return this};F.prototype.fetch=\"undefined\"!==typeof FileReader?function(a){var b=new FileReader;b.onloadend=function(c){a(N(b.result))};b.readAsBinaryString(this.blob)}:function(a){var b=new FileReaderSync;try{var c=b.readAsArrayBuffer(this.blob);a(c)}catch(d){a(null,d)}};z.prototype.slice=function(a,\nb){if(0>a)throw\"Bad slice \"+a;var c=this.start,d=this.end,c=c&&a?c+a:a||c;return new z(this.url,c,b&&c?c+b-1:d||b-1,this.opts)};0<=navigator.userAgent.indexOf(\"Safari\")&&navigator.userAgent.indexOf(\"Chrome\");z.prototype.fetchAsText=function(a){var b=this;this.getURL().then(function(c){try{var d=new XMLHttpRequest;d.open(\"GET\",c,!0);if(b.end){if(1E8<b.end-b.start)throw\"Monster fetch!\";d.setRequestHeader(\"Range\",\"bytes=\"+b.start+\"-\"+b.end)}d.onreadystatechange=function(){if(4==d.readyState)return 200==\nd.status||206==d.status?a(d.responseText):a(null)};b.opts.credentials&&(d.withCredentials=!0);d.send(\"\")}catch(h){return a(null)}}).fail(function(b){console.log(b);return a(null,b)})};z.prototype.salted=function(){var a=this.opts,b={},c;for(c in a)b[c]=a[c];b.salt=!0;return new z(this.url,this.start,this.end,b)};z.prototype.getURL=function(){return this.opts.resolver?this.opts.resolver(this.url).then(function(a){return\"string\"===typeof a?a:a.url}):$.Deferred().resolve(this.url)};z.prototype.fetch=\nfunction(a,b){var c=this;b=b||{};var d=b.attempt||1,h=b.truncatedLength;if(3<d)return a(null);this.getURL().then(function(f){try{var g;b.timeout&&!c.opts.credentials&&(g=setTimeout(function(){console.log(\"timing out \"+f);e.abort();return a(null,\"Timeout\")},b.timeout));var e=new XMLHttpRequest,k;e.open(\"GET\",f,!0);e.overrideMimeType(\"text/plain; charset=x-user-defined\");if(c.end){if(1E8<c.end-c.start)throw\"Monster fetch!\";e.setRequestHeader(\"Range\",\"bytes=\"+c.start+\"-\"+c.end);k=c.end-c.start+1}e.responseType=\n\"arraybuffer\";e.onreadystatechange=function(){if(4==e.readyState){g&&clearTimeout(g);if(200==e.status||206==e.status){if(e.response){var b=e.response.byteLength;return!k||k==b||h&&b==h?a(e.response):c.fetch(a,{attempt:d+1,truncatedLength:b})}if(e.mozResponseArrayBuffer)return a(e.mozResponseArrayBuffer);b=e.responseText;return!k||k==b.length||h&&b.length==h?a(N(e.responseText)):c.fetch(a,{attempt:d+1,truncatedLength:b.length})}return c.fetch(a,{attempt:d+1})}};c.opts.credentials&&(e.withCredentials=\n!0);e.send(\"\")}catch(m){return a(null)}}).fail(function(b){console.log(b);return a(null,b)})};H.prototype.blocksForRange=function(a,b,c){var d=this.indices[a];if(!d)return[];a=U(b,c);for(var h=[],f=0;f<a.length;++f)h[a[f]]=!0;a=[];for(var g=[],f=t(d,0),e=4,k=0;k<f;++k){var m=t(d,e),p=t(d,e+4),e=e+8;if(h[m])for(var q=0;q<p;++q){var n=G(d,e),l=G(d,e+8);(4681>m?g:a).push(new M(n,l));e+=16}else e+=16*p}f=t(d,e);h=null;b=Math.min(b>>14,f-1);c=Math.min(c>>14,f-1);for(f=b;f<=c;++f)(b=G(d,e+4+8*f))&&(!h||\nb.block<h.block||b.offset<h.offset)&&(h=b);d=[];if(null!=h)for(f=0;f<g.length;++f)c=g[f],c.maxv.block>=h.block&&c.maxv.offset>=h.offset&&d.push(c);g=d;d=[];for(f=0;f<g.length;++f)d.push(g[f]);for(f=0;f<a.length;++f)d.push(a[f]);d.sort(function(a,b){var c=a.minv.block-b.minv.block;return 0!=c?c:a.minv.offset-b.minv.offset});a=[];if(0<d.length){g=d[0];for(f=1;f<d.length;++f)c=d[f],c.minv.block==g.maxv.block?g=new M(g.minv,c.maxv):(a.push(g),g=c);a.push(g)}return a};H.prototype.fetch=function(a,b,c,\nd,h){function f(){if(q>=k.length)return d(p);if(n){var a=new Uint8Array(n),a=g.readBamRecords(a,k[q].minv.offset,p,b,c,e,h);n=null;++q;return a?d(p):f()}var m=k[q],a=m.minv.block;g.data.slice(a,m.maxv.block+65536-a).fetch(function(a){n=L(a,m.maxv.block-m.minv.block+1);return f()})}var g=this;h=h||{};var e=this.chrToIndex[a],k;if(void 0===e)k=[];else{if(null===this.indices[e]&&this.indexChunks.chunks[e]){var m=this.indexChunks.chunks[e];return this.bai.slice(m[0],m[1]).fetch(function(f){f=new Uint8Array(f);\nthis.indices[e]=f;return this.fetch(a,b,c,d,h)}.bind(this))}(k=this.blocksForRange(e,b,c))||d(null,\"Error in index fetch\")}var p=[],q=0,n;f()};var S=\"=ACxGxxxTxxxxxxN\".split(\"\"),ea=\"MIDNSHP=X???????\".split(\"\");H.prototype.readBamRecords=function(a,b,c,d,h,f,g){for(;;){var e=t(a,b),e=b+e+4;if(e>=a.length)return!1;var k=new W,m=t(a,b+4),p=t(a,b+8),q=t(a,b+12),n=(q&65280)>>8,l=q&255,q=t(a,b+16),u=(q&4294901760)>>16,s=q&65535,q=t(a,b+20),w=t(a,b+24),x=t(a,b+28);t(a,b+32);k.segment=this.indexToChr[m];\nk.flag=u;k.pos=p;k.mq=n;g.light&&(k.seqLength=q);if(!g.light){0<=w&&(k.nextSegment=this.indexToChr[w],k.nextPos=x);n=\"\";for(p=0;p<l-1;++p)n+=String.fromCharCode(a[b+36+p]);k.readName=n;b=b+36+l;l=\"\";for(p=0;p<s;++p)n=t(a,b),l=l+(n>>4)+ea[n&15],b+=4;k.cigar=l;s=\"\";l=q+1>>1;for(p=0;p<l;++p)n=a[b+p],s+=S[(n&240)>>4],s.length<q&&(s+=S[n&15]);b+=l;k.seq=s;s=\"\";for(p=0;p<q;++p)s+=String.fromCharCode(a[b+p]+33);b+=q;for(k.quals=s;b<e;){s=String.fromCharCode(a[b],a[b+1]);l=String.fromCharCode(a[b+2]);if(\"A\"==\nl)l=String.fromCharCode(a[b+3]),b+=4;else if(\"i\"==l||\"I\"==l)l=t(a,b+3),b+=7;else if(\"c\"==l||\"C\"==l)l=a[b+3],b+=4;else if(\"s\"==l||\"S\"==l)l=P(a,b+3),b+=5;else if(\"f\"==l)l=O(a,b+3),b+=7;else if(\"Z\"==l||\"H\"==l)for(b+=3,l=\"\";p=a[b++],0!=p;)l+=String.fromCharCode(p);else if(\"B\"==l){l=String.fromCharCode(a[b+3]);p=t(a,b+4);if(\"i\"==l||\"I\"==l||\"f\"==l)n=4,u=\"f\"==l?O:t;else if(\"s\"==l||\"S\"==l)n=2,u=P;else if(\"c\"==l||\"C\"==l)n=1,u=V;else throw\"Unknown array type \"+l;b+=8;l=[];for(w=0;w<p;++w)l.push(u(a,b)),b+=\nn}else throw\"Unknown type \"+l;k[s]=l}}if(!d||k.pos<=h&&k.pos+q>=d)void 0!==f&&m!=f||c.push(k);if(k.pos>h)return!0;b=e}};window.dallianceLib={URLFetchable:z,BlobFetchable:F,makeBam:function(a,b,c,d,h){a.slice(0,10).fetch(function(f){return f?Q(a,b,c,d,h):d(null,\"Couldn't access BAM.\")},{timeout:5E3})},inflateBuffer:J};\"object\"===typeof module&&\"object\"===typeof module.exports&&(module.exports=window.dallianceLib)})();\n","!function(a){var b=this;\"object\"==typeof exports?module.exports=a(b):\"function\"==typeof define&&define.amd?define([],function(){return a(b)}):b.jDataView=a(b)}(function(a){\"use strict\";function b(a,b){return\"object\"!=typeof a||null===a?!1:a.constructor===b||Object.prototype.toString.call(a)===\"[object \"+b.name+\"]\"}function c(a,c){return!c&&b(a,Array)?a:Array.prototype.slice.call(a)}function d(a,b){return void 0!==a?a:b}function e(a,c,f,g){if(e.is(a)){var h=a.slice(c,c+f);return h._littleEndian=d(g,h._littleEndian),h}if(!e.is(this))return new e(a,c,f,g);if(this.buffer=a=e.wrapBuffer(a),this._isArrayBuffer=j.ArrayBuffer&&b(a,ArrayBuffer),this._isPixelData=!0&&j.PixelData&&b(a,CanvasPixelArray),this._isDataView=j.DataView&&this._isArrayBuffer,this._isNodeBuffer=!1,!this._isArrayBuffer&&!this._isPixelData&&!b(a,Array))throw new TypeError(\"jDataView buffer has an incompatible type\");this._littleEndian=!!g;var i=\"byteLength\"in a?a.byteLength:a.length;this.byteOffset=c=d(c,0),this.byteLength=f=d(f,i-c),this._offset=this._bitOffset=0,this._isDataView?this._view=new DataView(a,c,f):this._checkBounds(c,f,i),this._engineAction=this._isDataView?this._dataViewAction:this._isArrayBuffer?this._arrayBufferAction:this._arrayAction}function f(a){for(var b=j.ArrayBuffer?Uint8Array:Array,c=new b(a.length),d=0,e=a.length;e>d;d++)c[d]=255&a.charCodeAt(d);return c}function g(a){return a>=0&&31>a?1<<a:g[a]||(g[a]=Math.pow(2,a))}function h(a,b){this.lo=a,this.hi=b}function i(){h.apply(this,arguments)}var j={NodeBuffer:!1,DataView:\"DataView\"in a,ArrayBuffer:\"ArrayBuffer\"in a,PixelData:!0&&\"CanvasPixelArray\"in a&&!(\"Uint8ClampedArray\"in a)&&\"document\"in a},k=a.TextEncoder,l=a.TextDecoder;if(j.PixelData)var m=document.createElement(\"canvas\").getContext(\"2d\"),n=function(a,b){var c=m.createImageData((a+3)/4,1).data;if(c.byteLength=a,void 0!==b)for(var d=0;a>d;d++)c[d]=b[d];return c};var o={Int8:1,Int16:2,Int32:4,Uint8:1,Uint16:2,Uint32:4,Float32:4,Float64:8};e.wrapBuffer=function(a){switch(typeof a){case\"number\":if(j.ArrayBuffer)a=new Uint8Array(a).buffer;else if(j.PixelData)a=n(a);else{a=new Array(a);for(var d=0;d<a.length;d++)a[d]=0}return a;case\"string\":a=f(a);default:return\"length\"in a&&!(j.ArrayBuffer&&b(a,ArrayBuffer)||j.PixelData&&b(a,CanvasPixelArray))&&(j.ArrayBuffer?b(a,ArrayBuffer)||(a=new Uint8Array(a).buffer,b(a,ArrayBuffer)||(a=new Uint8Array(c(a,!0)).buffer)):a=j.PixelData?n(a.length,a):c(a)),a}},e.is=function(a){return a&&a.jDataView},e.from=function(){return new e(arguments)},e.Uint64=h,h.prototype={valueOf:function(){return this.lo+g(32)*this.hi},toString:function(){return Number.prototype.toString.apply(this.valueOf(),arguments)}},h.fromNumber=function(a){var b=Math.floor(a/g(32)),c=a-b*g(32);return new h(c,b)},e.Int64=i,i.prototype=\"create\"in Object?Object.create(h.prototype):new h,i.prototype.valueOf=function(){return this.hi<g(31)?h.prototype.valueOf.apply(this,arguments):-(g(32)-this.lo+g(32)*(g(32)-1-this.hi))},i.fromNumber=function(a){var b,c;if(a>=0){var d=h.fromNumber(a);b=d.lo,c=d.hi}else c=Math.floor(a/g(32)),b=a-c*g(32),c+=g(32);return new i(b,c)};var p=e.prototype={compatibility:j,jDataView:!0,_checkBounds:function(a,b,c){if(\"number\"!=typeof a)throw new TypeError(\"Offset is not a number.\");if(\"number\"!=typeof b)throw new TypeError(\"Size is not a number.\");if(0>b)throw new RangeError(\"Length is negative.\");if(0>a||a+b>d(c,this.byteLength))throw new RangeError(\"Offsets are out of bounds.\")},_action:function(a,b,c,e,f){return this._engineAction(a,b,d(c,this._offset),d(e,this._littleEndian),f)},_dataViewAction:function(a,b,c,d,e){return this._offset=c+o[a],b?this._view[\"get\"+a](c,d):this._view[\"set\"+a](c,e,d)},_arrayBufferAction:function(b,c,e,f,g){var h,i=o[b],j=a[b+\"Array\"];if(f=d(f,this._littleEndian),1===i||(this.byteOffset+e)%i===0&&f)return h=new j(this.buffer,this.byteOffset+e,1),this._offset=e+i,c?h[0]:h[0]=g;var k=new Uint8Array(c?this.getBytes(i,e,f,!0):i);return h=new j(k.buffer,0,1),c?h[0]:(h[0]=g,void this._setBytes(e,k,f))},_arrayAction:function(a,b,c,d,e){return b?this[\"_get\"+a](c,d):this[\"_set\"+a](c,e,d)},_getBytes:function(a,b,e){e=d(e,this._littleEndian),b=d(b,this._offset),a=d(a,this.byteLength-b),this._checkBounds(b,a),b+=this.byteOffset,this._offset=b-this.byteOffset+a;var f=this._isArrayBuffer?new Uint8Array(this.buffer,b,a):(this.buffer.slice||Array.prototype.slice).call(this.buffer,b,b+a);return e||1>=a?f:c(f).reverse()},getBytes:function(a,b,e,f){var g=this._getBytes(a,b,d(e,!0));return f?c(g):g},_setBytes:function(a,b,e){var f=b.length;if(0!==f){if(e=d(e,this._littleEndian),a=d(a,this._offset),this._checkBounds(a,f),!e&&f>1&&(b=c(b,!0).reverse()),a+=this.byteOffset,this._isArrayBuffer)new Uint8Array(this.buffer,a,f).set(b);else for(var g=0;f>g;g++)this.buffer[a+g]=b[g];this._offset=a-this.byteOffset+f}},setBytes:function(a,b,c){this._setBytes(a,b,d(c,!0))},getString:function(a,b,c){var d=this._getBytes(a,b,!0);if(c=\"utf8\"===c?\"utf-8\":c||\"binary\",l&&\"binary\"!==c)return new l(c).decode(this._isArrayBuffer?d:new Uint8Array(d));var e=\"\";a=d.length;for(var f=0;a>f;f++)e+=String.fromCharCode(d[f]);return\"utf-8\"===c&&(e=decodeURIComponent(escape(e))),e},setString:function(a,b,c){c=\"utf8\"===c?\"utf-8\":c||\"binary\";var d;k&&\"binary\"!==c?d=new k(c).encode(b):(\"utf-8\"===c&&(b=unescape(encodeURIComponent(b))),d=f(b)),this._setBytes(a,d,!0)},getChar:function(a){return this.getString(1,a)},setChar:function(a,b){this.setString(a,b)},tell:function(){return this._offset},seek:function(a){return this._checkBounds(a,0),this._offset=a},skip:function(a){return this.seek(this._offset+a)},slice:function(a,b,c){function f(a,b){return 0>a?a+b:a}return a=f(a,this.byteLength),b=f(d(b,this.byteLength),this.byteLength),c?new e(this.getBytes(b-a,a,!0,!0),void 0,void 0,this._littleEndian):new e(this.buffer,this.byteOffset+a,b-a,this._littleEndian)},alignBy:function(a){return this._bitOffset=0,1!==d(a,1)?this.skip(a-(this._offset%a||a)):this._offset},_getFloat64:function(a,b){var c=this._getBytes(8,a,b),d=1-2*(c[7]>>7),e=((c[7]<<1&255)<<3|c[6]>>4)-1023,f=(15&c[6])*g(48)+c[5]*g(40)+c[4]*g(32)+c[3]*g(24)+c[2]*g(16)+c[1]*g(8)+c[0];return 1024===e?0!==f?0/0:1/0*d:-1023===e?d*f*g(-1074):d*(1+f*g(-52))*g(e)},_getFloat32:function(a,b){var c=this._getBytes(4,a,b),d=1-2*(c[3]>>7),e=(c[3]<<1&255|c[2]>>7)-127,f=(127&c[2])<<16|c[1]<<8|c[0];return 128===e?0!==f?0/0:1/0*d:-127===e?d*f*g(-149):d*(1+f*g(-23))*g(e)},_get64:function(a,b,c){c=d(c,this._littleEndian),b=d(b,this._offset);for(var e=c?[0,4]:[4,0],f=0;2>f;f++)e[f]=this.getUint32(b+e[f],c);return this._offset=b+8,new a(e[0],e[1])},getInt64:function(a,b){return this._get64(i,a,b)},getUint64:function(a,b){return this._get64(h,a,b)},_getInt32:function(a,b){var c=this._getBytes(4,a,b);return c[3]<<24|c[2]<<16|c[1]<<8|c[0]},_getUint32:function(a,b){return this._getInt32(a,b)>>>0},_getInt16:function(a,b){return this._getUint16(a,b)<<16>>16},_getUint16:function(a,b){var c=this._getBytes(2,a,b);return c[1]<<8|c[0]},_getInt8:function(a){return this._getUint8(a)<<24>>24},_getUint8:function(a){return this._getBytes(1,a)[0]},_getBitRangeData:function(a,b){var c=(d(b,this._offset)<<3)+this._bitOffset,e=c+a,f=c>>>3,g=e+7>>>3,h=this._getBytes(g-f,f,!0),i=0;(this._bitOffset=7&e)&&(this._bitOffset-=8);for(var j=0,k=h.length;k>j;j++)i=i<<8|h[j];return{start:f,bytes:h,wideValue:i}},getSigned:function(a,b){var c=32-a;return this.getUnsigned(a,b)<<c>>c},getUnsigned:function(a,b){var c=this._getBitRangeData(a,b).wideValue>>>-this._bitOffset;return 32>a?c&~(-1<<a):c},_setBinaryFloat:function(a,b,c,d,e){var f,h,i=0>b?1:0,j=~(-1<<d-1),k=1-j;0>b&&(b=-b),0===b?(f=0,h=0):isNaN(b)?(f=2*j+1,h=1):1/0===b?(f=2*j+1,h=0):(f=Math.floor(Math.log(b)/Math.LN2),f>=k&&j>=f?(h=Math.floor((b*g(-f)-1)*g(c)),f+=j):(h=Math.floor(b/g(k-c)),f=0));for(var l=[];c>=8;)l.push(h%256),h=Math.floor(h/256),c-=8;for(f=f<<c|h,d+=c;d>=8;)l.push(255&f),f>>>=8,d-=8;l.push(i<<d|f),this._setBytes(a,l,e)},_setFloat32:function(a,b,c){this._setBinaryFloat(a,b,23,8,c)},_setFloat64:function(a,b,c){this._setBinaryFloat(a,b,52,11,c)},_set64:function(a,b,c,e){\"object\"!=typeof c&&(c=a.fromNumber(c)),e=d(e,this._littleEndian),b=d(b,this._offset);var f=e?{lo:0,hi:4}:{lo:4,hi:0};for(var g in f)this.setUint32(b+f[g],c[g],e);this._offset=b+8},setInt64:function(a,b,c){this._set64(i,a,b,c)},setUint64:function(a,b,c){this._set64(h,a,b,c)},_setUint32:function(a,b,c){this._setBytes(a,[255&b,b>>>8&255,b>>>16&255,b>>>24],c)},_setUint16:function(a,b,c){this._setBytes(a,[255&b,b>>>8&255],c)},_setUint8:function(a,b){this._setBytes(a,[255&b])},setUnsigned:function(a,b,c){var d=this._getBitRangeData(c,a),e=d.wideValue,f=d.bytes;e&=~(~(-1<<c)<<-this._bitOffset),e|=(32>c?b&~(-1<<c):b)<<-this._bitOffset;for(var g=f.length-1;g>=0;g--)f[g]=255&e,e>>>=8;this._setBytes(d.start,f,!0)}};for(var q in o)!function(a){p[\"get\"+a]=function(b,c){return this._action(a,!0,b,c)},p[\"set\"+a]=function(b,c,d){this._action(a,!1,b,d,c)}}(q);p._setInt32=p._setUint32,p._setInt16=p._setUint16,p._setInt8=p._setUint8,p.setSigned=p.setUnsigned;for(var r in p)\"set\"===r.slice(0,3)&&!function(a){p[\"write\"+a]=function(){Array.prototype.unshift.call(arguments,void 0),this[\"set\"+a].apply(this,arguments)}}(r.slice(3));return e});\n//# sourceMappingURL=jdataview.js.map\n","(function () {\n\nif (typeof jDataView === 'undefined' && typeof require !== 'undefined') {\n\tjDataView = require('./jDataView.js');\n}\n\n// Extend code from underscorejs (modified for fast inheritance using prototypes)\nfunction inherit(obj) {\n  if ('create' in Object) {\n    obj = Object.create(obj);\n  } else {\n    function ClonedObject() {}\n    ClonedObject.prototype = obj;\n    obj = new ClonedObject();\n  }\n  for (var i = 1; i < arguments.length; ++i) {\n    var source = arguments[i];\n    for (var prop in source) {\n      if (source[prop] !== undefined) {\n        obj[prop] = source[prop];\n      }\n    }\n  }\n  return obj;\n}\n\nfunction jParser(view, structure) {\n  if (!(this instanceof arguments.callee)) {\n    throw new Error(\"Constructor may not be called as a function\");\n  }\n  if (!(view instanceof jDataView)) {\n    view = new jDataView(view, undefined, undefined, true);\n  }\n  this.view = view;\n  this.view.seek(0);\n  this._bitShift = 0;\n  this.structure = inherit(jParser.prototype.structure, structure);\n}\n\nfunction toInt(val) {\n  return val instanceof Function ? val.call(this) : val;\n}\n\njParser.prototype.structure = {\n  uint8: function () { return this.view.getUint8(); },\n  uint16: function () { return this.view.getUint16(); },\n  uint32: function () { return this.view.getUint32(); },\n  uint64 : function () { return parseInt(this.view.getUint64(),10); },\n  int8: function () { return this.view.getInt8(); },\n  int16: function () { return this.view.getInt16(); },\n  int32: function () { return this.view.getInt32(); },\n  float32: function () { return this.view.getFloat32(); },\n  float64: function () { return this.view.getFloat64(); },\n  char: function () { return this.view.getChar(); },\n  string: function (length) {\n    return this.view.getString(toInt.call(this, length));\n  },\n  array: function (type, length) {\n    length = toInt.call(this, length);\n    var results = [];\n    for (var i = 0; i < length; ++i) {\n      results.push(this.parse(type));\n    }\n    return results;\n  },\n  seek: function (position, block) {\n    position = toInt.call(this, position);\n    if (block instanceof Function) {\n      var old_position = this.view.tell();\n      this.view.seek(position);\n      var result = block.call(this);\n      this.view.seek(old_position);\n      return result;\n    } else {\n      return this.view.seek(position);\n    }\n  },\n  tell: function () {\n    return this.view.tell();\n  },\n  skip: function (offset) {\n    offset = toInt.call(this, offset);\n    this.view.seek(this.view.tell() + offset);\n    return offset;\n  },\n  err : function(e){\n    this.current = { error : e };\n    return;\n  },\n  if: function (predicate) {\n    if (predicate instanceof Function ? predicate.call(this) : predicate) {\n    return this.parse.apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n  }\n};\n\njParser.prototype.seek = jParser.prototype.structure.seek;\njParser.prototype.tell = jParser.prototype.structure.tell;\njParser.prototype.skip = jParser.prototype.structure.skip;\njParser.prototype.err  = jParser.prototype.structure.err;\n\njParser.prototype.parse = function (structure) {\n  if (typeof structure === 'number') {\n    var fieldValue = 0,\n    bitSize = structure;\n\n    if (this._bitShift < 0) {\n      var byteShift = this._bitShift >> 3; // Math.floor(_bitShift / 8)\n      this.skip(byteShift);\n      this._bitShift &= 7; // _bitShift + 8 * Math.floor(_bitShift / 8)\n    }\n    if (this._bitShift > 0 && bitSize >= 8 - this._bitShift) {\n      fieldValue = this.view.getUint8() & ~(-1 << (8 - this._bitShift));\n      bitSize -= 8 - this._bitShift;\n      this._bitShift = 0;\n    }\n    while (bitSize >= 8) {\n      fieldValue = this.view.getUint8() | (fieldValue << 8);\n      bitSize -= 8;\n    }\n    if (bitSize > 0) {\n      fieldValue = ((this.view.getUint8() >>> (8 - (this._bitShift + bitSize))) & ~(-1 << bitSize)) | (fieldValue << bitSize);\n      this._bitShift += bitSize - 8; // passing negative value for next pass\n    }\n\n    return fieldValue;\n  }\n\n  // f, 1, 2 means f(1, 2)\n  if (structure instanceof Function) {\n    return structure.apply(this, Array.prototype.slice.call(arguments, 1));\n  }\n\n  // 'int32', ... is a shortcut for ['int32', ...]\n  if (typeof structure === 'string') {\n    structure = Array.prototype.slice.call(arguments);\n  }\n\n  // ['string', 256] means structure['string'](256)\n  if (structure instanceof Array) {\n    var key = structure[0];\n    if (!(key in this.structure)) {\n      throw new Error(\"Missing structure for `\" + key + \"`\");\n    }\n    return this.parse.apply(this, [this.structure[key]].concat(structure.slice(1)));\n  }\n\n  // {key: val} means {key: parse(val)}\n  if (typeof structure === 'object') {\n    var output = {},\n    current = this.current;\n\n    this.current = output;\n\n    for (var key in structure) {\n      if(this.current.error){\n        output = this.current;\n        return output;\n      }\n      var value = this.parse(structure[key]);\n\n      // skipping undefined call results (useful for 'if' statement)\n      if (value !== undefined) {\n        output[key] = value;\n      }\n    }\n\n    this.current = current;\n\n    return output;\n  }\n\n  throw new Error(\"Unknown structure type `\" + structure + \"`\");\n};\n\n\nvar all;\nif (typeof self !== 'undefined') {\n  all = self;\n} else if (typeof window !== 'undefined') {\n  all = window;\n} else if (typeof global !== 'undefined') {\n  all = global;\n}\n// Browser + Web Worker\nall.jParser = jParser;\n\nif (typeof module === 'object' && typeof module.exports === 'object') {\n  module.exports = jParser;\n}\n\n})();\n","/*! jQuery UI - v1.12.1 - 2017-08-01\n* http://jqueryui.com\n* Includes: widget.js, position.js, data.js, disable-selection.js, scroll-parent.js, widgets/draggable.js, widgets/resizable.js, widgets/sortable.js, widgets/mouse.js\n* Copyright jQuery Foundation and other contributors; Licensed MIT */\n\n(function(t){\"function\"==typeof define&&define.amd?define([\"jquery\"],t):t(jQuery)})(function(t){t.ui=t.ui||{},t.ui.version=\"1.12.1\";var e=0,i=Array.prototype.slice;t.cleanData=function(e){return function(i){var s,n,o;for(o=0;null!=(n=i[o]);o++)try{s=t._data(n,\"events\"),s&&s.remove&&t(n).triggerHandler(\"remove\")}catch(a){}e(i)}}(t.cleanData),t.widget=function(e,i,s){var n,o,a,r={},l=e.split(\".\")[0];e=e.split(\".\")[1];var h=l+\"-\"+e;return s||(s=i,i=t.Widget),t.isArray(s)&&(s=t.extend.apply(null,[{}].concat(s))),t.expr[\":\"][h.toLowerCase()]=function(e){return!!t.data(e,h)},t[l]=t[l]||{},n=t[l][e],o=t[l][e]=function(t,e){return this._createWidget?(arguments.length&&this._createWidget(t,e),void 0):new o(t,e)},t.extend(o,n,{version:s.version,_proto:t.extend({},s),_childConstructors:[]}),a=new i,a.options=t.widget.extend({},a.options),t.each(s,function(e,s){return t.isFunction(s)?(r[e]=function(){function t(){return i.prototype[e].apply(this,arguments)}function n(t){return i.prototype[e].apply(this,t)}return function(){var e,i=this._super,o=this._superApply;return this._super=t,this._superApply=n,e=s.apply(this,arguments),this._super=i,this._superApply=o,e}}(),void 0):(r[e]=s,void 0)}),o.prototype=t.widget.extend(a,{widgetEventPrefix:n?a.widgetEventPrefix||e:e},r,{constructor:o,namespace:l,widgetName:e,widgetFullName:h}),n?(t.each(n._childConstructors,function(e,i){var s=i.prototype;t.widget(s.namespace+\".\"+s.widgetName,o,i._proto)}),delete n._childConstructors):i._childConstructors.push(o),t.widget.bridge(e,o),o},t.widget.extend=function(e){for(var s,n,o=i.call(arguments,1),a=0,r=o.length;r>a;a++)for(s in o[a])n=o[a][s],o[a].hasOwnProperty(s)&&void 0!==n&&(e[s]=t.isPlainObject(n)?t.isPlainObject(e[s])?t.widget.extend({},e[s],n):t.widget.extend({},n):n);return e},t.widget.bridge=function(e,s){var n=s.prototype.widgetFullName||e;t.fn[e]=function(o){var a=\"string\"==typeof o,r=i.call(arguments,1),l=this;return a?this.length||\"instance\"!==o?this.each(function(){var i,s=t.data(this,n);return\"instance\"===o?(l=s,!1):s?t.isFunction(s[o])&&\"_\"!==o.charAt(0)?(i=s[o].apply(s,r),i!==s&&void 0!==i?(l=i&&i.jquery?l.pushStack(i.get()):i,!1):void 0):t.error(\"no such method '\"+o+\"' for \"+e+\" widget instance\"):t.error(\"cannot call methods on \"+e+\" prior to initialization; \"+\"attempted to call method '\"+o+\"'\")}):l=void 0:(r.length&&(o=t.widget.extend.apply(null,[o].concat(r))),this.each(function(){var e=t.data(this,n);e?(e.option(o||{}),e._init&&e._init()):t.data(this,n,new s(o,this))})),l}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:\"widget\",widgetEventPrefix:\"\",defaultElement:\"<div>\",options:{classes:{},disabled:!1,create:null},_createWidget:function(i,s){s=t(s||this.defaultElement||this)[0],this.element=t(s),this.uuid=e++,this.eventNamespace=\".\"+this.widgetName+this.uuid,this.bindings=t(),this.hoverable=t(),this.focusable=t(),this.classesElementLookup={},s!==this&&(t.data(s,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===s&&this.destroy()}}),this.document=t(s.style?s.ownerDocument:s.document||s),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this.options=t.widget.extend({},this.options,this._getCreateOptions(),i),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger(\"create\",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){var e=this;this._destroy(),t.each(this.classesElementLookup,function(t,i){e._removeClass(i,t)}),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr(\"aria-disabled\"),this.bindings.off(this.eventNamespace)},_destroy:t.noop,widget:function(){return this.element},option:function(e,i){var s,n,o,a=e;if(0===arguments.length)return t.widget.extend({},this.options);if(\"string\"==typeof e)if(a={},s=e.split(\".\"),e=s.shift(),s.length){for(n=a[e]=t.widget.extend({},this.options[e]),o=0;s.length-1>o;o++)n[s[o]]=n[s[o]]||{},n=n[s[o]];if(e=s.pop(),1===arguments.length)return void 0===n[e]?null:n[e];n[e]=i}else{if(1===arguments.length)return void 0===this.options[e]?null:this.options[e];a[e]=i}return this._setOptions(a),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return\"classes\"===t&&this._setOptionClasses(e),this.options[t]=e,\"disabled\"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(e){var i,s,n;for(i in e)n=this.classesElementLookup[i],e[i]!==this.options.classes[i]&&n&&n.length&&(s=t(n.get()),this._removeClass(n,i),s.addClass(this._classes({element:s,keys:i,classes:e,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+\"-disabled\",null,!!t),t&&(this._removeClass(this.hoverable,null,\"ui-state-hover\"),this._removeClass(this.focusable,null,\"ui-state-focus\"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(e){function i(i,o){var a,r;for(r=0;i.length>r;r++)a=n.classesElementLookup[i[r]]||t(),a=e.add?t(t.unique(a.get().concat(e.element.get()))):t(a.not(e.element).get()),n.classesElementLookup[i[r]]=a,s.push(i[r]),o&&e.classes[i[r]]&&s.push(e.classes[i[r]])}var s=[],n=this;return e=t.extend({element:this.element,classes:this.options.classes||{}},e),this._on(e.element,{remove:\"_untrackClassesElement\"}),e.keys&&i(e.keys.match(/\\S+/g)||[],!0),e.extra&&i(e.extra.match(/\\S+/g)||[]),s.join(\" \")},_untrackClassesElement:function(e){var i=this;t.each(i.classesElementLookup,function(s,n){-1!==t.inArray(e.target,n)&&(i.classesElementLookup[s]=t(n.not(e.target).get()))})},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,s){s=\"boolean\"==typeof s?s:i;var n=\"string\"==typeof t||null===t,o={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s};return o.element.toggleClass(this._classes(o),s),this},_on:function(e,i,s){var n,o=this;\"boolean\"!=typeof e&&(s=i,i=e,e=!1),s?(i=n=t(i),this.bindings=this.bindings.add(i)):(s=i,i=this.element,n=this.widget()),t.each(s,function(s,a){function r(){return e||o.options.disabled!==!0&&!t(this).hasClass(\"ui-state-disabled\")?(\"string\"==typeof a?o[a]:a).apply(o,arguments):void 0}\"string\"!=typeof a&&(r.guid=a.guid=a.guid||r.guid||t.guid++);var l=s.match(/^([\\w:-]*)\\s*(.*)$/),h=l[1]+o.eventNamespace,c=l[2];c?n.on(h,c,r):i.on(h,r)})},_off:function(e,i){i=(i||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,e.off(i).off(i),this.bindings=t(this.bindings.not(e).get()),this.focusable=t(this.focusable.not(e).get()),this.hoverable=t(this.hoverable.not(e).get())},_delay:function(t,e){function i(){return(\"string\"==typeof t?s[t]:t).apply(s,arguments)}var s=this;return setTimeout(i,e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){this._addClass(t(e.currentTarget),null,\"ui-state-hover\")},mouseleave:function(e){this._removeClass(t(e.currentTarget),null,\"ui-state-hover\")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){this._addClass(t(e.currentTarget),null,\"ui-state-focus\")},focusout:function(e){this._removeClass(t(e.currentTarget),null,\"ui-state-focus\")}})},_trigger:function(e,i,s){var n,o,a=this.options[e];if(s=s||{},i=t.Event(i),i.type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],o=i.originalEvent)for(n in o)n in i||(i[n]=o[n]);return this.element.trigger(i,s),!(t.isFunction(a)&&a.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},t.each({show:\"fadeIn\",hide:\"fadeOut\"},function(e,i){t.Widget.prototype[\"_\"+e]=function(s,n,o){\"string\"==typeof n&&(n={effect:n});var a,r=n?n===!0||\"number\"==typeof n?i:n.effect||i:e;n=n||{},\"number\"==typeof n&&(n={duration:n}),a=!t.isEmptyObject(n),n.complete=o,n.delay&&s.delay(n.delay),a&&t.effects&&t.effects.effect[r]?s[e](n):r!==e&&s[r]?s[r](n.duration,n.easing,o):s.queue(function(i){t(this)[e](),o&&o.call(s[0]),i()})}}),t.widget,function(){function e(t,e,i){return[parseFloat(t[0])*(u.test(t[0])?e/100:1),parseFloat(t[1])*(u.test(t[1])?i/100:1)]}function i(e,i){return parseInt(t.css(e,i),10)||0}function s(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()}}var n,o=Math.max,a=Math.abs,r=/left|center|right/,l=/top|center|bottom/,h=/[\\+\\-]\\d+(\\.[\\d]+)?%?/,c=/^\\w+/,u=/%$/,d=t.fn.position;t.position={scrollbarWidth:function(){if(void 0!==n)return n;var e,i,s=t(\"<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>\"),o=s.children()[0];return t(\"body\").append(s),e=o.offsetWidth,s.css(\"overflow\",\"scroll\"),i=o.offsetWidth,e===i&&(i=s[0].clientWidth),s.remove(),n=e-i},getScrollInfo:function(e){var i=e.isWindow||e.isDocument?\"\":e.element.css(\"overflow-x\"),s=e.isWindow||e.isDocument?\"\":e.element.css(\"overflow-y\"),n=\"scroll\"===i||\"auto\"===i&&e.width<e.element[0].scrollWidth,o=\"scroll\"===s||\"auto\"===s&&e.height<e.element[0].scrollHeight;return{width:o?t.position.scrollbarWidth():0,height:n?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),s=t.isWindow(i[0]),n=!!i[0]&&9===i[0].nodeType,o=!s&&!n;return{element:i,isWindow:s,isDocument:n,offset:o?t(e).offset():{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:i.outerWidth(),height:i.outerHeight()}}},t.fn.position=function(n){if(!n||!n.of)return d.apply(this,arguments);n=t.extend({},n);var u,p,f,g,m,_,v=t(n.of),b=t.position.getWithinInfo(n.within),y=t.position.getScrollInfo(b),w=(n.collision||\"flip\").split(\" \"),k={};return _=s(v),v[0].preventDefault&&(n.at=\"left top\"),p=_.width,f=_.height,g=_.offset,m=t.extend({},g),t.each([\"my\",\"at\"],function(){var t,e,i=(n[this]||\"\").split(\" \");1===i.length&&(i=r.test(i[0])?i.concat([\"center\"]):l.test(i[0])?[\"center\"].concat(i):[\"center\",\"center\"]),i[0]=r.test(i[0])?i[0]:\"center\",i[1]=l.test(i[1])?i[1]:\"center\",t=h.exec(i[0]),e=h.exec(i[1]),k[this]=[t?t[0]:0,e?e[0]:0],n[this]=[c.exec(i[0])[0],c.exec(i[1])[0]]}),1===w.length&&(w[1]=w[0]),\"right\"===n.at[0]?m.left+=p:\"center\"===n.at[0]&&(m.left+=p/2),\"bottom\"===n.at[1]?m.top+=f:\"center\"===n.at[1]&&(m.top+=f/2),u=e(k.at,p,f),m.left+=u[0],m.top+=u[1],this.each(function(){var s,r,l=t(this),h=l.outerWidth(),c=l.outerHeight(),d=i(this,\"marginLeft\"),_=i(this,\"marginTop\"),x=h+d+i(this,\"marginRight\")+y.width,C=c+_+i(this,\"marginBottom\")+y.height,D=t.extend({},m),T=e(k.my,l.outerWidth(),l.outerHeight());\"right\"===n.my[0]?D.left-=h:\"center\"===n.my[0]&&(D.left-=h/2),\"bottom\"===n.my[1]?D.top-=c:\"center\"===n.my[1]&&(D.top-=c/2),D.left+=T[0],D.top+=T[1],s={marginLeft:d,marginTop:_},t.each([\"left\",\"top\"],function(e,i){t.ui.position[w[e]]&&t.ui.position[w[e]][i](D,{targetWidth:p,targetHeight:f,elemWidth:h,elemHeight:c,collisionPosition:s,collisionWidth:x,collisionHeight:C,offset:[u[0]+T[0],u[1]+T[1]],my:n.my,at:n.at,within:b,elem:l})}),n.using&&(r=function(t){var e=g.left-D.left,i=e+p-h,s=g.top-D.top,r=s+f-c,u={target:{element:v,left:g.left,top:g.top,width:p,height:f},element:{element:l,left:D.left,top:D.top,width:h,height:c},horizontal:0>i?\"left\":e>0?\"right\":\"center\",vertical:0>r?\"top\":s>0?\"bottom\":\"middle\"};h>p&&p>a(e+i)&&(u.horizontal=\"center\"),c>f&&f>a(s+r)&&(u.vertical=\"middle\"),u.important=o(a(e),a(i))>o(a(s),a(r))?\"horizontal\":\"vertical\",n.using.call(this,t,u)}),l.offset(t.extend(D,{using:r}))})},t.ui.position={fit:{left:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollLeft:s.offset.left,a=s.width,r=t.left-e.collisionPosition.marginLeft,l=n-r,h=r+e.collisionWidth-a-n;e.collisionWidth>a?l>0&&0>=h?(i=t.left+l+e.collisionWidth-a-n,t.left+=l-i):t.left=h>0&&0>=l?n:l>h?n+a-e.collisionWidth:n:l>0?t.left+=l:h>0?t.left-=h:t.left=o(t.left-r,t.left)},top:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollTop:s.offset.top,a=e.within.height,r=t.top-e.collisionPosition.marginTop,l=n-r,h=r+e.collisionHeight-a-n;e.collisionHeight>a?l>0&&0>=h?(i=t.top+l+e.collisionHeight-a-n,t.top+=l-i):t.top=h>0&&0>=l?n:l>h?n+a-e.collisionHeight:n:l>0?t.top+=l:h>0?t.top-=h:t.top=o(t.top-r,t.top)}},flip:{left:function(t,e){var i,s,n=e.within,o=n.offset.left+n.scrollLeft,r=n.width,l=n.isWindow?n.scrollLeft:n.offset.left,h=t.left-e.collisionPosition.marginLeft,c=h-l,u=h+e.collisionWidth-r-l,d=\"left\"===e.my[0]?-e.elemWidth:\"right\"===e.my[0]?e.elemWidth:0,p=\"left\"===e.at[0]?e.targetWidth:\"right\"===e.at[0]?-e.targetWidth:0,f=-2*e.offset[0];0>c?(i=t.left+d+p+f+e.collisionWidth-r-o,(0>i||a(c)>i)&&(t.left+=d+p+f)):u>0&&(s=t.left-e.collisionPosition.marginLeft+d+p+f-l,(s>0||u>a(s))&&(t.left+=d+p+f))},top:function(t,e){var i,s,n=e.within,o=n.offset.top+n.scrollTop,r=n.height,l=n.isWindow?n.scrollTop:n.offset.top,h=t.top-e.collisionPosition.marginTop,c=h-l,u=h+e.collisionHeight-r-l,d=\"top\"===e.my[1],p=d?-e.elemHeight:\"bottom\"===e.my[1]?e.elemHeight:0,f=\"top\"===e.at[1]?e.targetHeight:\"bottom\"===e.at[1]?-e.targetHeight:0,g=-2*e.offset[1];0>c?(s=t.top+p+f+g+e.collisionHeight-r-o,(0>s||a(c)>s)&&(t.top+=p+f+g)):u>0&&(i=t.top-e.collisionPosition.marginTop+p+f+g-l,(i>0||u>a(i))&&(t.top+=p+f+g))}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}}}(),t.ui.position,t.extend(t.expr[\":\"],{data:t.expr.createPseudo?t.expr.createPseudo(function(e){return function(i){return!!t.data(i,e)}}):function(e,i,s){return!!t.data(e,s[3])}}),t.fn.extend({disableSelection:function(){var t=\"onselectstart\"in document.createElement(\"div\")?\"selectstart\":\"mousedown\";return function(){return this.on(t+\".ui-disableSelection\",function(t){t.preventDefault()})}}(),enableSelection:function(){return this.off(\".ui-disableSelection\")}}),t.fn.scrollParent=function(e){var i=this.css(\"position\"),s=\"absolute\"===i,n=e?/(auto|scroll|hidden)/:/(auto|scroll)/,o=this.parents().filter(function(){var e=t(this);return s&&\"static\"===e.css(\"position\")?!1:n.test(e.css(\"overflow\")+e.css(\"overflow-y\")+e.css(\"overflow-x\"))}).eq(0);return\"fixed\"!==i&&o.length?o:t(this[0].ownerDocument||document)},t.ui.ie=!!/msie [\\w.]+/.exec(navigator.userAgent.toLowerCase());var s=!1;t(document).on(\"mouseup\",function(){s=!1}),t.widget(\"ui.mouse\",{version:\"1.12.1\",options:{cancel:\"input, textarea, button, select, option\",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.on(\"mousedown.\"+this.widgetName,function(t){return e._mouseDown(t)}).on(\"click.\"+this.widgetName,function(i){return!0===t.data(i.target,e.widgetName+\".preventClickEvent\")?(t.removeData(i.target,e.widgetName+\".preventClickEvent\"),i.stopImmediatePropagation(),!1):void 0}),this.started=!1},_mouseDestroy:function(){this.element.off(\".\"+this.widgetName),this._mouseMoveDelegate&&this.document.off(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).off(\"mouseup.\"+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(e){if(!s){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(e),this._mouseDownEvent=e;var i=this,n=1===e.which,o=\"string\"==typeof this.options.cancel&&e.target.nodeName?t(e.target).closest(this.options.cancel).length:!1;return n&&!o&&this._mouseCapture(e)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){i.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(e)!==!1,!this._mouseStarted)?(e.preventDefault(),!0):(!0===t.data(e.target,this.widgetName+\".preventClickEvent\")&&t.removeData(e.target,this.widgetName+\".preventClickEvent\"),this._mouseMoveDelegate=function(t){return i._mouseMove(t)},this._mouseUpDelegate=function(t){return i._mouseUp(t)},this.document.on(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).on(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),e.preventDefault(),s=!0,!0)):!0}},_mouseMove:function(e){if(this._mouseMoved){if(t.ui.ie&&(!document.documentMode||9>document.documentMode)&&!e.button)return this._mouseUp(e);if(!e.which)if(e.originalEvent.altKey||e.originalEvent.ctrlKey||e.originalEvent.metaKey||e.originalEvent.shiftKey)this.ignoreMissingWhich=!0;else if(!this.ignoreMissingWhich)return this._mouseUp(e)}return(e.which||e.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,e)!==!1,this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(e){this.document.off(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).off(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&&t.data(e.target,this.widgetName+\".preventClickEvent\",!0),this._mouseStop(e)),this._mouseDelayTimer&&(clearTimeout(this._mouseDelayTimer),delete this._mouseDelayTimer),this.ignoreMissingWhich=!1,s=!1,e.preventDefault()},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),t.ui.plugin={add:function(e,i,s){var n,o=t.ui[e].prototype;for(n in s)o.plugins[n]=o.plugins[n]||[],o.plugins[n].push([i,s[n]])},call:function(t,e,i,s){var n,o=t.plugins[e];if(o&&(s||t.element[0].parentNode&&11!==t.element[0].parentNode.nodeType))for(n=0;o.length>n;n++)t.options[o[n][0]]&&o[n][1].apply(t.element,i)}},t.ui.safeActiveElement=function(t){var e;try{e=t.activeElement}catch(i){e=t.body}return e||(e=t.body),e.nodeName||(e=t.body),e},t.ui.safeBlur=function(e){e&&\"body\"!==e.nodeName.toLowerCase()&&t(e).trigger(\"blur\")},t.widget(\"ui.draggable\",t.ui.mouse,{version:\"1.12.1\",widgetEventPrefix:\"drag\",options:{addClasses:!0,appendTo:\"parent\",axis:!1,connectToSortable:!1,containment:!1,cursor:\"auto\",cursorAt:!1,grid:!1,handle:!1,helper:\"original\",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:\"default\",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:\"both\",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){\"original\"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this._addClass(\"ui-draggable\"),this._setHandleClassName(),this._mouseInit()},_setOption:function(t,e){this._super(t,e),\"handle\"===t&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){return(this.helper||this.element).is(\".ui-draggable-dragging\")?(this.destroyOnClear=!0,void 0):(this._removeHandleClassName(),this._mouseDestroy(),void 0)},_mouseCapture:function(e){var i=this.options;return this.helper||i.disabled||t(e.target).closest(\".ui-resizable-handle\").length>0?!1:(this.handle=this._getHandle(e),this.handle?(this._blurActiveElement(e),this._blockFrames(i.iframeFix===!0?\"iframe\":i.iframeFix),!0):!1)},_blockFrames:function(e){this.iframeBlocks=this.document.find(e).map(function(){var e=t(this);return t(\"<div>\").css(\"position\",\"absolute\").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(e){var i=t.ui.safeActiveElement(this.document[0]),s=t(e.target);s.closest(i).length||t.ui.safeBlur(i)},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this._addClass(this.helper,\"ui-draggable-dragging\"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css(\"position\"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=this.helper.parents().filter(function(){return\"fixed\"===t(this).css(\"position\")}).length>0,this.positionAbs=this.element.offset(),this._refreshOffsets(e),this.originalPosition=this.position=this._generatePosition(e,!1),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger(\"start\",e)===!1?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0)},_refreshOffsets:function(t){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:t.pageX-this.offset.left,top:t.pageY-this.offset.top}},_mouseDrag:function(e,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e,!0),this.positionAbs=this._convertPositionTo(\"absolute\"),!i){var s=this._uiHash();if(this._trigger(\"drag\",e,s)===!1)return this._mouseUp(new t.Event(\"mouseup\",e)),!1;this.position=s.position}return this.helper[0].style.left=this.position.left+\"px\",this.helper[0].style.top=this.position.top+\"px\",t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,s=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(s=t.ui.ddmanager.drop(this,e)),this.dropped&&(s=this.dropped,this.dropped=!1),\"invalid\"===this.options.revert&&!s||\"valid\"===this.options.revert&&s||this.options.revert===!0||t.isFunction(this.options.revert)&&this.options.revert.call(this.element,s)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger(\"stop\",e)!==!1&&i._clear()}):this._trigger(\"stop\",e)!==!1&&this._clear(),!1},_mouseUp:function(e){return this._unblockFrames(),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),this.handleElement.is(e.target)&&this.element.trigger(\"focus\"),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(\".ui-draggable-dragging\")?this._mouseUp(new t.Event(\"mouseup\",{target:this.element[0]})):this._clear(),this},_getHandle:function(e){return this.options.handle?!!t(e.target).closest(this.element.find(this.options.handle)).length:!0},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this._addClass(this.handleElement,\"ui-draggable-handle\")},_removeHandleClassName:function(){this._removeClass(this.handleElement,\"ui-draggable-handle\")},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper),n=s?t(i.helper.apply(this.element[0],[e])):\"clone\"===i.helper?this.element.clone().removeAttr(\"id\"):this.element;return n.parents(\"body\").length||n.appendTo(\"parent\"===i.appendTo?this.element[0].parentNode:i.appendTo),s&&n[0]===this.element[0]&&this._setPositionRelative(),n[0]===this.element[0]||/(fixed|absolute)/.test(n.css(\"position\"))||n.css(\"position\",\"absolute\"),n},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css(\"position\"))||(this.element[0].style.position=\"relative\")},_adjustOffsetFromHelper:function(e){\"string\"==typeof e&&(e=e.split(\" \")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),\"left\"in e&&(this.offset.click.left=e.left+this.margins.left),\"right\"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),\"top\"in e&&(this.offset.click.top=e.top+this.margins.top),\"bottom\"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_isRootNode:function(t){return/(html|body)/i.test(t.tagName)||t===this.document[0]},_getParentOffset:function(){var e=this.offsetParent.offset(),i=this.document[0];return\"absolute\"===this.cssPosition&&this.scrollParent[0]!==i&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:e.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(\"relative\"!==this.cssPosition)return{top:0,left:0};var t=this.element.position(),e=this._isRootNode(this.scrollParent[0]);return{top:t.top-(parseInt(this.helper.css(\"top\"),10)||0)+(e?0:this.scrollParent.scrollTop()),left:t.left-(parseInt(this.helper.css(\"left\"),10)||0)+(e?0:this.scrollParent.scrollLeft())}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css(\"marginLeft\"),10)||0,top:parseInt(this.element.css(\"marginTop\"),10)||0,right:parseInt(this.element.css(\"marginRight\"),10)||0,bottom:parseInt(this.element.css(\"marginBottom\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options,o=this.document[0];return this.relativeContainer=null,n.containment?\"window\"===n.containment?(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):\"document\"===n.containment?(this.containment=[0,0,t(o).width()-this.helperProportions.width-this.margins.left,(t(o).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):n.containment.constructor===Array?(this.containment=n.containment,void 0):(\"parent\"===n.containment&&(n.containment=this.helper[0].parentNode),i=t(n.containment),s=i[0],s&&(e=/(scroll|auto)/.test(i.css(\"overflow\")),this.containment=[(parseInt(i.css(\"borderLeftWidth\"),10)||0)+(parseInt(i.css(\"paddingLeft\"),10)||0),(parseInt(i.css(\"borderTopWidth\"),10)||0)+(parseInt(i.css(\"paddingTop\"),10)||0),(e?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(i.css(\"borderRightWidth\"),10)||0)-(parseInt(i.css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(i.css(\"borderBottomWidth\"),10)||0)-(parseInt(i.css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i),void 0):(this.containment=null,void 0)},_convertPositionTo:function(t,e){e||(e=this.position);var i=\"absolute\"===t?1:-1,s=this._isRootNode(this.scrollParent[0]);return{top:e.top+this.offset.relative.top*i+this.offset.parent.top*i-(\"fixed\"===this.cssPosition?-this.offset.scroll.top:s?0:this.offset.scroll.top)*i,left:e.left+this.offset.relative.left*i+this.offset.parent.left*i-(\"fixed\"===this.cssPosition?-this.offset.scroll.left:s?0:this.offset.scroll.left)*i}},_generatePosition:function(t,e){var i,s,n,o,a=this.options,r=this._isRootNode(this.scrollParent[0]),l=t.pageX,h=t.pageY;return r&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),e&&(this.containment&&(this.relativeContainer?(s=this.relativeContainer.offset(),i=[this.containment[0]+s.left,this.containment[1]+s.top,this.containment[2]+s.left,this.containment[3]+s.top]):i=this.containment,t.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),t.pageY-this.offset.click.top<i[1]&&(h=i[1]+this.offset.click.top),t.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),t.pageY-this.offset.click.top>i[3]&&(h=i[3]+this.offset.click.top)),a.grid&&(n=a.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/a.grid[1])*a.grid[1]:this.originalPageY,h=i?n-this.offset.click.top>=i[1]||n-this.offset.click.top>i[3]?n:n-this.offset.click.top>=i[1]?n-a.grid[1]:n+a.grid[1]:n,o=a.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/a.grid[0])*a.grid[0]:this.originalPageX,l=i?o-this.offset.click.left>=i[0]||o-this.offset.click.left>i[2]?o:o-this.offset.click.left>=i[0]?o-a.grid[0]:o+a.grid[0]:o),\"y\"===a.axis&&(l=this.originalPageX),\"x\"===a.axis&&(h=this.originalPageY)),{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(\"fixed\"===this.cssPosition?-this.offset.scroll.top:r?0:this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(\"fixed\"===this.cssPosition?-this.offset.scroll.left:r?0:this.offset.scroll.left)}},_clear:function(){this._removeClass(this.helper,\"ui-draggable-dragging\"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_trigger:function(e,i,s){return s=s||this._uiHash(),t.ui.plugin.call(this,e,[i,s,this],!0),/^(drag|start|stop)/.test(e)&&(this.positionAbs=this._convertPositionTo(\"absolute\"),s.offset=this.positionAbs),t.Widget.prototype._trigger.call(this,e,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add(\"draggable\",\"connectToSortable\",{start:function(e,i,s){var n=t.extend({},i,{item:s.element});s.sortables=[],t(s.options.connectToSortable).each(function(){var i=t(this).sortable(\"instance\");i&&!i.options.disabled&&(s.sortables.push(i),i.refreshPositions(),i._trigger(\"activate\",e,n))})},stop:function(e,i,s){var n=t.extend({},i,{item:s.element});s.cancelHelperRemoval=!1,t.each(s.sortables,function(){var t=this;t.isOver?(t.isOver=0,s.cancelHelperRemoval=!0,t.cancelHelperRemoval=!1,t._storedCSS={position:t.placeholder.css(\"position\"),top:t.placeholder.css(\"top\"),left:t.placeholder.css(\"left\")},t._mouseStop(e),t.options.helper=t.options._helper):(t.cancelHelperRemoval=!0,t._trigger(\"deactivate\",e,n))})},drag:function(e,i,s){t.each(s.sortables,function(){var n=!1,o=this;o.positionAbs=s.positionAbs,o.helperProportions=s.helperProportions,o.offset.click=s.offset.click,o._intersectsWith(o.containerCache)&&(n=!0,t.each(s.sortables,function(){return this.positionAbs=s.positionAbs,this.helperProportions=s.helperProportions,this.offset.click=s.offset.click,this!==o&&this._intersectsWith(this.containerCache)&&t.contains(o.element[0],this.element[0])&&(n=!1),n})),n?(o.isOver||(o.isOver=1,s._parent=i.helper.parent(),o.currentItem=i.helper.appendTo(o.element).data(\"ui-sortable-item\",!0),o.options._helper=o.options.helper,o.options.helper=function(){return i.helper[0]},e.target=o.currentItem[0],o._mouseCapture(e,!0),o._mouseStart(e,!0,!0),o.offset.click.top=s.offset.click.top,o.offset.click.left=s.offset.click.left,o.offset.parent.left-=s.offset.parent.left-o.offset.parent.left,o.offset.parent.top-=s.offset.parent.top-o.offset.parent.top,s._trigger(\"toSortable\",e),s.dropped=o.element,t.each(s.sortables,function(){this.refreshPositions()}),s.currentItem=s.element,o.fromOutside=s),o.currentItem&&(o._mouseDrag(e),i.position=o.position)):o.isOver&&(o.isOver=0,o.cancelHelperRemoval=!0,o.options._revert=o.options.revert,o.options.revert=!1,o._trigger(\"out\",e,o._uiHash(o)),o._mouseStop(e,!0),o.options.revert=o.options._revert,o.options.helper=o.options._helper,o.placeholder&&o.placeholder.remove(),i.helper.appendTo(s._parent),s._refreshOffsets(e),i.position=s._generatePosition(e,!0),s._trigger(\"fromSortable\",e),s.dropped=!1,t.each(s.sortables,function(){this.refreshPositions()}))})}}),t.ui.plugin.add(\"draggable\",\"cursor\",{start:function(e,i,s){var n=t(\"body\"),o=s.options;n.css(\"cursor\")&&(o._cursor=n.css(\"cursor\")),n.css(\"cursor\",o.cursor)},stop:function(e,i,s){var n=s.options;n._cursor&&t(\"body\").css(\"cursor\",n._cursor)\n}}),t.ui.plugin.add(\"draggable\",\"opacity\",{start:function(e,i,s){var n=t(i.helper),o=s.options;n.css(\"opacity\")&&(o._opacity=n.css(\"opacity\")),n.css(\"opacity\",o.opacity)},stop:function(e,i,s){var n=s.options;n._opacity&&t(i.helper).css(\"opacity\",n._opacity)}}),t.ui.plugin.add(\"draggable\",\"scroll\",{start:function(t,e,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&\"HTML\"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(e,i,s){var n=s.options,o=!1,a=s.scrollParentNotHidden[0],r=s.document[0];a!==r&&\"HTML\"!==a.tagName?(n.axis&&\"x\"===n.axis||(s.overflowOffset.top+a.offsetHeight-e.pageY<n.scrollSensitivity?a.scrollTop=o=a.scrollTop+n.scrollSpeed:e.pageY-s.overflowOffset.top<n.scrollSensitivity&&(a.scrollTop=o=a.scrollTop-n.scrollSpeed)),n.axis&&\"y\"===n.axis||(s.overflowOffset.left+a.offsetWidth-e.pageX<n.scrollSensitivity?a.scrollLeft=o=a.scrollLeft+n.scrollSpeed:e.pageX-s.overflowOffset.left<n.scrollSensitivity&&(a.scrollLeft=o=a.scrollLeft-n.scrollSpeed))):(n.axis&&\"x\"===n.axis||(e.pageY-t(r).scrollTop()<n.scrollSensitivity?o=t(r).scrollTop(t(r).scrollTop()-n.scrollSpeed):t(window).height()-(e.pageY-t(r).scrollTop())<n.scrollSensitivity&&(o=t(r).scrollTop(t(r).scrollTop()+n.scrollSpeed))),n.axis&&\"y\"===n.axis||(e.pageX-t(r).scrollLeft()<n.scrollSensitivity?o=t(r).scrollLeft(t(r).scrollLeft()-n.scrollSpeed):t(window).width()-(e.pageX-t(r).scrollLeft())<n.scrollSensitivity&&(o=t(r).scrollLeft(t(r).scrollLeft()+n.scrollSpeed)))),o!==!1&&t.ui.ddmanager&&!n.dropBehaviour&&t.ui.ddmanager.prepareOffsets(s,e)}}),t.ui.plugin.add(\"draggable\",\"snap\",{start:function(e,i,s){var n=s.options;s.snapElements=[],t(n.snap.constructor!==String?n.snap.items||\":data(ui-draggable)\":n.snap).each(function(){var e=t(this),i=e.offset();this!==s.element[0]&&s.snapElements.push({item:this,width:e.outerWidth(),height:e.outerHeight(),top:i.top,left:i.left})})},drag:function(e,i,s){var n,o,a,r,l,h,c,u,d,p,f=s.options,g=f.snapTolerance,m=i.offset.left,_=m+s.helperProportions.width,v=i.offset.top,b=v+s.helperProportions.height;for(d=s.snapElements.length-1;d>=0;d--)l=s.snapElements[d].left-s.margins.left,h=l+s.snapElements[d].width,c=s.snapElements[d].top-s.margins.top,u=c+s.snapElements[d].height,l-g>_||m>h+g||c-g>b||v>u+g||!t.contains(s.snapElements[d].item.ownerDocument,s.snapElements[d].item)?(s.snapElements[d].snapping&&s.options.snap.release&&s.options.snap.release.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[d].item})),s.snapElements[d].snapping=!1):(\"inner\"!==f.snapMode&&(n=g>=Math.abs(c-b),o=g>=Math.abs(u-v),a=g>=Math.abs(l-_),r=g>=Math.abs(h-m),n&&(i.position.top=s._convertPositionTo(\"relative\",{top:c-s.helperProportions.height,left:0}).top),o&&(i.position.top=s._convertPositionTo(\"relative\",{top:u,left:0}).top),a&&(i.position.left=s._convertPositionTo(\"relative\",{top:0,left:l-s.helperProportions.width}).left),r&&(i.position.left=s._convertPositionTo(\"relative\",{top:0,left:h}).left)),p=n||o||a||r,\"outer\"!==f.snapMode&&(n=g>=Math.abs(c-v),o=g>=Math.abs(u-b),a=g>=Math.abs(l-m),r=g>=Math.abs(h-_),n&&(i.position.top=s._convertPositionTo(\"relative\",{top:c,left:0}).top),o&&(i.position.top=s._convertPositionTo(\"relative\",{top:u-s.helperProportions.height,left:0}).top),a&&(i.position.left=s._convertPositionTo(\"relative\",{top:0,left:l}).left),r&&(i.position.left=s._convertPositionTo(\"relative\",{top:0,left:h-s.helperProportions.width}).left)),!s.snapElements[d].snapping&&(n||o||a||r||p)&&s.options.snap.snap&&s.options.snap.snap.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[d].item})),s.snapElements[d].snapping=n||o||a||r||p)}}),t.ui.plugin.add(\"draggable\",\"stack\",{start:function(e,i,s){var n,o=s.options,a=t.makeArray(t(o.stack)).sort(function(e,i){return(parseInt(t(e).css(\"zIndex\"),10)||0)-(parseInt(t(i).css(\"zIndex\"),10)||0)});a.length&&(n=parseInt(t(a[0]).css(\"zIndex\"),10)||0,t(a).each(function(e){t(this).css(\"zIndex\",n+e)}),this.css(\"zIndex\",n+a.length))}}),t.ui.plugin.add(\"draggable\",\"zIndex\",{start:function(e,i,s){var n=t(i.helper),o=s.options;n.css(\"zIndex\")&&(o._zIndex=n.css(\"zIndex\")),n.css(\"zIndex\",o.zIndex)},stop:function(e,i,s){var n=s.options;n._zIndex&&t(i.helper).css(\"zIndex\",n._zIndex)}}),t.ui.draggable,t.widget(\"ui.resizable\",t.ui.mouse,{version:\"1.12.1\",widgetEventPrefix:\"resize\",options:{alsoResize:!1,animate:!1,animateDuration:\"slow\",animateEasing:\"swing\",aspectRatio:!1,autoHide:!1,classes:{\"ui-resizable-se\":\"ui-icon ui-icon-gripsmall-diagonal-se\"},containment:!1,ghost:!1,grid:!1,handles:\"e,s,se\",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function(t){return parseFloat(t)||0},_isNumber:function(t){return!isNaN(parseFloat(t))},_hasScroll:function(e,i){if(\"hidden\"===t(e).css(\"overflow\"))return!1;var s=i&&\"left\"===i?\"scrollLeft\":\"scrollTop\",n=!1;return e[s]>0?!0:(e[s]=1,n=e[s]>0,e[s]=0,n)},_create:function(){var e,i=this.options,s=this;this._addClass(\"ui-resizable\"),t.extend(this,{_aspectRatio:!!i.aspectRatio,aspectRatio:i.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:i.helper||i.ghost||i.animate?i.helper||\"ui-resizable-helper\":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(t(\"<div class='ui-wrapper' style='overflow: hidden;'></div>\").css({position:this.element.css(\"position\"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css(\"top\"),left:this.element.css(\"left\")})),this.element=this.element.parent().data(\"ui-resizable\",this.element.resizable(\"instance\")),this.elementIsWrapper=!0,e={marginTop:this.originalElement.css(\"marginTop\"),marginRight:this.originalElement.css(\"marginRight\"),marginBottom:this.originalElement.css(\"marginBottom\"),marginLeft:this.originalElement.css(\"marginLeft\")},this.element.css(e),this.originalElement.css(\"margin\",0),this.originalResizeStyle=this.originalElement.css(\"resize\"),this.originalElement.css(\"resize\",\"none\"),this._proportionallyResizeElements.push(this.originalElement.css({position:\"static\",zoom:1,display:\"block\"})),this.originalElement.css(e),this._proportionallyResize()),this._setupHandles(),i.autoHide&&t(this.element).on(\"mouseenter\",function(){i.disabled||(s._removeClass(\"ui-resizable-autohide\"),s._handles.show())}).on(\"mouseleave\",function(){i.disabled||s.resizing||(s._addClass(\"ui-resizable-autohide\"),s._handles.hide())}),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e,i=function(e){t(e).removeData(\"resizable\").removeData(\"ui-resizable\").off(\".resizable\").find(\".ui-resizable-handle\").remove()};return this.elementIsWrapper&&(i(this.element),e=this.element,this.originalElement.css({position:e.css(\"position\"),width:e.outerWidth(),height:e.outerHeight(),top:e.css(\"top\"),left:e.css(\"left\")}).insertAfter(e),e.remove()),this.originalElement.css(\"resize\",this.originalResizeStyle),i(this.originalElement),this},_setOption:function(t,e){switch(this._super(t,e),t){case\"handles\":this._removeHandles(),this._setupHandles();break;default:}},_setupHandles:function(){var e,i,s,n,o,a=this.options,r=this;if(this.handles=a.handles||(t(\".ui-resizable-handle\",this.element).length?{n:\".ui-resizable-n\",e:\".ui-resizable-e\",s:\".ui-resizable-s\",w:\".ui-resizable-w\",se:\".ui-resizable-se\",sw:\".ui-resizable-sw\",ne:\".ui-resizable-ne\",nw:\".ui-resizable-nw\"}:\"e,s,se\"),this._handles=t(),this.handles.constructor===String)for(\"all\"===this.handles&&(this.handles=\"n,e,s,w,se,sw,ne,nw\"),s=this.handles.split(\",\"),this.handles={},i=0;s.length>i;i++)e=t.trim(s[i]),n=\"ui-resizable-\"+e,o=t(\"<div>\"),this._addClass(o,\"ui-resizable-handle \"+n),o.css({zIndex:a.zIndex}),this.handles[e]=\".ui-resizable-\"+e,this.element.append(o);this._renderAxis=function(e){var i,s,n,o;e=e||this.element;for(i in this.handles)this.handles[i].constructor===String?this.handles[i]=this.element.children(this.handles[i]).first().show():(this.handles[i].jquery||this.handles[i].nodeType)&&(this.handles[i]=t(this.handles[i]),this._on(this.handles[i],{mousedown:r._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(s=t(this.handles[i],this.element),o=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth(),n=[\"padding\",/ne|nw|n/.test(i)?\"Top\":/se|sw|s/.test(i)?\"Bottom\":/^e$/.test(i)?\"Right\":\"Left\"].join(\"\"),e.css(n,o),this._proportionallyResize()),this._handles=this._handles.add(this.handles[i])},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(\".ui-resizable-handle\")),this._handles.disableSelection(),this._handles.on(\"mouseover\",function(){r.resizing||(this.className&&(o=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),r.axis=o&&o[1]?o[1]:\"se\")}),a.autoHide&&(this._handles.hide(),this._addClass(\"ui-resizable-autohide\"))},_removeHandles:function(){this._handles.remove()},_mouseCapture:function(e){var i,s,n=!1;for(i in this.handles)s=t(this.handles[i])[0],(s===e.target||t.contains(s,e.target))&&(n=!0);return!this.options.disabled&&n},_mouseStart:function(e){var i,s,n,o=this.options,a=this.element;return this.resizing=!0,this._renderProxy(),i=this._num(this.helper.css(\"left\")),s=this._num(this.helper.css(\"top\")),o.containment&&(i+=t(o.containment).scrollLeft()||0,s+=t(o.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:i,top:s},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:a.width(),height:a.height()},this.originalSize=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.sizeDiff={width:a.outerWidth()-a.width(),height:a.outerHeight()-a.height()},this.originalPosition={left:i,top:s},this.originalMousePosition={left:e.pageX,top:e.pageY},this.aspectRatio=\"number\"==typeof o.aspectRatio?o.aspectRatio:this.originalSize.width/this.originalSize.height||1,n=t(\".ui-resizable-\"+this.axis).css(\"cursor\"),t(\"body\").css(\"cursor\",\"auto\"===n?this.axis+\"-resize\":n),this._addClass(\"ui-resizable-resizing\"),this._propagate(\"start\",e),!0},_mouseDrag:function(e){var i,s,n=this.originalMousePosition,o=this.axis,a=e.pageX-n.left||0,r=e.pageY-n.top||0,l=this._change[o];return this._updatePrevProperties(),l?(i=l.apply(this,[e,a,r]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate(\"resize\",e),s=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),t.isEmptyObject(s)||(this._updatePrevProperties(),this._trigger(\"resize\",e,this.ui()),this._applyChanges()),!1):!1},_mouseStop:function(e){this.resizing=!1;var i,s,n,o,a,r,l,h=this.options,c=this;return this._helper&&(i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),n=s&&this._hasScroll(i[0],\"left\")?0:c.sizeDiff.height,o=s?0:c.sizeDiff.width,a={width:c.helper.width()-o,height:c.helper.height()-n},r=parseFloat(c.element.css(\"left\"))+(c.position.left-c.originalPosition.left)||null,l=parseFloat(c.element.css(\"top\"))+(c.position.top-c.originalPosition.top)||null,h.animate||this.element.css(t.extend(a,{top:l,left:r})),c.helper.height(c.size.height),c.helper.width(c.size.width),this._helper&&!h.animate&&this._proportionallyResize()),t(\"body\").css(\"cursor\",\"auto\"),this._removeClass(\"ui-resizable-resizing\"),this._propagate(\"stop\",e),this._helper&&this.helper.remove(),!1},_updatePrevProperties:function(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height}},_applyChanges:function(){var t={};return this.position.top!==this.prevPosition.top&&(t.top=this.position.top+\"px\"),this.position.left!==this.prevPosition.left&&(t.left=this.position.left+\"px\"),this.size.width!==this.prevSize.width&&(t.width=this.size.width+\"px\"),this.size.height!==this.prevSize.height&&(t.height=this.size.height+\"px\"),this.helper.css(t),t},_updateVirtualBoundaries:function(t){var e,i,s,n,o,a=this.options;o={minWidth:this._isNumber(a.minWidth)?a.minWidth:0,maxWidth:this._isNumber(a.maxWidth)?a.maxWidth:1/0,minHeight:this._isNumber(a.minHeight)?a.minHeight:0,maxHeight:this._isNumber(a.maxHeight)?a.maxHeight:1/0},(this._aspectRatio||t)&&(e=o.minHeight*this.aspectRatio,s=o.minWidth/this.aspectRatio,i=o.maxHeight*this.aspectRatio,n=o.maxWidth/this.aspectRatio,e>o.minWidth&&(o.minWidth=e),s>o.minHeight&&(o.minHeight=s),o.maxWidth>i&&(o.maxWidth=i),o.maxHeight>n&&(o.maxHeight=n)),this._vBoundaries=o},_updateCache:function(t){this.offset=this.helper.offset(),this._isNumber(t.left)&&(this.position.left=t.left),this._isNumber(t.top)&&(this.position.top=t.top),this._isNumber(t.height)&&(this.size.height=t.height),this._isNumber(t.width)&&(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,i=this.size,s=this.axis;return this._isNumber(t.height)?t.width=t.height*this.aspectRatio:this._isNumber(t.width)&&(t.height=t.width/this.aspectRatio),\"sw\"===s&&(t.left=e.left+(i.width-t.width),t.top=null),\"nw\"===s&&(t.top=e.top+(i.height-t.height),t.left=e.left+(i.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,i=this.axis,s=this._isNumber(t.width)&&e.maxWidth&&e.maxWidth<t.width,n=this._isNumber(t.height)&&e.maxHeight&&e.maxHeight<t.height,o=this._isNumber(t.width)&&e.minWidth&&e.minWidth>t.width,a=this._isNumber(t.height)&&e.minHeight&&e.minHeight>t.height,r=this.originalPosition.left+this.originalSize.width,l=this.originalPosition.top+this.originalSize.height,h=/sw|nw|w/.test(i),c=/nw|ne|n/.test(i);return o&&(t.width=e.minWidth),a&&(t.height=e.minHeight),s&&(t.width=e.maxWidth),n&&(t.height=e.maxHeight),o&&h&&(t.left=r-e.minWidth),s&&h&&(t.left=r-e.maxWidth),a&&c&&(t.top=l-e.minHeight),n&&c&&(t.top=l-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_getPaddingPlusBorderDimensions:function(t){for(var e=0,i=[],s=[t.css(\"borderTopWidth\"),t.css(\"borderRightWidth\"),t.css(\"borderBottomWidth\"),t.css(\"borderLeftWidth\")],n=[t.css(\"paddingTop\"),t.css(\"paddingRight\"),t.css(\"paddingBottom\"),t.css(\"paddingLeft\")];4>e;e++)i[e]=parseFloat(s[e])||0,i[e]+=parseFloat(n[e])||0;return{height:i[0]+i[2],width:i[1]+i[3]}},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var t,e=0,i=this.helper||this.element;this._proportionallyResizeElements.length>e;e++)t=this._proportionallyResizeElements[e],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(t)),t.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0})},_renderProxy:function(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t(\"<div style='overflow:hidden;'></div>\"),this._addClass(this.helper,this._helper),this.helper.css({width:this.element.outerWidth(),height:this.element.outerHeight(),position:\"absolute\",left:this.elementOffset.left+\"px\",top:this.elementOffset.top+\"px\",zIndex:++i.zIndex}),this.helper.appendTo(\"body\").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize,s=this.originalPosition;return{left:s.left+e,width:i.width-e}},n:function(t,e,i){var s=this.originalSize,n=this.originalPosition;return{top:n.top+i,height:s.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},sw:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,s]))},ne:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},nw:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,s]))}},_propagate:function(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),\"resize\"!==e&&this._trigger(e,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),t.ui.plugin.add(\"resizable\",\"animate\",{stop:function(e){var i=t(this).resizable(\"instance\"),s=i.options,n=i._proportionallyResizeElements,o=n.length&&/textarea/i.test(n[0].nodeName),a=o&&i._hasScroll(n[0],\"left\")?0:i.sizeDiff.height,r=o?0:i.sizeDiff.width,l={width:i.size.width-r,height:i.size.height-a},h=parseFloat(i.element.css(\"left\"))+(i.position.left-i.originalPosition.left)||null,c=parseFloat(i.element.css(\"top\"))+(i.position.top-i.originalPosition.top)||null;i.element.animate(t.extend(l,c&&h?{top:c,left:h}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function(){var s={width:parseFloat(i.element.css(\"width\")),height:parseFloat(i.element.css(\"height\")),top:parseFloat(i.element.css(\"top\")),left:parseFloat(i.element.css(\"left\"))};n&&n.length&&t(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate(\"resize\",e)}})}}),t.ui.plugin.add(\"resizable\",\"containment\",{start:function(){var e,i,s,n,o,a,r,l=t(this).resizable(\"instance\"),h=l.options,c=l.element,u=h.containment,d=u instanceof t?u.get(0):/parent/.test(u)?c.parent().get(0):u;d&&(l.containerElement=t(d),/document/.test(u)||u===document?(l.containerOffset={left:0,top:0},l.containerPosition={left:0,top:0},l.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(e=t(d),i=[],t([\"Top\",\"Right\",\"Left\",\"Bottom\"]).each(function(t,s){i[t]=l._num(e.css(\"padding\"+s))}),l.containerOffset=e.offset(),l.containerPosition=e.position(),l.containerSize={height:e.innerHeight()-i[3],width:e.innerWidth()-i[1]},s=l.containerOffset,n=l.containerSize.height,o=l.containerSize.width,a=l._hasScroll(d,\"left\")?d.scrollWidth:o,r=l._hasScroll(d)?d.scrollHeight:n,l.parentData={element:d,left:s.left,top:s.top,width:a,height:r}))},resize:function(e){var i,s,n,o,a=t(this).resizable(\"instance\"),r=a.options,l=a.containerOffset,h=a.position,c=a._aspectRatio||e.shiftKey,u={top:0,left:0},d=a.containerElement,p=!0;d[0]!==document&&/static/.test(d.css(\"position\"))&&(u=l),h.left<(a._helper?l.left:0)&&(a.size.width=a.size.width+(a._helper?a.position.left-l.left:a.position.left-u.left),c&&(a.size.height=a.size.width/a.aspectRatio,p=!1),a.position.left=r.helper?l.left:0),h.top<(a._helper?l.top:0)&&(a.size.height=a.size.height+(a._helper?a.position.top-l.top:a.position.top),c&&(a.size.width=a.size.height*a.aspectRatio,p=!1),a.position.top=a._helper?l.top:0),n=a.containerElement.get(0)===a.element.parent().get(0),o=/relative|absolute/.test(a.containerElement.css(\"position\")),n&&o?(a.offset.left=a.parentData.left+a.position.left,a.offset.top=a.parentData.top+a.position.top):(a.offset.left=a.element.offset().left,a.offset.top=a.element.offset().top),i=Math.abs(a.sizeDiff.width+(a._helper?a.offset.left-u.left:a.offset.left-l.left)),s=Math.abs(a.sizeDiff.height+(a._helper?a.offset.top-u.top:a.offset.top-l.top)),i+a.size.width>=a.parentData.width&&(a.size.width=a.parentData.width-i,c&&(a.size.height=a.size.width/a.aspectRatio,p=!1)),s+a.size.height>=a.parentData.height&&(a.size.height=a.parentData.height-s,c&&(a.size.width=a.size.height*a.aspectRatio,p=!1)),p||(a.position.left=a.prevPosition.left,a.position.top=a.prevPosition.top,a.size.width=a.prevSize.width,a.size.height=a.prevSize.height)},stop:function(){var e=t(this).resizable(\"instance\"),i=e.options,s=e.containerOffset,n=e.containerPosition,o=e.containerElement,a=t(e.helper),r=a.offset(),l=a.outerWidth()-e.sizeDiff.width,h=a.outerHeight()-e.sizeDiff.height;e._helper&&!i.animate&&/relative/.test(o.css(\"position\"))&&t(this).css({left:r.left-n.left-s.left,width:l,height:h}),e._helper&&!i.animate&&/static/.test(o.css(\"position\"))&&t(this).css({left:r.left-n.left-s.left,width:l,height:h})}}),t.ui.plugin.add(\"resizable\",\"alsoResize\",{start:function(){var e=t(this).resizable(\"instance\"),i=e.options;t(i.alsoResize).each(function(){var e=t(this);e.data(\"ui-resizable-alsoresize\",{width:parseFloat(e.width()),height:parseFloat(e.height()),left:parseFloat(e.css(\"left\")),top:parseFloat(e.css(\"top\"))})})},resize:function(e,i){var s=t(this).resizable(\"instance\"),n=s.options,o=s.originalSize,a=s.originalPosition,r={height:s.size.height-o.height||0,width:s.size.width-o.width||0,top:s.position.top-a.top||0,left:s.position.left-a.left||0};t(n.alsoResize).each(function(){var e=t(this),s=t(this).data(\"ui-resizable-alsoresize\"),n={},o=e.parents(i.originalElement[0]).length?[\"width\",\"height\"]:[\"width\",\"height\",\"top\",\"left\"];t.each(o,function(t,e){var i=(s[e]||0)+(r[e]||0);i&&i>=0&&(n[e]=i||null)}),e.css(n)})},stop:function(){t(this).removeData(\"ui-resizable-alsoresize\")}}),t.ui.plugin.add(\"resizable\",\"ghost\",{start:function(){var e=t(this).resizable(\"instance\"),i=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:\"block\",position:\"relative\",height:i.height,width:i.width,margin:0,left:0,top:0}),e._addClass(e.ghost,\"ui-resizable-ghost\"),t.uiBackCompat!==!1&&\"string\"==typeof e.options.ghost&&e.ghost.addClass(this.options.ghost),e.ghost.appendTo(e.helper)},resize:function(){var e=t(this).resizable(\"instance\");e.ghost&&e.ghost.css({position:\"relative\",height:e.size.height,width:e.size.width})},stop:function(){var e=t(this).resizable(\"instance\");e.ghost&&e.helper&&e.helper.get(0).removeChild(e.ghost.get(0))}}),t.ui.plugin.add(\"resizable\",\"grid\",{resize:function(){var e,i=t(this).resizable(\"instance\"),s=i.options,n=i.size,o=i.originalSize,a=i.originalPosition,r=i.axis,l=\"number\"==typeof s.grid?[s.grid,s.grid]:s.grid,h=l[0]||1,c=l[1]||1,u=Math.round((n.width-o.width)/h)*h,d=Math.round((n.height-o.height)/c)*c,p=o.width+u,f=o.height+d,g=s.maxWidth&&p>s.maxWidth,m=s.maxHeight&&f>s.maxHeight,_=s.minWidth&&s.minWidth>p,v=s.minHeight&&s.minHeight>f;s.grid=l,_&&(p+=h),v&&(f+=c),g&&(p-=h),m&&(f-=c),/^(se|s|e)$/.test(r)?(i.size.width=p,i.size.height=f):/^(ne)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.top=a.top-d):/^(sw)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.left=a.left-u):((0>=f-c||0>=p-h)&&(e=i._getPaddingPlusBorderDimensions(this)),f-c>0?(i.size.height=f,i.position.top=a.top-d):(f=c-e.height,i.size.height=f,i.position.top=a.top+o.height-f),p-h>0?(i.size.width=p,i.position.left=a.left-u):(p=h-e.width,i.size.width=p,i.position.left=a.left+o.width-p))}}),t.ui.resizable,t.widget(\"ui.sortable\",t.ui.mouse,{version:\"1.12.1\",widgetEventPrefix:\"sort\",ready:!1,options:{appendTo:\"parent\",axis:!1,connectWith:!1,containment:!1,cursor:\"auto\",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:\"original\",items:\"> *\",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:\"default\",tolerance:\"intersect\",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(t,e,i){return t>=e&&e+i>t},_isFloating:function(t){return/left|right/.test(t.css(\"float\"))||/inline|table-cell/.test(t.css(\"display\"))},_create:function(){this.containerCache={},this._addClass(\"ui-sortable\"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(t,e){this._super(t,e),\"handle\"===t&&this._setHandleClassName()},_setHandleClassName:function(){var e=this;this._removeClass(this.element.find(\".ui-sortable-handle\"),\"ui-sortable-handle\"),t.each(this.items,function(){e._addClass(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item,\"ui-sortable-handle\")})},_destroy:function(){this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--)this.items[t].item.removeData(this.widgetName+\"-item\");return this},_mouseCapture:function(e,i){var s=null,n=!1,o=this;return this.reverting?!1:this.options.disabled||\"static\"===this.options.type?!1:(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,o.widgetName+\"-item\")===o?(s=t(this),!1):void 0}),t.data(e.target,o.widgetName+\"-item\")===o&&(s=t(e.target)),s?!this.options.handle||i||(t(this.options.handle,s).find(\"*\").addBack().each(function(){this===e.target&&(n=!0)}),n)?(this.currentItem=s,this._removeCurrentsFromItems(),!0):!1:!1)},_mouseStart:function(e,i,s){var n,o,a=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css(\"position\",\"absolute\"),this.cssPosition=this.helper.css(\"position\"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,a.cursorAt&&this._adjustOffsetFromHelper(a.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),a.containment&&this._setContainment(),a.cursor&&\"auto\"!==a.cursor&&(o=this.document.find(\"body\"),this.storedCursor=o.css(\"cursor\"),o.css(\"cursor\",a.cursor),this.storedStylesheet=t(\"<style>*{ cursor: \"+a.cursor+\" !important; }</style>\").appendTo(o)),a.opacity&&(this.helper.css(\"opacity\")&&(this._storedOpacity=this.helper.css(\"opacity\")),this.helper.css(\"opacity\",a.opacity)),a.zIndex&&(this.helper.css(\"zIndex\")&&(this._storedZIndex=this.helper.css(\"zIndex\")),this.helper.css(\"zIndex\",a.zIndex)),this.scrollParent[0]!==this.document[0]&&\"HTML\"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger(\"start\",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!s)for(n=this.containers.length-1;n>=0;n--)this.containers[n]._trigger(\"activate\",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this._addClass(this.helper,\"ui-sortable-helper\"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,s,n,o,a=this.options,r=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo(\"absolute\"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&\"HTML\"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<a.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+a.scrollSpeed:e.pageY-this.overflowOffset.top<a.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-a.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<a.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+a.scrollSpeed:e.pageX-this.overflowOffset.left<a.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-a.scrollSpeed)):(e.pageY-this.document.scrollTop()<a.scrollSensitivity?r=this.document.scrollTop(this.document.scrollTop()-a.scrollSpeed):this.window.height()-(e.pageY-this.document.scrollTop())<a.scrollSensitivity&&(r=this.document.scrollTop(this.document.scrollTop()+a.scrollSpeed)),e.pageX-this.document.scrollLeft()<a.scrollSensitivity?r=this.document.scrollLeft(this.document.scrollLeft()-a.scrollSpeed):this.window.width()-(e.pageX-this.document.scrollLeft())<a.scrollSensitivity&&(r=this.document.scrollLeft(this.document.scrollLeft()+a.scrollSpeed))),r!==!1&&t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo(\"absolute\"),this.options.axis&&\"y\"===this.options.axis||(this.helper[0].style.left=this.position.left+\"px\"),this.options.axis&&\"x\"===this.options.axis||(this.helper[0].style.top=this.position.top+\"px\"),i=this.items.length-1;i>=0;i--)if(s=this.items[i],n=s.item[0],o=this._intersectsWithPointer(s),o&&s.instance===this.currentContainer&&n!==this.currentItem[0]&&this.placeholder[1===o?\"next\":\"prev\"]()[0]!==n&&!t.contains(this.placeholder[0],n)&&(\"semi-dynamic\"===this.options.type?!t.contains(this.element[0],n):!0)){if(this.direction=1===o?\"down\":\"up\",\"pointer\"!==this.options.tolerance&&!this._intersectsWithSides(s))break;this._rearrange(e,s),this._trigger(\"change\",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger(\"sort\",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var s=this,n=this.placeholder.offset(),o=this.options.axis,a={};o&&\"x\"!==o||(a.left=n.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),o&&\"y\"!==o||(a.top=n.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(a,parseInt(this.options.revert,10)||500,function(){s._clear(e)})}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp(new t.Event(\"mouseup\",{target:null})),\"original\"===this.options.helper?(this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,\"ui-sortable-helper\")):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--)this.containers[e]._trigger(\"deactivate\",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger(\"out\",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),\"original\"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||\"id\")||\"\").match(e.expression||/(.+)[\\-=_](.+)/);i&&s.push((e.key||i[1]+\"[]\")+\"=\"+(e.key&&e.expression?i[1]:i[2]))}),!s.length&&e.key&&s.push(e.key+\"=\"),s.join(\"&\")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},i.each(function(){s.push(t(e.item||this).attr(e.attribute||\"id\")||\"\")}),s},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,s=this.positionAbs.top,n=s+this.helperProportions.height,o=t.left,a=o+t.width,r=t.top,l=r+t.height,h=this.offset.click.top,c=this.offset.click.left,u=\"x\"===this.options.axis||s+h>r&&l>s+h,d=\"y\"===this.options.axis||e+c>o&&a>e+c,p=u&&d;return\"pointer\"===this.options.tolerance||this.options.forcePointerForContainers||\"pointer\"!==this.options.tolerance&&this.helperProportions[this.floating?\"width\":\"height\"]>t[this.floating?\"width\":\"height\"]?p:e+this.helperProportions.width/2>o&&a>i-this.helperProportions.width/2&&s+this.helperProportions.height/2>r&&l>n-this.helperProportions.height/2},_intersectsWithPointer:function(t){var e,i,s=\"x\"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),n=\"y\"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),o=s&&n;return o?(e=this._getDragVerticalDirection(),i=this._getDragHorizontalDirection(),this.floating?\"right\"===i||\"down\"===e?2:1:e&&(\"down\"===e?2:1)):!1},_intersectsWithSides:function(t){var e=this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),s=this._getDragVerticalDirection(),n=this._getDragHorizontalDirection();\nreturn this.floating&&n?\"right\"===n&&i||\"left\"===n&&!i:s&&(\"down\"===s&&e||\"up\"===s&&!e)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?\"down\":\"up\")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?\"right\":\"left\")},refresh:function(t){return this._refreshItems(t),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){function i(){r.push(this)}var s,n,o,a,r=[],l=[],h=this._connectWith();if(h&&e)for(s=h.length-1;s>=0;s--)for(o=t(h[s],this.document[0]),n=o.length-1;n>=0;n--)a=t.data(o[n],this.widgetFullName),a&&a!==this&&!a.options.disabled&&l.push([t.isFunction(a.options.items)?a.options.items.call(a.element):t(a.options.items,a.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),a]);for(l.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),this]),s=l.length-1;s>=0;s--)l[s][0].each(i);return t(r)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(\":data(\"+this.widgetName+\"-item)\");this.items=t.grep(this.items,function(t){for(var i=0;e.length>i;i++)if(e[i]===t.item[0])return!1;return!0})},_refreshItems:function(e){this.items=[],this.containers=[this];var i,s,n,o,a,r,l,h,c=this.items,u=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(n=t(d[i],this.document[0]),s=n.length-1;s>=0;s--)o=t.data(n[s],this.widgetFullName),o&&o!==this&&!o.options.disabled&&(u.push([t.isFunction(o.options.items)?o.options.items.call(o.element[0],e,{item:this.currentItem}):t(o.options.items,o.element),o]),this.containers.push(o));for(i=u.length-1;i>=0;i--)for(a=u[i][1],r=u[i][0],s=0,h=r.length;h>s;s++)l=t(r[s]),l.data(this.widgetName+\"-item\",a),c.push({item:l,instance:a,width:0,height:0,left:0,top:0})},refreshPositions:function(e){this.floating=this.items.length?\"x\"===this.options.axis||this._isFloating(this.items[0].item):!1,this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,s,n,o;for(i=this.items.length-1;i>=0;i--)s=this.items[i],s.instance!==this.currentContainer&&this.currentContainer&&s.item[0]!==this.currentItem[0]||(n=this.options.toleranceElement?t(this.options.toleranceElement,s.item):s.item,e||(s.width=n.outerWidth(),s.height=n.outerHeight()),o=n.offset(),s.left=o.left,s.top=o.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)o=this.containers[i].element.offset(),this.containers[i].containerCache.left=o.left,this.containers[i].containerCache.top=o.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){e=e||this;var i,s=e.options;s.placeholder&&s.placeholder.constructor!==String||(i=s.placeholder,s.placeholder={element:function(){var s=e.currentItem[0].nodeName.toLowerCase(),n=t(\"<\"+s+\">\",e.document[0]);return e._addClass(n,\"ui-sortable-placeholder\",i||e.currentItem[0].className)._removeClass(n,\"ui-sortable-helper\"),\"tbody\"===s?e._createTrPlaceholder(e.currentItem.find(\"tr\").eq(0),t(\"<tr>\",e.document[0]).appendTo(n)):\"tr\"===s?e._createTrPlaceholder(e.currentItem,n):\"img\"===s&&n.attr(\"src\",e.currentItem.attr(\"src\")),i||n.css(\"visibility\",\"hidden\"),n},update:function(t,n){(!i||s.forcePlaceholderSize)&&(n.height()||n.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css(\"paddingTop\")||0,10)-parseInt(e.currentItem.css(\"paddingBottom\")||0,10)),n.width()||n.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css(\"paddingLeft\")||0,10)-parseInt(e.currentItem.css(\"paddingRight\")||0,10)))}}),e.placeholder=t(s.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),s.placeholder.update(e,e.placeholder)},_createTrPlaceholder:function(e,i){var s=this;e.children().each(function(){t(\"<td>&#160;</td>\",s.document[0]).attr(\"colspan\",t(this).attr(\"colspan\")||1).appendTo(i)})},_contactContainers:function(e){var i,s,n,o,a,r,l,h,c,u,d=null,p=null;for(i=this.containers.length-1;i>=0;i--)if(!t.contains(this.currentItem[0],this.containers[i].element[0]))if(this._intersectsWith(this.containers[i].containerCache)){if(d&&t.contains(this.containers[i].element[0],d.element[0]))continue;d=this.containers[i],p=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger(\"out\",e,this._uiHash(this)),this.containers[i].containerCache.over=0);if(d)if(1===this.containers.length)this.containers[p].containerCache.over||(this.containers[p]._trigger(\"over\",e,this._uiHash(this)),this.containers[p].containerCache.over=1);else{for(n=1e4,o=null,c=d.floating||this._isFloating(this.currentItem),a=c?\"left\":\"top\",r=c?\"width\":\"height\",u=c?\"pageX\":\"pageY\",s=this.items.length-1;s>=0;s--)t.contains(this.containers[p].element[0],this.items[s].item[0])&&this.items[s].item[0]!==this.currentItem[0]&&(l=this.items[s].item.offset()[a],h=!1,e[u]-l>this.items[s][r]/2&&(h=!0),n>Math.abs(e[u]-l)&&(n=Math.abs(e[u]-l),o=this.items[s],this.direction=h?\"up\":\"down\"));if(!o&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[p])return this.currentContainer.containerCache.over||(this.containers[p]._trigger(\"over\",e,this._uiHash()),this.currentContainer.containerCache.over=1),void 0;o?this._rearrange(e,o,null,!0):this._rearrange(e,null,this.containers[p].element,!0),this._trigger(\"change\",e,this._uiHash()),this.containers[p]._trigger(\"change\",e,this._uiHash(this)),this.currentContainer=this.containers[p],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[p]._trigger(\"over\",e,this._uiHash(this)),this.containers[p].containerCache.over=1}},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):\"clone\"===i.helper?this.currentItem.clone():this.currentItem;return s.parents(\"body\").length||t(\"parent\"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(s[0]),s[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css(\"position\"),top:this.currentItem.css(\"top\"),left:this.currentItem.css(\"left\")}),(!s[0].style.width||i.forceHelperSize)&&s.width(this.currentItem.width()),(!s[0].style.height||i.forceHelperSize)&&s.height(this.currentItem.height()),s},_adjustOffsetFromHelper:function(e){\"string\"==typeof e&&(e=e.split(\" \")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),\"left\"in e&&(this.offset.click.left=e.left+this.margins.left),\"right\"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),\"top\"in e&&(this.offset.click.top=e.top+this.margins.top),\"bottom\"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return\"absolute\"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&\"html\"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:e.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(\"relative\"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css(\"top\"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css(\"left\"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css(\"marginLeft\"),10)||0,top:parseInt(this.currentItem.css(\"marginTop\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options;\"parent\"===n.containment&&(n.containment=this.helper[0].parentNode),(\"document\"===n.containment||\"window\"===n.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,\"document\"===n.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,(\"document\"===n.containment?this.document.height()||document.body.parentNode.scrollHeight:this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(n.containment)||(e=t(n.containment)[0],i=t(n.containment).offset(),s=\"hidden\"!==t(e).css(\"overflow\"),this.containment=[i.left+(parseInt(t(e).css(\"borderLeftWidth\"),10)||0)+(parseInt(t(e).css(\"paddingLeft\"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css(\"borderTopWidth\"),10)||0)+(parseInt(t(e).css(\"paddingTop\"),10)||0)-this.margins.top,i.left+(s?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css(\"borderLeftWidth\"),10)||0)-(parseInt(t(e).css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(s?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css(\"borderTopWidth\"),10)||0)-(parseInt(t(e).css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var s=\"absolute\"===e?1:-1,n=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(n[0].tagName);return{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():o?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():o?0:n.scrollLeft())*s}},_generatePosition:function(e){var i,s,n=this.options,o=e.pageX,a=e.pageY,r=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=/(html|body)/i.test(r[0].tagName);return\"relative\"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(o=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(a=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(o=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(a=this.containment[3]+this.offset.click.top)),n.grid&&(i=this.originalPageY+Math.round((a-this.originalPageY)/n.grid[1])*n.grid[1],a=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-n.grid[1]:i+n.grid[1]:i,s=this.originalPageX+Math.round((o-this.originalPageX)/n.grid[0])*n.grid[0],o=this.containment?s-this.offset.click.left>=this.containment[0]&&s-this.offset.click.left<=this.containment[2]?s:s-this.offset.click.left>=this.containment[0]?s-n.grid[0]:s+n.grid[0]:s)),{top:a-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():l?0:r.scrollTop()),left:o-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():l?0:r.scrollLeft())}},_rearrange:function(t,e,i,s){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],\"down\"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var n=this.counter;this._delay(function(){n===this.counter&&this.refreshPositions(!s)})},_clear:function(t,e){function i(t,e,i){return function(s){i._trigger(t,s,e._uiHash(e))}}this.reverting=!1;var s,n=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(s in this._storedCSS)(\"auto\"===this._storedCSS[s]||\"static\"===this._storedCSS[s])&&(this._storedCSS[s]=\"\");this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,\"ui-sortable-helper\")}else this.currentItem.show();for(this.fromOutside&&!e&&n.push(function(t){this._trigger(\"receive\",t,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(\".ui-sortable-helper\")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||n.push(function(t){this._trigger(\"update\",t,this._uiHash())}),this!==this.currentContainer&&(e||(n.push(function(t){this._trigger(\"remove\",t,this._uiHash())}),n.push(function(t){return function(e){t._trigger(\"receive\",e,this._uiHash(this))}}.call(this,this.currentContainer)),n.push(function(t){return function(e){t._trigger(\"update\",e,this._uiHash(this))}}.call(this,this.currentContainer)))),s=this.containers.length-1;s>=0;s--)e||n.push(i(\"deactivate\",this,this.containers[s])),this.containers[s].containerCache.over&&(n.push(i(\"out\",this,this.containers[s])),this.containers[s].containerCache.over=0);if(this.storedCursor&&(this.document.find(\"body\").css(\"cursor\",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css(\"opacity\",this._storedOpacity),this._storedZIndex&&this.helper.css(\"zIndex\",\"auto\"===this._storedZIndex?\"\":this._storedZIndex),this.dragging=!1,e||this._trigger(\"beforeStop\",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!e){for(s=0;n.length>s;s++)n[s].call(this,t);this._trigger(\"stop\",t,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){t.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}})});","/*! jQuery v3.2.1 | (c) JS Foundation and other contributors | jquery.org/license */\n!function(a,b){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){\"use strict\";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement(\"script\");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q=\"3.2.1\",r=function(a,b){return new r.fn.init(a,b)},s=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null==a?f.call(this):a<0?this[a+this.length]:this[a]},pushStack:function(a){var b=r.merge(this.constructor(),a);return b.prevObject=this,b},each:function(a){return r.each(this,a)},map:function(a){return this.pushStack(r.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(f.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(a<0?b:0);return this.pushStack(c>=0&&c<b?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:h,sort:c.sort,splice:c.splice},r.extend=r.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||r.isFunction(g)||(g={}),h===i&&(g=this,h--);h<i;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(r.isPlainObject(d)||(e=Array.isArray(d)))?(e?(e=!1,f=c&&Array.isArray(c)?c:[]):f=c&&r.isPlainObject(c)?c:{},g[b]=r.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},r.extend({expando:\"jQuery\"+(q+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===r.type(a)},isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=r.type(a);return(\"number\"===b||\"string\"===b)&&!isNaN(a-parseFloat(a))},isPlainObject:function(a){var b,c;return!(!a||\"[object Object]\"!==k.call(a))&&(!(b=e(a))||(c=l.call(b,\"constructor\")&&b.constructor,\"function\"==typeof c&&m.call(c)===n))},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?j[k.call(a)]||\"object\":typeof a},globalEval:function(a){p(a)},camelCase:function(a){return a.replace(t,\"ms-\").replace(u,v)},each:function(a,b){var c,d=0;if(w(a)){for(c=a.length;d<c;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(s,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(w(Object(a))?r.merge(c,\"string\"==typeof a?[a]:a):h.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:i.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;d<c;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;f<g;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,f=0,h=[];if(w(a))for(d=a.length;f<d;f++)e=b(a[f],f,c),null!=e&&h.push(e);else for(f in a)e=b(a[f],f,c),null!=e&&h.push(e);return g.apply([],h)},guid:1,proxy:function(a,b){var c,d,e;if(\"string\"==typeof b&&(c=a[b],b=a,a=c),r.isFunction(a))return d=f.call(arguments,2),e=function(){return a.apply(b||this,d.concat(f.call(arguments)))},e.guid=a.guid=a.guid||r.guid++,e},now:Date.now,support:o}),\"function\"==typeof Symbol&&(r.fn[Symbol.iterator]=c[Symbol.iterator]),r.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(a,b){j[\"[object \"+b+\"]\"]=b.toLowerCase()});function w(a){var b=!!a&&\"length\"in a&&a.length,c=r.type(a);return\"function\"!==c&&!r.isWindow(a)&&(\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a)}var x=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},J=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",K=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",L=\"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",M=\"\\\\[\"+K+\"*(\"+L+\")(?:\"+K+\"*([*^$|!~]?=)\"+K+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+L+\"))|)\"+K+\"*\\\\]\",N=\":(\"+L+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+M+\")*)|.*)\\\\)|)\",O=new RegExp(K+\"+\",\"g\"),P=new RegExp(\"^\"+K+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+K+\"+$\",\"g\"),Q=new RegExp(\"^\"+K+\"*,\"+K+\"*\"),R=new RegExp(\"^\"+K+\"*([>+~]|\"+K+\")\"+K+\"*\"),S=new RegExp(\"=\"+K+\"*([^\\\\]'\\\"]*?)\"+K+\"*\\\\]\",\"g\"),T=new RegExp(N),U=new RegExp(\"^\"+L+\"$\"),V={ID:new RegExp(\"^#(\"+L+\")\"),CLASS:new RegExp(\"^\\\\.(\"+L+\")\"),TAG:new RegExp(\"^(\"+L+\"|[*])\"),ATTR:new RegExp(\"^\"+M),PSEUDO:new RegExp(\"^\"+N),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+K+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+K+\"*(?:([+-]|)\"+K+\"*(\\\\d+)|))\"+K+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+J+\")$\",\"i\"),needsContext:new RegExp(\"^\"+K+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+K+\"*((?:-\\\\d)?\\\\d*)\"+K+\"*\\\\)|)(?=[^-]|$)\",\"i\")},W=/^(?:input|select|textarea|button)$/i,X=/^h\\d$/i,Y=/^[^{]+\\{\\s*\\[native \\w/,Z=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,$=/[+~]/,_=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+K+\"?|(\"+K+\")|.)\",\"ig\"),aa=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:d<0?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ba=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,ca=function(a,b){return b?\"\\0\"===a?\"\\ufffd\":a.slice(0,-1)+\"\\\\\"+a.charCodeAt(a.length-1).toString(16)+\" \":\"\\\\\"+a},da=function(){m()},ea=ta(function(a){return a.disabled===!0&&(\"form\"in a||\"label\"in a)},{dir:\"parentNode\",next:\"legend\"});try{G.apply(D=H.call(v.childNodes),v.childNodes),D[v.childNodes.length].nodeType}catch(fa){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=Z.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return G.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(ba,ca):b.setAttribute(\"id\",k=u),o=g(a),h=o.length;while(h--)o[h]=\"#\"+k+\" \"+sa(o[h]);r=o.join(\",\"),s=$.test(a)&&qa(b.parentNode)||b}if(r)try{return G.apply(d,s.querySelectorAll(r)),d}catch(x){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(P,\"$1\"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement(\"fieldset\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function oa(a){return function(b){return\"form\"in b?b.parentNode&&b.disabled===!1?\"label\"in b?\"label\"in b.parentNode?b.parentNode.disabled===a:b.disabled===a:b.isDisabled===a||b.isDisabled!==!a&&ea(b)===a:b.disabled===a:\"label\"in b&&b.disabled===a}}function pa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function qa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&\"HTML\"!==b.nodeName},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener(\"unload\",da,!1):e.attachEvent&&e.attachEvent(\"onunload\",da)),c.attributes=ja(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ja(function(a){return a.appendChild(n.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=Y.test(n.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){return a.getAttribute(\"id\")===b}},d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}}):(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}},d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c,d,e,f=b.getElementById(a);if(f){if(c=f.getAttributeNode(\"id\"),c&&c.value===a)return[f];e=b.getElementsByName(a),d=0;while(f=e[d++])if(c=f.getAttributeNode(\"id\"),c&&c.value===a)return[f]}return[]}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){if(\"undefined\"!=typeof b.getElementsByClassName&&p)return b.getElementsByClassName(a)},r=[],q=[],(c.qsa=Y.test(n.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML=\"<a id='\"+u+\"'></a><select id='\"+u+\"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+K+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+K+\"*(?:value|\"+J+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),ja(function(a){a.innerHTML=\"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\";var b=n.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+K+\"*[*^$|!~]?=\"),2!==a.querySelectorAll(\":enabled\").length&&q.push(\":enabled\",\":disabled\"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(\":disabled\").length&&q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=Y.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,\"*\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",N)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=Y.test(o.compareDocumentPosition),t=b||Y.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?I(k,a)-I(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?I(k,a)-I(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?la(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(S,\"='$1']\"),c.matchesSelector&&p&&!A[b+\" \"]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.escape=function(a){return(a+\"\").replace(ba,ca)},ga.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:V,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(_,aa),a[3]=(a[3]||a[4]||a[5]||\"\").replace(_,aa),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return V.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&T.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(_,aa).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+K+\")\"+a+\"(\"+K+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?\"!=\"===b:!b||(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(O,\" \")+\" \").indexOf(c)>-1:\"|=\"===b&&(e===c||e.slice(0,c.length+1)===c+\"-\"))}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,\"$1\"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||\"\")||ga.error(\"unsupported lang: \"+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return X.test(a.nodeName)},input:function(a){return W.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:pa(function(){return[0]}),last:pa(function(a,b){return[b-1]}),eq:pa(function(a,b,c){return[c<0?c+b:c]}),even:pa(function(a,b){for(var c=0;c<b;c+=2)a.push(c);return a}),odd:pa(function(a,b){for(var c=1;c<b;c+=2)a.push(c);return a}),lt:pa(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:pa(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function ra(){}ra.prototype=d.filters=d.pseudos,d.setFilters=new ra,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=Q.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=R.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(P,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=V[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function sa(a){for(var b=0,c=a.length,d=\"\";b<c;b++)d+=a[b].value;return d}function ta(a,b,c){var d=b.dir,e=b.next,f=e||d,g=c&&\"parentNode\"===f,h=x++;return b.first?function(b,c,e){while(b=b[d])if(1===b.nodeType||g)return a(b,c,e);return!1}:function(b,c,i){var j,k,l,m=[w,h];if(i){while(b=b[d])if((1===b.nodeType||g)&&a(b,c,i))return!0}else while(b=b[d])if(1===b.nodeType||g)if(l=b[u]||(b[u]={}),k=l[b.uniqueID]||(l[b.uniqueID]={}),e&&e===b.nodeName.toLowerCase())b=b[d]||b;else{if((j=k[f])&&j[0]===w&&j[1]===h)return m[2]=j[2];if(k[f]=m,m[2]=a(b,c,i))return!0}return!1}}function ua(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function va(a,b,c){for(var d=0,e=b.length;d<e;d++)ga(a,b[d],c);return c}function wa(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;h<i;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function xa(a,b,c,d,e,f){return d&&!d[u]&&(d=xa(d)),e&&!e[u]&&(e=xa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||va(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:wa(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=wa(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?I(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=wa(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):G.apply(g,r)})}function ya(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ta(function(a){return a===b},h,!0),l=ta(function(a){return I(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];i<f;i++)if(c=d.relative[a[i].type])m=[ta(ua(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;e<f;e++)if(d.relative[a[e].type])break;return xa(i>1&&ua(m),i>1&&sa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(P,\"$1\"),c,i<e&&ya(a.slice(i,e)),e<f&&ya(a=a.slice(e)),e<f&&sa(a))}m.push(c)}return ua(m)}function za(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=E.call(i));u=wa(u)}G.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ga.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=ya(b[c]),f[u]?d.push(f):e.push(f);f=A(a,za(e,d)),f.selector=a}return f},i=ga.select=function(a,b,c,e){var f,i,j,k,l,m=\"function\"==typeof a&&a,n=!e&&g(a=m.selector||a);if(c=c||[],1===n.length){if(i=n[0]=n[0].slice(0),i.length>2&&\"ID\"===(j=i[0]).type&&9===b.nodeType&&p&&d.relative[i[1].type]){if(b=(d.find.ID(j.matches[0].replace(_,aa),b)||[])[0],!b)return c;m&&(b=b.parentNode),a=a.slice(i.shift().value.length)}f=V.needsContext.test(a)?0:i.length;while(f--){if(j=i[f],d.relative[k=j.type])break;if((l=d.find[k])&&(e=l(j.matches[0].replace(_,aa),$.test(i[0].type)&&qa(b.parentNode)||b))){if(i.splice(f,1),a=e.length&&sa(i),!a)return G.apply(c,e),c;break}}}return(m||h(a,n))(e,b,!p,c,!b||$.test(a)&&qa(b.parentNode)||b),c},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement(\"fieldset\"))}),ja(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||ka(\"type|href|height|width\",function(a,b,c){if(!c)return a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||ka(\"value\",function(a,b,c){if(!c&&\"input\"===a.nodeName.toLowerCase())return a.defaultValue}),ja(function(a){return null==a.getAttribute(\"disabled\")})||ka(J,function(a,b,c){var d;if(!c)return a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);r.find=x,r.expr=x.selectors,r.expr[\":\"]=r.expr.pseudos,r.uniqueSort=r.unique=x.uniqueSort,r.text=x.getText,r.isXMLDoc=x.isXML,r.contains=x.contains,r.escapeSelector=x.escape;var y=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},z=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},A=r.expr.match.needsContext;function B(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()}var C=/^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i,D=/^.[^:#\\[\\.,]*$/;function E(a,b,c){return r.isFunction(b)?r.grep(a,function(a,d){return!!b.call(a,d,a)!==c}):b.nodeType?r.grep(a,function(a){return a===b!==c}):\"string\"!=typeof b?r.grep(a,function(a){return i.call(b,a)>-1!==c}):D.test(b)?r.filter(b,a,c):(b=r.filter(b,a),r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType}))}r.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if(\"string\"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;b<d;b++)if(r.contains(e[b],this))return!0}));for(c=this.pushStack([]),b=0;b<d;b++)r.find(a,e[b],c);return d>1?r.uniqueSort(c):c},filter:function(a){return this.pushStack(E(this,a||[],!1))},not:function(a){return this.pushStack(E(this,a||[],!0))},is:function(a){return!!E(this,\"string\"==typeof a&&A.test(a)?r(a):a||[],!1).length}});var F,G=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,H=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||F,\"string\"==typeof a){if(e=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:G.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),C.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};H.prototype=r.fn,F=r(d);var I=/^(?:parents|prev(?:Until|All))/,J={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;a<c;a++)if(r.contains(this,b[a]))return!0})},closest:function(a,b){var c,d=0,e=this.length,f=[],g=\"string\"!=typeof a&&r(a);if(!A.test(a))for(;d<e;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&r.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?r.uniqueSort(f):f)},index:function(a){return a?\"string\"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function K(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return y(a,\"parentNode\")},parentsUntil:function(a,b,c){return y(a,\"parentNode\",c)},next:function(a){return K(a,\"nextSibling\")},prev:function(a){return K(a,\"previousSibling\")},nextAll:function(a){return y(a,\"nextSibling\")},prevAll:function(a){return y(a,\"previousSibling\")},nextUntil:function(a,b,c){return y(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return y(a,\"previousSibling\",c)},siblings:function(a){return z((a.parentNode||{}).firstChild,a)},children:function(a){return z(a.firstChild)},contents:function(a){return B(a,\"iframe\")?a.contentDocument:(B(a,\"template\")&&(a=a.content||a),r.merge([],a.childNodes))}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=r.filter(d,e)),this.length>1&&(J[a]||r.uniqueSort(e),I.test(a)&&e.reverse()),this.pushStack(e)}});var L=/[^\\x20\\t\\r\\n\\f]+/g;function M(a){var b={};return r.each(a.match(L)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a=\"string\"==typeof a?M(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=e||a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){r.each(b,function(b,c){r.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&\"string\"!==r.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return r.each(arguments,function(a,b){var c;while((c=r.inArray(b,f,c))>-1)f.splice(c,1),c<=h&&h--}),this},has:function(a){return a?r.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c=\"\",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=\"\"),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function N(a){return a}function O(a){throw a}function P(a,b,c,d){var e;try{a&&r.isFunction(e=a.promise)?e.call(a).done(b).fail(c):a&&r.isFunction(e=a.then)?e.call(a,b,c):b.apply(void 0,[a].slice(d))}catch(a){c.apply(void 0,[a])}}r.extend({Deferred:function(b){var c=[[\"notify\",\"progress\",r.Callbacks(\"memory\"),r.Callbacks(\"memory\"),2],[\"resolve\",\"done\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),1,\"rejected\"]],d=\"pending\",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},\"catch\":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+\"With\"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(b<f)){if(a=d.apply(h,i),a===c.promise())throw new TypeError(\"Thenable self-resolution\");j=a&&(\"object\"==typeof a||\"function\"==typeof a)&&a.then,r.isFunction(j)?e?j.call(a,g(f,c,N,e),g(f,c,O,e)):(f++,j.call(a,g(f,c,N,e),g(f,c,O,e),g(f,c,N,c.notifyWith))):(d!==N&&(h=void 0,i=[a]),(e||c.resolveWith)(h,i))}},k=e?j:function(){try{j()}catch(a){r.Deferred.exceptionHook&&r.Deferred.exceptionHook(a,k.stackTrace),b+1>=f&&(d!==O&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:N,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:N)),c[2][3].add(g(0,a,r.isFunction(d)?d:O))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+\"With\"](this===f?void 0:this,arguments),this},f[b[0]+\"With\"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(b<=1&&(P(a,g.done(h(c)).resolve,g.reject,!b),\"pending\"===g.state()||r.isFunction(e[c]&&e[c].then)))return g.then();while(c--)P(e[c],h(c),g.reject);return g.promise()}});var Q=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook=function(b,c){a.console&&a.console.warn&&b&&Q.test(b.name)&&a.console.warn(\"jQuery.Deferred exception: \"+b.message,b.stack,c)},r.readyException=function(b){a.setTimeout(function(){throw b})};var R=r.Deferred();r.fn.ready=function(a){return R.then(a)[\"catch\"](function(a){r.readyException(a)}),this},r.extend({isReady:!1,readyWait:1,ready:function(a){(a===!0?--r.readyWait:r.isReady)||(r.isReady=!0,a!==!0&&--r.readyWait>0||R.resolveWith(d,[r]))}}),r.ready.then=R.then;function S(){d.removeEventListener(\"DOMContentLoaded\",S),\na.removeEventListener(\"load\",S),r.ready()}\"complete\"===d.readyState||\"loading\"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener(\"DOMContentLoaded\",S),a.addEventListener(\"load\",S));var T=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===r.type(c)){e=!0;for(h in c)T(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h<i;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},U=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function V(){this.expando=r.expando+V.uid++}V.uid=1,V.prototype={cache:function(a){var b=a[this.expando];return b||(b={},U(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if(\"string\"==typeof b)e[r.camelCase(b)]=c;else for(d in b)e[r.camelCase(d)]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][r.camelCase(b)]},access:function(a,b,c){return void 0===b||b&&\"string\"==typeof b&&void 0===c?this.get(a,b):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d=a[this.expando];if(void 0!==d){if(void 0!==b){Array.isArray(b)?b=b.map(r.camelCase):(b=r.camelCase(b),b=b in d?[b]:b.match(L)||[]),c=b.length;while(c--)delete d[b[c]]}(void 0===b||r.isEmptyObject(d))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!r.isEmptyObject(b)}};var W=new V,X=new V,Y=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,Z=/[A-Z]/g;function $(a){return\"true\"===a||\"false\"!==a&&(\"null\"===a?null:a===+a+\"\"?+a:Y.test(a)?JSON.parse(a):a)}function _(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(Z,\"-$&\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=$(c)}catch(e){}X.set(a,b,c)}else c=void 0;return c}r.extend({hasData:function(a){return X.hasData(a)||W.hasData(a)},data:function(a,b,c){return X.access(a,b,c)},removeData:function(a,b){X.remove(a,b)},_data:function(a,b,c){return W.access(a,b,c)},_removeData:function(a,b){W.remove(a,b)}}),r.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=X.get(f),1===f.nodeType&&!W.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=r.camelCase(d.slice(5)),_(f,d,e[d])));W.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){X.set(this,a)}):T(this,function(b){var c;if(f&&void 0===b){if(c=X.get(f,a),void 0!==c)return c;if(c=_(f,a),void 0!==c)return c}else this.each(function(){X.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){X.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;if(a)return b=(b||\"fx\")+\"queue\",d=W.get(a,b),c&&(!d||Array.isArray(c)?d=W.access(a,b,r.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||\"fx\";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return W.get(a,c)||W.access(a,c,{empty:r.Callbacks(\"once memory\").add(function(){W.remove(a,[b+\"queue\",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?r.queue(this[0],a):void 0===b?this:this.each(function(){var c=r.queue(this,a,b);r._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&r.dequeue(this,a)})},dequeue:function(a){return this.each(function(){r.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=r.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=W.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var aa=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,ba=new RegExp(\"^(?:([+-])=|)(\"+aa+\")([a-z%]*)$\",\"i\"),ca=[\"Top\",\"Right\",\"Bottom\",\"Left\"],da=function(a,b){return a=b||a,\"none\"===a.style.display||\"\"===a.style.display&&r.contains(a.ownerDocument,a)&&\"none\"===r.css(a,\"display\")},ea=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};function fa(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return r.css(a,b,\"\")},i=h(),j=c&&c[3]||(r.cssNumber[b]?\"\":\"px\"),k=(r.cssNumber[b]||\"px\"!==j&&+i)&&ba.exec(r.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,r.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var ga={};function ha(a){var b,c=a.ownerDocument,d=a.nodeName,e=ga[d];return e?e:(b=c.body.appendChild(c.createElement(d)),e=r.css(b,\"display\"),b.parentNode.removeChild(b),\"none\"===e&&(e=\"block\"),ga[d]=e,e)}function ia(a,b){for(var c,d,e=[],f=0,g=a.length;f<g;f++)d=a[f],d.style&&(c=d.style.display,b?(\"none\"===c&&(e[f]=W.get(d,\"display\")||null,e[f]||(d.style.display=\"\")),\"\"===d.style.display&&da(d)&&(e[f]=ha(d))):\"none\"!==c&&(e[f]=\"none\",W.set(d,\"display\",c)));for(f=0;f<g;f++)null!=e[f]&&(a[f].style.display=e[f]);return a}r.fn.extend({show:function(){return ia(this,!0)},hide:function(){return ia(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){da(this)?r(this).show():r(this).hide()})}});var ja=/^(?:checkbox|radio)$/i,ka=/<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i,la=/^$|\\/(?:java|ecma)script/i,ma={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ma.optgroup=ma.option,ma.tbody=ma.tfoot=ma.colgroup=ma.caption=ma.thead,ma.th=ma.td;function na(a,b){var c;return c=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):[],void 0===b||b&&B(a,b)?r.merge([a],c):c}function oa(a,b){for(var c=0,d=a.length;c<d;c++)W.set(a[c],\"globalEval\",!b||W.get(b[c],\"globalEval\"))}var pa=/<|&#?\\w+;/;function qa(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],n=0,o=a.length;n<o;n++)if(f=a[n],f||0===f)if(\"object\"===r.type(f))r.merge(m,f.nodeType?[f]:f);else if(pa.test(f)){g=g||l.appendChild(b.createElement(\"div\")),h=(ka.exec(f)||[\"\",\"\"])[1].toLowerCase(),i=ma[h]||ma._default,g.innerHTML=i[1]+r.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;r.merge(m,g.childNodes),g=l.firstChild,g.textContent=\"\"}else m.push(b.createTextNode(f));l.textContent=\"\",n=0;while(f=m[n++])if(d&&r.inArray(f,d)>-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=na(l.appendChild(f),\"script\"),j&&oa(g),c){k=0;while(f=g[k++])la.test(f.type||\"\")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement(\"div\")),c=d.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var ra=d.documentElement,sa=/^key/,ta=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,ua=/^([^.]*)(?:\\.(.+)|)/;function va(){return!0}function wa(){return!1}function xa(){try{return d.activeElement}catch(a){}}function ya(a,b,c,d,e,f){var g,h;if(\"object\"==typeof b){\"string\"!=typeof c&&(d=d||c,c=void 0);for(h in b)ya(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&(\"string\"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=wa;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=W.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(ra,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return\"undefined\"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(L)||[\"\"],j=b.length;while(j--)h=ua.exec(b[j])||[],n=p=h[1],o=(h[2]||\"\").split(\".\").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(\".\")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=W.hasData(a)&&W.get(a);if(q&&(i=q.events)){b=(b||\"\").match(L)||[\"\"],j=b.length;while(j--)if(h=ua.exec(b[j])||[],n=p=h[1],o=(h[2]||\"\").split(\".\").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+o.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&W.remove(a,\"handle events\")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(W.get(this,\"events\")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c<arguments.length;c++)i[c]=arguments[c];if(b.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,b)!==!1){h=r.event.handlers.call(this,b,j),c=0;while((f=h[c++])&&!b.isPropagationStopped()){b.currentTarget=f.elem,d=0;while((g=f.handlers[d++])&&!b.isImmediatePropagationStopped())b.rnamespace&&!b.rnamespace.test(g.namespace)||(b.handleObj=g,b.data=g.data,e=((r.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(b.result=e)===!1&&(b.preventDefault(),b.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,b),b.result}},handlers:function(a,b){var c,d,e,f,g,h=[],i=b.delegateCount,j=a.target;if(i&&j.nodeType&&!(\"click\"===a.type&&a.button>=1))for(;j!==this;j=j.parentNode||this)if(1===j.nodeType&&(\"click\"!==a.type||j.disabled!==!0)){for(f=[],g={},c=0;c<i;c++)d=b[c],e=d.selector+\" \",void 0===g[e]&&(g[e]=d.needsContext?r(e,this).index(j)>-1:r.find(e,this,null,[j]).length),g[e]&&f.push(d);f.length&&h.push({elem:j,handlers:f})}return j=this,i<b.length&&h.push({elem:j,handlers:b.slice(i)}),h},addProp:function(a,b){Object.defineProperty(r.Event.prototype,a,{enumerable:!0,configurable:!0,get:r.isFunction(b)?function(){if(this.originalEvent)return b(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[a]},set:function(b){Object.defineProperty(this,a,{enumerable:!0,configurable:!0,writable:!0,value:b})}})},fix:function(a){return a[r.expando]?a:new r.Event(a)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==xa()&&this.focus)return this.focus(),!1},delegateType:\"focusin\"},blur:{trigger:function(){if(this===xa()&&this.blur)return this.blur(),!1},delegateType:\"focusout\"},click:{trigger:function(){if(\"checkbox\"===this.type&&this.click&&B(this,\"input\"))return this.click(),!1},_default:function(a){return B(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},r.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},r.Event=function(a,b){return this instanceof r.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?va:wa,this.target=a.target&&3===a.target.nodeType?a.target.parentNode:a.target,this.currentTarget=a.currentTarget,this.relatedTarget=a.relatedTarget):this.type=a,b&&r.extend(this,b),this.timeStamp=a&&a.timeStamp||r.now(),void(this[r.expando]=!0)):new r.Event(a,b)},r.Event.prototype={constructor:r.Event,isDefaultPrevented:wa,isPropagationStopped:wa,isImmediatePropagationStopped:wa,isSimulated:!1,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=va,a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=va,a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=va,a&&!this.isSimulated&&a.stopImmediatePropagation(),this.stopPropagation()}},r.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,\"char\":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(a){var b=a.button;return null==a.which&&sa.test(a.type)?null!=a.charCode?a.charCode:a.keyCode:!a.which&&void 0!==b&&ta.test(a.type)?1&b?1:2&b?3:4&b?2:0:a.which}},r.event.addProp),r.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){r.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||r.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),r.fn.extend({on:function(a,b,c,d){return ya(this,a,b,c,d)},one:function(a,b,c,d){return ya(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,r(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&\"function\"!=typeof b||(c=b,b=void 0),c===!1&&(c=wa),this.each(function(){r.event.remove(this,a,c,b)})}});var za=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,Aa=/<script|<style|<link/i,Ba=/checked\\s*(?:[^=]|=\\s*.checked.)/i,Ca=/^true\\/(.*)/,Da=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;function Ea(a,b){return B(a,\"table\")&&B(11!==b.nodeType?b:b.firstChild,\"tr\")?r(\">tbody\",a)[0]||a:a}function Fa(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function Ga(a){var b=Ca.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function Ha(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(W.hasData(a)&&(f=W.access(a),g=W.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;c<d;c++)r.event.add(b,e,j[e][c])}X.hasData(a)&&(h=X.access(a),i=r.extend({},h),X.set(b,i))}}function Ia(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&ja.test(a.type)?b.checked=a.checked:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}function Ja(a,b,c,d){b=g.apply([],b);var e,f,h,i,j,k,l=0,m=a.length,n=m-1,q=b[0],s=r.isFunction(q);if(s||m>1&&\"string\"==typeof q&&!o.checkClone&&Ba.test(q))return a.each(function(e){var f=a.eq(e);s&&(b[0]=q.call(this,e,f.html())),Ja(f,b,c,d)});if(m&&(e=qa(b,a[0].ownerDocument,!1,a,d),f=e.firstChild,1===e.childNodes.length&&(e=f),f||d)){for(h=r.map(na(e,\"script\"),Fa),i=h.length;l<m;l++)j=e,l!==n&&(j=r.clone(j,!0,!0),i&&r.merge(h,na(j,\"script\"))),c.call(a[l],j,l);if(i)for(k=h[h.length-1].ownerDocument,r.map(h,Ga),l=0;l<i;l++)j=h[l],la.test(j.type||\"\")&&!W.access(j,\"globalEval\")&&r.contains(k,j)&&(j.src?r._evalUrl&&r._evalUrl(j.src):p(j.textContent.replace(Da,\"\"),k))}return a}function Ka(a,b,c){for(var d,e=b?r.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||r.cleanData(na(d)),d.parentNode&&(c&&r.contains(d.ownerDocument,d)&&oa(na(d,\"script\")),d.parentNode.removeChild(d));return a}r.extend({htmlPrefilter:function(a){return a.replace(za,\"<$1></$2>\")},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=r.contains(a.ownerDocument,a);if(!(o.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||r.isXMLDoc(a)))for(g=na(h),f=na(a),d=0,e=f.length;d<e;d++)Ia(f[d],g[d]);if(b)if(c)for(f=f||na(a),g=g||na(h),d=0,e=f.length;d<e;d++)Ha(f[d],g[d]);else Ha(a,h);return g=na(h,\"script\"),g.length>0&&oa(g,!i&&na(a,\"script\")),h},cleanData:function(a){for(var b,c,d,e=r.event.special,f=0;void 0!==(c=a[f]);f++)if(U(c)){if(b=c[W.expando]){if(b.events)for(d in b.events)e[d]?r.event.remove(c,d):r.removeEvent(c,d,b.handle);c[W.expando]=void 0}c[X.expando]&&(c[X.expando]=void 0)}}}),r.fn.extend({detach:function(a){return Ka(this,a,!0)},remove:function(a){return Ka(this,a)},text:function(a){return T(this,function(a){return void 0===a?r.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return Ja(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ea(this,a);b.appendChild(a)}})},prepend:function(){return Ja(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ea(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return Ja(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return Ja(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(r.cleanData(na(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null!=a&&a,b=null==b?a:b,this.map(function(){return r.clone(this,a,b)})},html:function(a){return T(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!Aa.test(a)&&!ma[(ka.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=r.htmlPrefilter(a);try{for(;c<d;c++)b=this[c]||{},1===b.nodeType&&(r.cleanData(na(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return Ja(this,arguments,function(b){var c=this.parentNode;r.inArray(this,a)<0&&(r.cleanData(na(this)),c&&c.replaceChild(b,this))},a)}}),r.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){r.fn[a]=function(a){for(var c,d=[],e=r(a),f=e.length-1,g=0;g<=f;g++)c=g===f?this:this.clone(!0),r(e[g])[b](c),h.apply(d,c.get());return this.pushStack(d)}});var La=/^margin/,Ma=new RegExp(\"^(\"+aa+\")(?!px)[a-z%]+$\",\"i\"),Na=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)};!function(){function b(){if(i){i.style.cssText=\"box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",i.innerHTML=\"\",ra.appendChild(h);var b=a.getComputedStyle(i);c=\"1%\"!==b.top,g=\"2px\"===b.marginLeft,e=\"4px\"===b.width,i.style.marginRight=\"50%\",f=\"4px\"===b.marginRight,ra.removeChild(h),i=null}}var c,e,f,g,h=d.createElement(\"div\"),i=d.createElement(\"div\");i.style&&(i.style.backgroundClip=\"content-box\",i.cloneNode(!0).style.backgroundClip=\"\",o.clearCloneStyle=\"content-box\"===i.style.backgroundClip,h.style.cssText=\"border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute\",h.appendChild(i),r.extend(o,{pixelPosition:function(){return b(),c},boxSizingReliable:function(){return b(),e},pixelMarginRight:function(){return b(),f},reliableMarginLeft:function(){return b(),g}}))}();function Oa(a,b,c){var d,e,f,g,h=a.style;return c=c||Na(a),c&&(g=c.getPropertyValue(b)||c[b],\"\"!==g||r.contains(a.ownerDocument,a)||(g=r.style(a,b)),!o.pixelMarginRight()&&Ma.test(g)&&La.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function Pa(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Qa=/^(none|table(?!-c[ea]).+)/,Ra=/^--/,Sa={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Ta={letterSpacing:\"0\",fontWeight:\"400\"},Ua=[\"Webkit\",\"Moz\",\"ms\"],Va=d.createElement(\"div\").style;function Wa(a){if(a in Va)return a;var b=a[0].toUpperCase()+a.slice(1),c=Ua.length;while(c--)if(a=Ua[c]+b,a in Va)return a}function Xa(a){var b=r.cssProps[a];return b||(b=r.cssProps[a]=Wa(a)||a),b}function Ya(a,b,c){var d=ba.exec(b);return d?Math.max(0,d[2]-(c||0))+(d[3]||\"px\"):b}function Za(a,b,c,d,e){var f,g=0;for(f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0;f<4;f+=2)\"margin\"===c&&(g+=r.css(a,c+ca[f],!0,e)),d?(\"content\"===c&&(g-=r.css(a,\"padding\"+ca[f],!0,e)),\"margin\"!==c&&(g-=r.css(a,\"border\"+ca[f]+\"Width\",!0,e))):(g+=r.css(a,\"padding\"+ca[f],!0,e),\"padding\"!==c&&(g+=r.css(a,\"border\"+ca[f]+\"Width\",!0,e)));return g}function $a(a,b,c){var d,e=Na(a),f=Oa(a,b,e),g=\"border-box\"===r.css(a,\"boxSizing\",!1,e);return Ma.test(f)?f:(d=g&&(o.boxSizingReliable()||f===a.style[b]),\"auto\"===f&&(f=a[\"offset\"+b[0].toUpperCase()+b.slice(1)]),f=parseFloat(f)||0,f+Za(a,b,c||(g?\"border\":\"content\"),d,e)+\"px\")}r.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Oa(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=r.camelCase(b),i=Ra.test(b),j=a.style;return i||(b=Xa(h)),g=r.cssHooks[b]||r.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:j[b]:(f=typeof c,\"string\"===f&&(e=ba.exec(c))&&e[1]&&(c=fa(a,b,e),f=\"number\"),null!=c&&c===c&&(\"number\"===f&&(c+=e&&e[3]||(r.cssNumber[h]?\"\":\"px\")),o.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(j[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i?j.setProperty(b,c):j[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=r.camelCase(b),i=Ra.test(b);return i||(b=Xa(h)),g=r.cssHooks[b]||r.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=Oa(a,b,d)),\"normal\"===e&&b in Ta&&(e=Ta[b]),\"\"===c||c?(f=parseFloat(e),c===!0||isFinite(f)?f||0:e):e}}),r.each([\"height\",\"width\"],function(a,b){r.cssHooks[b]={get:function(a,c,d){if(c)return!Qa.test(r.css(a,\"display\"))||a.getClientRects().length&&a.getBoundingClientRect().width?$a(a,b,d):ea(a,Sa,function(){return $a(a,b,d)})},set:function(a,c,d){var e,f=d&&Na(a),g=d&&Za(a,b,d,\"border-box\"===r.css(a,\"boxSizing\",!1,f),f);return g&&(e=ba.exec(c))&&\"px\"!==(e[3]||\"px\")&&(a.style[b]=c,c=r.css(a,b)),Ya(a,c,g)}}}),r.cssHooks.marginLeft=Pa(o.reliableMarginLeft,function(a,b){if(b)return(parseFloat(Oa(a,\"marginLeft\"))||a.getBoundingClientRect().left-ea(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+\"px\"}),r.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){r.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];d<4;d++)e[a+ca[d]+b]=f[d]||f[d-2]||f[0];return e}},La.test(a)||(r.cssHooks[a+b].set=Ya)}),r.fn.extend({css:function(a,b){return T(this,function(a,b,c){var d,e,f={},g=0;if(Array.isArray(b)){for(d=Na(a),e=b.length;g<e;g++)f[b[g]]=r.css(a,b[g],!1,d);return f}return void 0!==c?r.style(a,b,c):r.css(a,b)},a,b,arguments.length>1)}});function _a(a,b,c,d,e){return new _a.prototype.init(a,b,c,d,e)}r.Tween=_a,_a.prototype={constructor:_a,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||r.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(r.cssNumber[c]?\"\":\"px\")},cur:function(){var a=_a.propHooks[this.prop];return a&&a.get?a.get(this):_a.propHooks._default.get(this)},run:function(a){var b,c=_a.propHooks[this.prop];return this.options.duration?this.pos=b=r.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):_a.propHooks._default.set(this),this}},_a.prototype.init.prototype=_a.prototype,_a.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=r.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0)},set:function(a){r.fx.step[a.prop]?r.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[r.cssProps[a.prop]]&&!r.cssHooks[a.prop]?a.elem[a.prop]=a.now:r.style(a.elem,a.prop,a.now+a.unit)}}},_a.propHooks.scrollTop=_a.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},r.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:\"swing\"},r.fx=_a.prototype.init,r.fx.step={};var ab,bb,cb=/^(?:toggle|show|hide)$/,db=/queueHooks$/;function eb(){bb&&(d.hidden===!1&&a.requestAnimationFrame?a.requestAnimationFrame(eb):a.setTimeout(eb,r.fx.interval),r.fx.tick())}function fb(){return a.setTimeout(function(){ab=void 0}),ab=r.now()}function gb(a,b){var c,d=0,e={height:a};for(b=b?1:0;d<4;d+=2-b)c=ca[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function hb(a,b,c){for(var d,e=(kb.tweeners[b]||[]).concat(kb.tweeners[\"*\"]),f=0,g=e.length;f<g;f++)if(d=e[f].call(c,b,a))return d}function ib(a,b,c){var d,e,f,g,h,i,j,k,l=\"width\"in b||\"height\"in b,m=this,n={},o=a.style,p=a.nodeType&&da(a),q=W.get(a,\"fxshow\");c.queue||(g=r._queueHooks(a,\"fx\"),null==g.unqueued&&(g.unqueued=0,h=g.empty.fire,g.empty.fire=function(){g.unqueued||h()}),g.unqueued++,m.always(function(){m.always(function(){g.unqueued--,r.queue(a,\"fx\").length||g.empty.fire()})}));for(d in b)if(e=b[d],cb.test(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}n[d]=q&&q[d]||r.style(a,d)}if(i=!r.isEmptyObject(b),i||!r.isEmptyObject(n)){l&&1===a.nodeType&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=q&&q.display,null==j&&(j=W.get(a,\"display\")),k=r.css(a,\"display\"),\"none\"===k&&(j?k=j:(ia([a],!0),j=a.style.display||j,k=r.css(a,\"display\"),ia([a]))),(\"inline\"===k||\"inline-block\"===k&&null!=j)&&\"none\"===r.css(a,\"float\")&&(i||(m.done(function(){o.display=j}),null==j&&(k=o.display,j=\"none\"===k?\"\":k)),o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",m.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]})),i=!1;for(d in n)i||(q?\"hidden\"in q&&(p=q.hidden):q=W.access(a,\"fxshow\",{display:j}),f&&(q.hidden=!p),p&&ia([a],!0),m.done(function(){p||ia([a]),W.remove(a,\"fxshow\");for(d in n)r.style(a,d,n[d])})),i=hb(p?q[d]:0,d,m),d in q||(q[d]=i.start,p&&(i.end=i.start,i.start=0))}}function jb(a,b){var c,d,e,f,g;for(c in a)if(d=r.camelCase(c),e=b[d],f=a[c],Array.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=r.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function kb(a,b,c){var d,e,f=0,g=kb.prefilters.length,h=r.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=ab||fb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;g<i;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),f<1&&i?c:(i||h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:r.extend({},b),opts:r.extend(!0,{specialEasing:{},easing:r.easing._default},c),originalProperties:b,originalOptions:c,startTime:ab||fb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=r.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;c<d;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(jb(k,j.opts.specialEasing);f<g;f++)if(d=kb.prefilters[f].call(j,a,k,j.opts))return r.isFunction(d.stop)&&(r._queueHooks(j.elem,j.opts.queue).stop=r.proxy(d.stop,d)),d;return r.map(k,hb,j),r.isFunction(j.opts.start)&&j.opts.start.call(a,j),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always),r.fx.timer(r.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j}r.Animation=r.extend(kb,{tweeners:{\"*\":[function(a,b){var c=this.createTween(a,b);return fa(c.elem,a,ba.exec(b),c),c}]},tweener:function(a,b){r.isFunction(a)?(b=a,a=[\"*\"]):a=a.match(L);for(var c,d=0,e=a.length;d<e;d++)c=a[d],kb.tweeners[c]=kb.tweeners[c]||[],kb.tweeners[c].unshift(b)},prefilters:[ib],prefilter:function(a,b){b?kb.prefilters.unshift(a):kb.prefilters.push(a)}}),r.speed=function(a,b,c){var d=a&&\"object\"==typeof a?r.extend({},a):{complete:c||!c&&b||r.isFunction(a)&&a,duration:a,easing:c&&b||b&&!r.isFunction(b)&&b};return r.fx.off?d.duration=0:\"number\"!=typeof d.duration&&(d.duration in r.fx.speeds?d.duration=r.fx.speeds[d.duration]:d.duration=r.fx.speeds._default),null!=d.queue&&d.queue!==!0||(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){r.isFunction(d.old)&&d.old.call(this),d.queue&&r.dequeue(this,d.queue)},d},r.fn.extend({fadeTo:function(a,b,c,d){return this.filter(da).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=r.isEmptyObject(a),f=r.speed(b,c,d),g=function(){var b=kb(this,r.extend({},a),f);(e||W.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=r.timers,g=W.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&db.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||r.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=W.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=r.timers,g=d?d.length:0;for(c.finish=!0,r.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;b<g;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),r.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=r.fn[b];r.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(gb(b,!0),a,d,e)}}),r.each({slideDown:gb(\"show\"),slideUp:gb(\"hide\"),slideToggle:gb(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){r.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),r.timers=[],r.fx.tick=function(){var a,b=0,c=r.timers;for(ab=r.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||r.fx.stop(),ab=void 0},r.fx.timer=function(a){r.timers.push(a),r.fx.start()},r.fx.interval=13,r.fx.start=function(){bb||(bb=!0,eb())},r.fx.stop=function(){bb=null},r.fx.speeds={slow:600,fast:200,_default:400},r.fn.delay=function(b,c){return b=r.fx?r.fx.speeds[b]||b:b,c=c||\"fx\",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement(\"input\"),b=d.createElement(\"select\"),c=b.appendChild(d.createElement(\"option\"));a.type=\"checkbox\",o.checkOn=\"\"!==a.value,o.optSelected=c.selected,a=d.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",o.radioValue=\"t\"===a.value}();var lb,mb=r.expr.attrHandle;r.fn.extend({attr:function(a,b){return T(this,r.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){r.removeAttr(this,a)})}}),r.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return\"undefined\"==typeof a.getAttribute?r.prop(a,b,c):(1===f&&r.isXMLDoc(a)||(e=r.attrHooks[b.toLowerCase()]||(r.expr.match.bool.test(b)?lb:void 0)),void 0!==c?null===c?void r.removeAttr(a,b):e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+\"\"),c):e&&\"get\"in e&&null!==(d=e.get(a,b))?d:(d=r.find.attr(a,b),\nnull==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!o.radioValue&&\"radio\"===b&&B(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d=0,e=b&&b.match(L);if(e&&1===a.nodeType)while(c=e[d++])a.removeAttribute(c)}}),lb={set:function(a,b,c){return b===!1?r.removeAttr(a,c):a.setAttribute(c,c),c}},r.each(r.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=mb[b]||r.find.attr;mb[b]=function(a,b,d){var e,f,g=b.toLowerCase();return d||(f=mb[g],mb[g]=e,e=null!=c(a,b,d)?g:null,mb[g]=f),e}});var nb=/^(?:input|select|textarea|button)$/i,ob=/^(?:a|area)$/i;r.fn.extend({prop:function(a,b){return T(this,r.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[r.propFix[a]||a]})}}),r.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&r.isXMLDoc(a)||(b=r.propFix[b]||b,e=r.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=r.find.attr(a,\"tabindex\");return b?parseInt(b,10):nb.test(a.nodeName)||ob.test(a.nodeName)&&a.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),o.optSelected||(r.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),r.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){r.propFix[this.toLowerCase()]=this});function pb(a){var b=a.match(L)||[];return b.join(\" \")}function qb(a){return a.getAttribute&&a.getAttribute(\"class\")||\"\"}r.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).addClass(a.call(this,b,qb(this)))});if(\"string\"==typeof a&&a){b=a.match(L)||[];while(c=this[i++])if(e=qb(c),d=1===c.nodeType&&\" \"+pb(e)+\" \"){g=0;while(f=b[g++])d.indexOf(\" \"+f+\" \")<0&&(d+=f+\" \");h=pb(d),e!==h&&c.setAttribute(\"class\",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).removeClass(a.call(this,b,qb(this)))});if(!arguments.length)return this.attr(\"class\",\"\");if(\"string\"==typeof a&&a){b=a.match(L)||[];while(c=this[i++])if(e=qb(c),d=1===c.nodeType&&\" \"+pb(e)+\" \"){g=0;while(f=b[g++])while(d.indexOf(\" \"+f+\" \")>-1)d=d.replace(\" \"+f+\" \",\" \");h=pb(d),e!==h&&c.setAttribute(\"class\",h)}}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):r.isFunction(a)?this.each(function(c){r(this).toggleClass(a.call(this,c,qb(this),b),b)}):this.each(function(){var b,d,e,f;if(\"string\"===c){d=0,e=r(this),f=a.match(L)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&\"boolean\"!==c||(b=qb(this),b&&W.set(this,\"__className__\",b),this.setAttribute&&this.setAttribute(\"class\",b||a===!1?\"\":W.get(this,\"__className__\")||\"\"))})},hasClass:function(a){var b,c,d=0;b=\" \"+a+\" \";while(c=this[d++])if(1===c.nodeType&&(\" \"+pb(qb(c))+\" \").indexOf(b)>-1)return!0;return!1}});var rb=/\\r/g;r.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=r.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,r(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":Array.isArray(e)&&(e=r.map(e,function(a){return null==a?\"\":a+\"\"})),b=r.valHooks[this.type]||r.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=r.valHooks[e.type]||r.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(rb,\"\"):null==c?\"\":c)}}}),r.extend({valHooks:{option:{get:function(a){var b=r.find.attr(a,\"value\");return null!=b?b:pb(r.text(a))}},select:{get:function(a){var b,c,d,e=a.options,f=a.selectedIndex,g=\"select-one\"===a.type,h=g?null:[],i=g?f+1:e.length;for(d=f<0?i:g?f:0;d<i;d++)if(c=e[d],(c.selected||d===f)&&!c.disabled&&(!c.parentNode.disabled||!B(c.parentNode,\"optgroup\"))){if(b=r(c).val(),g)return b;h.push(b)}return h},set:function(a,b){var c,d,e=a.options,f=r.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=r.inArray(r.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),r.each([\"radio\",\"checkbox\"],function(){r.valHooks[this]={set:function(a,b){if(Array.isArray(b))return a.checked=r.inArray(r(a).val(),b)>-1}},o.checkOn||(r.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})});var sb=/^(?:focusinfocus|focusoutblur)$/;r.extend(r.event,{trigger:function(b,c,e,f){var g,h,i,j,k,m,n,o=[e||d],p=l.call(b,\"type\")?b.type:b,q=l.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!sb.test(p+r.event.triggered)&&(p.indexOf(\".\")>-1&&(q=p.split(\".\"),p=q.shift(),q.sort()),k=p.indexOf(\":\")<0&&\"on\"+p,b=b[r.expando]?b:new r.Event(p,\"object\"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=q.join(\".\"),b.rnamespace=b.namespace?new RegExp(\"(^|\\\\.)\"+q.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:r.makeArray(c,[b]),n=r.event.special[p]||{},f||!n.trigger||n.trigger.apply(e,c)!==!1)){if(!f&&!n.noBubble&&!r.isWindow(e)){for(j=n.delegateType||p,sb.test(j+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),i=h;i===(e.ownerDocument||d)&&o.push(i.defaultView||i.parentWindow||a)}g=0;while((h=o[g++])&&!b.isPropagationStopped())b.type=g>1?j:n.bindType||p,m=(W.get(h,\"events\")||{})[b.type]&&W.get(h,\"handle\"),m&&m.apply(h,c),m=k&&h[k],m&&m.apply&&U(h)&&(b.result=m.apply(h,c),b.result===!1&&b.preventDefault());return b.type=p,f||b.isDefaultPrevented()||n._default&&n._default.apply(o.pop(),c)!==!1||!U(e)||k&&r.isFunction(e[p])&&!r.isWindow(e)&&(i=e[k],i&&(e[k]=null),r.event.triggered=p,e[p](),r.event.triggered=void 0,i&&(e[k]=i)),b.result}},simulate:function(a,b,c){var d=r.extend(new r.Event,c,{type:a,isSimulated:!0});r.event.trigger(d,null,b)}}),r.fn.extend({trigger:function(a,b){return this.each(function(){r.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];if(c)return r.event.trigger(a,b,c,!0)}}),r.each(\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\".split(\" \"),function(a,b){r.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),r.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),o.focusin=\"onfocusin\"in a,o.focusin||r.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){r.event.simulate(b,a.target,r.event.fix(a))};r.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=W.access(d,b);e||d.addEventListener(a,c,!0),W.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=W.access(d,b)-1;e?W.access(d,b,e):(d.removeEventListener(a,c,!0),W.remove(d,b))}}});var tb=a.location,ub=r.now(),vb=/\\?/;r.parseXML=function(b){var c;if(!b||\"string\"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,\"text/xml\")}catch(d){c=void 0}return c&&!c.getElementsByTagName(\"parsererror\").length||r.error(\"Invalid XML: \"+b),c};var wb=/\\[\\]$/,xb=/\\r?\\n/g,yb=/^(?:submit|button|image|reset|file)$/i,zb=/^(?:input|select|textarea|keygen)/i;function Ab(a,b,c,d){var e;if(Array.isArray(b))r.each(b,function(b,e){c||wb.test(a)?d(a,e):Ab(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==r.type(b))d(a,b);else for(e in b)Ab(a+\"[\"+e+\"]\",b[e],c,d)}r.param=function(a,b){var c,d=[],e=function(a,b){var c=r.isFunction(b)?b():b;d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(null==c?\"\":c)};if(Array.isArray(a)||a.jquery&&!r.isPlainObject(a))r.each(a,function(){e(this.name,this.value)});else for(c in a)Ab(c,a[c],b,e);return d.join(\"&\")},r.fn.extend({serialize:function(){return r.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=r.prop(this,\"elements\");return a?r.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!r(this).is(\":disabled\")&&zb.test(this.nodeName)&&!yb.test(a)&&(this.checked||!ja.test(a))}).map(function(a,b){var c=r(this).val();return null==c?null:Array.isArray(c)?r.map(c,function(a){return{name:b.name,value:a.replace(xb,\"\\r\\n\")}}):{name:b.name,value:c.replace(xb,\"\\r\\n\")}}).get()}});var Bb=/%20/g,Cb=/#.*$/,Db=/([?&])_=[^&]*/,Eb=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Fb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Gb=/^(?:GET|HEAD)$/,Hb=/^\\/\\//,Ib={},Jb={},Kb=\"*/\".concat(\"*\"),Lb=d.createElement(\"a\");Lb.href=tb.href;function Mb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(L)||[];if(r.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Nb(a,b,c,d){var e={},f=a===Jb;function g(h){var i;return e[h]=!0,r.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function Ob(a,b){var c,d,e=r.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&r.extend(!0,a,d),a}function Pb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}if(f)return f!==i[0]&&i.unshift(f),c[f]}function Qb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}r.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:tb.href,type:\"GET\",isLocal:Fb.test(tb.protocol),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":Kb,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":JSON.parse,\"text xml\":r.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Ob(Ob(a,r.ajaxSettings),b):Ob(r.ajaxSettings,a)},ajaxPrefilter:Mb(Ib),ajaxTransport:Mb(Jb),ajax:function(b,c){\"object\"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m,n,o=r.ajaxSetup({},c),p=o.context||o,q=o.context&&(p.nodeType||p.jquery)?r(p):r.event,s=r.Deferred(),t=r.Callbacks(\"once memory\"),u=o.statusCode||{},v={},w={},x=\"canceled\",y={readyState:0,getResponseHeader:function(a){var b;if(k){if(!h){h={};while(b=Eb.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return k?g:null},setRequestHeader:function(a,b){return null==k&&(a=w[a.toLowerCase()]=w[a.toLowerCase()]||a,v[a]=b),this},overrideMimeType:function(a){return null==k&&(o.mimeType=a),this},statusCode:function(a){var b;if(a)if(k)y.always(a[y.status]);else for(b in a)u[b]=[u[b],a[b]];return this},abort:function(a){var b=a||x;return e&&e.abort(b),A(0,b),this}};if(s.promise(y),o.url=((b||o.url||tb.href)+\"\").replace(Hb,tb.protocol+\"//\"),o.type=c.method||c.type||o.method||o.type,o.dataTypes=(o.dataType||\"*\").toLowerCase().match(L)||[\"\"],null==o.crossDomain){j=d.createElement(\"a\");try{j.href=o.url,j.href=j.href,o.crossDomain=Lb.protocol+\"//\"+Lb.host!=j.protocol+\"//\"+j.host}catch(z){o.crossDomain=!0}}if(o.data&&o.processData&&\"string\"!=typeof o.data&&(o.data=r.param(o.data,o.traditional)),Nb(Ib,o,c,y),k)return y;l=r.event&&o.global,l&&0===r.active++&&r.event.trigger(\"ajaxStart\"),o.type=o.type.toUpperCase(),o.hasContent=!Gb.test(o.type),f=o.url.replace(Cb,\"\"),o.hasContent?o.data&&o.processData&&0===(o.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&(o.data=o.data.replace(Bb,\"+\")):(n=o.url.slice(f.length),o.data&&(f+=(vb.test(f)?\"&\":\"?\")+o.data,delete o.data),o.cache===!1&&(f=f.replace(Db,\"$1\"),n=(vb.test(f)?\"&\":\"?\")+\"_=\"+ub++ +n),o.url=f+n),o.ifModified&&(r.lastModified[f]&&y.setRequestHeader(\"If-Modified-Since\",r.lastModified[f]),r.etag[f]&&y.setRequestHeader(\"If-None-Match\",r.etag[f])),(o.data&&o.hasContent&&o.contentType!==!1||c.contentType)&&y.setRequestHeader(\"Content-Type\",o.contentType),y.setRequestHeader(\"Accept\",o.dataTypes[0]&&o.accepts[o.dataTypes[0]]?o.accepts[o.dataTypes[0]]+(\"*\"!==o.dataTypes[0]?\", \"+Kb+\"; q=0.01\":\"\"):o.accepts[\"*\"]);for(m in o.headers)y.setRequestHeader(m,o.headers[m]);if(o.beforeSend&&(o.beforeSend.call(p,y,o)===!1||k))return y.abort();if(x=\"abort\",t.add(o.complete),y.done(o.success),y.fail(o.error),e=Nb(Jb,o,c,y)){if(y.readyState=1,l&&q.trigger(\"ajaxSend\",[y,o]),k)return y;o.async&&o.timeout>0&&(i=a.setTimeout(function(){y.abort(\"timeout\")},o.timeout));try{k=!1,e.send(v,A)}catch(z){if(k)throw z;A(-1,z)}}else A(-1,\"No Transport\");function A(b,c,d,h){var j,m,n,v,w,x=c;k||(k=!0,i&&a.clearTimeout(i),e=void 0,g=h||\"\",y.readyState=b>0?4:0,j=b>=200&&b<300||304===b,d&&(v=Pb(o,y,d)),v=Qb(o,v,y,j),j?(o.ifModified&&(w=y.getResponseHeader(\"Last-Modified\"),w&&(r.lastModified[f]=w),w=y.getResponseHeader(\"etag\"),w&&(r.etag[f]=w)),204===b||\"HEAD\"===o.type?x=\"nocontent\":304===b?x=\"notmodified\":(x=v.state,m=v.data,n=v.error,j=!n)):(n=x,!b&&x||(x=\"error\",b<0&&(b=0))),y.status=b,y.statusText=(c||x)+\"\",j?s.resolveWith(p,[m,x,y]):s.rejectWith(p,[y,x,n]),y.statusCode(u),u=void 0,l&&q.trigger(j?\"ajaxSuccess\":\"ajaxError\",[y,o,j?m:n]),t.fireWith(p,[y,x]),l&&(q.trigger(\"ajaxComplete\",[y,o]),--r.active||r.event.trigger(\"ajaxStop\")))}return y},getJSON:function(a,b,c){return r.get(a,b,c,\"json\")},getScript:function(a,b){return r.get(a,void 0,b,\"script\")}}),r.each([\"get\",\"post\"],function(a,b){r[b]=function(a,c,d,e){return r.isFunction(c)&&(e=e||d,d=c,c=void 0),r.ajax(r.extend({url:a,type:b,dataType:e,data:c,success:d},r.isPlainObject(a)&&a))}}),r._evalUrl=function(a){return r.ajax({url:a,type:\"GET\",dataType:\"script\",cache:!0,async:!1,global:!1,\"throws\":!0})},r.fn.extend({wrapAll:function(a){var b;return this[0]&&(r.isFunction(a)&&(a=a.call(this[0])),b=r(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this},wrapInner:function(a){return r.isFunction(a)?this.each(function(b){r(this).wrapInner(a.call(this,b))}):this.each(function(){var b=r(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=r.isFunction(a);return this.each(function(c){r(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(a){return this.parent(a).not(\"body\").each(function(){r(this).replaceWith(this.childNodes)}),this}}),r.expr.pseudos.hidden=function(a){return!r.expr.pseudos.visible(a)},r.expr.pseudos.visible=function(a){return!!(a.offsetWidth||a.offsetHeight||a.getClientRects().length)},r.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var Rb={0:200,1223:204},Sb=r.ajaxSettings.xhr();o.cors=!!Sb&&\"withCredentials\"in Sb,o.ajax=Sb=!!Sb,r.ajaxTransport(function(b){var c,d;if(o.cors||Sb&&!b.crossDomain)return{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e[\"X-Requested-With\"]||(e[\"X-Requested-With\"]=\"XMLHttpRequest\");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,\"abort\"===a?h.abort():\"error\"===a?\"number\"!=typeof h.status?f(0,\"error\"):f(h.status,h.statusText):f(Rb[h.status]||h.status,h.statusText,\"text\"!==(h.responseType||\"text\")||\"string\"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c(\"error\"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c(\"abort\");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}}),r.ajaxPrefilter(function(a){a.crossDomain&&(a.contents.script=!1)}),r.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function(a){return r.globalEval(a),a}}}),r.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),r.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=r(\"<script>\").prop({charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&f(\"error\"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Tb=[],Ub=/(=)\\?(?=&|$)|\\?\\?/;r.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Tb.pop()||r.expando+\"_\"+ub++;return this[a]=!0,a}}),r.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Ub.test(b.url)?\"url\":\"string\"==typeof b.data&&0===(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Ub.test(b.data)&&\"data\");if(h||\"jsonp\"===b.dataTypes[0])return e=b.jsonpCallback=r.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Ub,\"$1\"+e):b.jsonp!==!1&&(b.url+=(vb.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||r.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?r(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Tb.push(e)),g&&r.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"}),o.createHTMLDocument=function(){var a=d.implementation.createHTMLDocument(\"\").body;return a.innerHTML=\"<form></form><form></form>\",2===a.childNodes.length}(),r.parseHTML=function(a,b,c){if(\"string\"!=typeof a)return[];\"boolean\"==typeof b&&(c=b,b=!1);var e,f,g;return b||(o.createHTMLDocument?(b=d.implementation.createHTMLDocument(\"\"),e=b.createElement(\"base\"),e.href=d.location.href,b.head.appendChild(e)):b=d),f=C.exec(a),g=!c&&[],f?[b.createElement(f[1])]:(f=qa([a],b,g),g&&g.length&&r(g).remove(),r.merge([],f.childNodes))},r.fn.load=function(a,b,c){var d,e,f,g=this,h=a.indexOf(\" \");return h>-1&&(d=pb(a.slice(h)),a=a.slice(0,h)),r.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&r.ajax({url:a,type:e||\"GET\",dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?r(\"<div>\").append(r.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},r.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){r.fn[b]=function(a){return this.on(b,a)}}),r.expr.pseudos.animated=function(a){return r.grep(r.timers,function(b){return a===b.elem}).length},r.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=r.css(a,\"position\"),l=r(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=r.css(a,\"top\"),i=r.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),r.isFunction(b)&&(b=b.call(a,c,r.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},r.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){r.offset.setOffset(this,a,b)});var b,c,d,e,f=this[0];if(f)return f.getClientRects().length?(d=f.getBoundingClientRect(),b=f.ownerDocument,c=b.documentElement,e=b.defaultView,{top:d.top+e.pageYOffset-c.clientTop,left:d.left+e.pageXOffset-c.clientLeft}):{top:0,left:0}},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===r.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),B(a[0],\"html\")||(d=a.offset()),d={top:d.top+r.css(a[0],\"borderTopWidth\",!0),left:d.left+r.css(a[0],\"borderLeftWidth\",!0)}),{top:b.top-d.top-r.css(c,\"marginTop\",!0),left:b.left-d.left-r.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&\"static\"===r.css(a,\"position\"))a=a.offsetParent;return a||ra})}}),r.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(a,b){var c=\"pageYOffset\"===b;r.fn[a]=function(d){return T(this,function(a,d,e){var f;return r.isWindow(a)?f=a:9===a.nodeType&&(f=a.defaultView),void 0===e?f?f[b]:a[d]:void(f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e)},a,d,arguments.length)}}),r.each([\"top\",\"left\"],function(a,b){r.cssHooks[b]=Pa(o.pixelPosition,function(a,c){if(c)return c=Oa(a,b),Ma.test(c)?r(a).position()[b]+\"px\":c})}),r.each({Height:\"height\",Width:\"width\"},function(a,b){r.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){r.fn[d]=function(e,f){var g=arguments.length&&(c||\"boolean\"!=typeof e),h=c||(e===!0||f===!0?\"margin\":\"border\");return T(this,function(b,c,e){var f;return r.isWindow(b)?0===d.indexOf(\"outer\")?b[\"inner\"+a]:b.document.documentElement[\"client\"+a]:9===b.nodeType?(f=b.documentElement,Math.max(b.body[\"scroll\"+a],f[\"scroll\"+a],b.body[\"offset\"+a],f[\"offset\"+a],f[\"client\"+a])):void 0===e?r.css(b,c,h):r.style(b,c,e,h)},b,g?e:void 0,g)}})}),r.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}}),r.holdReady=function(a){a?r.readyWait++:r.ready(!0)},r.isArray=Array.isArray,r.parseJSON=JSON.parse,r.nodeName=B,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return r});var Vb=a.jQuery,Wb=a.$;return r.noConflict=function(b){return a.$===r&&(a.$=Wb),b&&a.jQuery===r&&(a.jQuery=Vb),r},b||(a.jQuery=a.$=r),r});\n","/**\n * jQuery mousehold plugin - fires an event while the mouse is clicked down.\n * Additionally, the function, when executed, is passed a single\n * argument representing the count of times the event has been fired during\n * this session of the mouse hold.\n *\n * @author Remy Sharp (leftlogic.com)\n * @date 2006-12-15\n * @example $(\"img\").mousehold(200, function(i){  })\n * @desc Repeats firing the passed function while the mouse is clicked down\n *\n * @name mousehold\n * @type jQuery\n * @param Number timeout The frequency to repeat the event in milliseconds\n * @param Function fn A function to execute\n * @cat Plugin\n */\n\n(function($) {\n\n$.fn.mousehold = function(timeout, f) {\n  if (timeout && typeof timeout == 'function') {\n    f = timeout;\n    timeout = 100;\n  }\n  if (f && typeof f == 'function') {\n    var timer = 0;\n    var fireStep = 0;\n    return this.each(function() {\n      $(this).mousedown(function() {\n        fireStep = 1;\n        var ctr = 0;\n        var t = this;\n        timer = setInterval(function() {\n          ctr++;\n          f.call(t, ctr);\n          fireStep = 2;\n        }, timeout);\n      });\n\n      var clearMousehold = function() {\n        clearInterval(timer);\n        if (fireStep == 1) f.call(this, 1);\n        fireStep = 0;\n      };\n\n      $(this).mouseout(clearMousehold);\n      $(this).mouseup(clearMousehold);\n    })\n  }\n}\n\n})(jQuery);\n","/*! Copyright (c) 2011 Brandon Aaron (http://brandonaaron.net)\n * Licensed under the MIT License (LICENSE.txt).\n *\n * Thanks to: http://adomas.org/javascript-mouse-wheel/ for some pointers.\n * Thanks to: Mathias Bank(http://www.mathias-bank.de) for a scope bug fix.\n * Thanks to: Seamus Leahy for adding deltaX and deltaY\n *\n * Version: 3.0.6\n *\n * Requires: 1.2.2+\n */\n\n(function($) {\n\nvar types = ['DOMMouseScroll', 'mousewheel'];\n\nif ($.event.fixHooks) {\n    for ( var i=types.length; i; ) {\n        $.event.fixHooks[ types[--i] ] = $.event.mouseHooks;\n    }\n}\n\n$.event.special.mousewheel = {\n    setup: function() {\n        if ( this.addEventListener ) {\n            for ( var i=types.length; i; ) {\n                this.addEventListener( types[--i], handler, false );\n            }\n        } else {\n            this.onmousewheel = handler;\n        }\n    },\n\n    teardown: function() {\n        if ( this.removeEventListener ) {\n            for ( var i=types.length; i; ) {\n                this.removeEventListener( types[--i], handler, false );\n            }\n        } else {\n            this.onmousewheel = null;\n        }\n    }\n};\n\n$.fn.extend({\n    mousewheel: function(fn) {\n        return fn ? this.bind(\"mousewheel\", fn) : this.trigger(\"mousewheel\");\n    },\n\n    unmousewheel: function(fn) {\n        return this.unbind(\"mousewheel\", fn);\n    }\n});\n\n\nfunction handler(event) {\n    var orgEvent = event || window.event, args = [].slice.call( arguments, 1 ), delta = 0, returnValue = true, deltaX = 0, deltaY = 0;\n    event = $.event.fix(orgEvent);\n    event.type = \"mousewheel\";\n\n    // Old school scrollwheel delta\n    if ( orgEvent.wheelDelta ) { delta = orgEvent.wheelDelta/120; }\n    if ( orgEvent.detail     ) { delta = -orgEvent.detail/3; }\n\n    // New school multidimensional scroll (touchpads) deltas\n    deltaY = delta;\n\n    // Gecko\n    if ( orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {\n        deltaY = 0;\n        deltaX = -1*delta;\n    }\n\n    // Webkit\n    if ( orgEvent.wheelDeltaY !== undefined ) { deltaY = orgEvent.wheelDeltaY/120; }\n    if ( orgEvent.wheelDeltaX !== undefined ) { deltaX = -1*orgEvent.wheelDeltaX/120; }\n\n    // Add event and delta to the front of the arguments\n    args.unshift(event, delta, deltaX, deltaY);\n\n    return ($.event.dispatch || $.event.handle).apply(this, args);\n}\n\n})(jQuery);","// tipsy, facebook style tooltips for jquery\n// version 1.0.0a\n// (c) 2008-2010 jason frame [jason@onehackoranother.com]\n// released under the MIT license\n\n(function($) {\n    \n    function maybeCall(thing, ctx) {\n        return (typeof thing == 'function') ? (thing.call(ctx)) : thing;\n    };\n    \n    function isElementInDOM(ele) {\n      while (ele = ele.parentNode) {\n        if (ele == document) return true;\n      }\n      return false;\n    };\n    \n    function Tipsy(element, options) {\n        this.$element = $(element);\n        this.options = options;\n        this.enabled = true;\n        this.fixTitle();\n    };\n    \n    Tipsy.prototype = {\n        show: function() {\n            var title = this.getTitle();\n            if (title && this.enabled) {\n                var $tip = this.tip();\n                \n                $tip.find('.tipsy-inner')[this.options.html ? 'html' : 'text'](title);\n                $tip[0].className = 'tipsy'; // reset classname in case of dynamic gravity\n                $tip.remove().css({top: 0, left: 0, visibility: 'hidden', display: 'block'}).prependTo(document.body);\n                \n                var pos = $.extend({}, this.$element.offset(), {\n                    width: this.$element[0].offsetWidth,\n                    height: this.$element[0].offsetHeight\n                });\n                \n                var actualWidth = $tip[0].offsetWidth,\n                    actualHeight = $tip[0].offsetHeight,\n                    gravity = maybeCall(this.options.gravity, this.$element[0]);\n                \n                var tp;\n                switch (gravity.charAt(0)) {\n                    case 'n':\n                        tp = {top: pos.top + pos.height + this.options.offset, left: pos.left + pos.width / 2 - actualWidth / 2};\n                        break;\n                    case 's':\n                        tp = {top: pos.top - actualHeight - this.options.offset, left: pos.left + pos.width / 2 - actualWidth / 2};\n                        break;\n                    case 'e':\n                        tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth - this.options.offset};\n                        break;\n                    case 'w':\n                        tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width + this.options.offset};\n                        break;\n                }\n                \n                if (gravity.length == 2) {\n                    if (gravity.charAt(1) == 'w') {\n                        tp.left = pos.left + pos.width / 2 - 15;\n                    } else {\n                        tp.left = pos.left + pos.width / 2 - actualWidth + 15;\n                    }\n                }\n                \n                $tip.css(tp).addClass('tipsy-' + gravity);\n                $tip.find('.tipsy-arrow')[0].className = 'tipsy-arrow tipsy-arrow-' + gravity.charAt(0);\n                if (this.options.className) {\n                    $tip.addClass(maybeCall(this.options.className, this.$element[0]));\n                }\n                \n                if (this.options.fade) {\n                    $tip.stop().css({opacity: 0, display: 'block', visibility: 'visible'}).animate({opacity: this.options.opacity});\n                } else {\n                    $tip.css({visibility: 'visible', opacity: this.options.opacity});\n                }\n            }\n        },\n        \n        hide: function() {\n            if (this.options.fade) {\n                this.tip().stop().fadeOut(function() { $(this).remove(); });\n            } else {\n                this.tip().remove();\n            }\n        },\n        \n        fixTitle: function() {\n            var $e = this.$element;\n            if ($e.attr('title') || typeof($e.attr('original-title')) != 'string') {\n                $e.attr('original-title', $e.attr('title') || '').removeAttr('title');\n            }\n        },\n        \n        getTitle: function() {\n            var title, $e = this.$element, o = this.options;\n            this.fixTitle();\n            var title, o = this.options;\n            if (typeof o.title == 'string') {\n                title = $e.attr(o.title == 'title' ? 'original-title' : o.title);\n            } else if (typeof o.title == 'function') {\n                title = o.title.call($e[0]);\n            }\n            title = ('' + title).replace(/(^\\s*|\\s*$)/, \"\");\n            return title || o.fallback;\n        },\n        \n        tip: function() {\n            if (!this.$tip) {\n                this.$tip = $('<div class=\"tipsy\"></div>').html('<div class=\"tipsy-arrow\"></div><div class=\"tipsy-inner\"></div>');\n                this.$tip.data('tipsy-pointee', this.$element[0]);\n            }\n            return this.$tip;\n        },\n        \n        validate: function() {\n            if (!this.$element[0].parentNode) {\n                this.hide();\n                this.$element = null;\n                this.options = null;\n            }\n        },\n        \n        enable: function() { this.enabled = true; },\n        disable: function() { this.enabled = false; },\n        toggleEnabled: function() { this.enabled = !this.enabled; }\n    };\n    \n    $.fn.tipsy = function(options) {\n        \n        if (options === true) {\n            return this.data('tipsy');\n        } else if (typeof options == 'string') {\n            var tipsy = this.data('tipsy');\n            if (tipsy) tipsy[options]();\n            return this;\n        }\n        \n        options = $.extend({}, $.fn.tipsy.defaults, options);\n        \n        function get(ele) {\n            var tipsy = $.data(ele, 'tipsy');\n            if (!tipsy) {\n                tipsy = new Tipsy(ele, $.fn.tipsy.elementOptions(ele, options));\n                $.data(ele, 'tipsy', tipsy);\n            }\n            return tipsy;\n        }\n        \n        function enter() {\n            var tipsy = get(this);\n            tipsy.hoverState = 'in';\n            if (options.delayIn == 0) {\n                tipsy.show();\n            } else {\n                tipsy.fixTitle();\n                setTimeout(function() { if (tipsy.hoverState == 'in') tipsy.show(); }, options.delayIn);\n            }\n        };\n        \n        function leave() {\n            var tipsy = get(this);\n            tipsy.hoverState = 'out';\n            if (options.delayOut == 0) {\n                tipsy.hide();\n            } else {\n                setTimeout(function() { if (tipsy.hoverState == 'out') tipsy.hide(); }, options.delayOut);\n            }\n        };\n        \n        if (!options.live) this.each(function() { get(this); });\n        \n        if (options.trigger != 'manual') {\n            var binder   = options.live ? 'live' : 'bind',\n                eventIn  = options.trigger == 'hover' ? 'mouseenter' : 'focus',\n                eventOut = options.trigger == 'hover' ? 'mouseleave' : 'blur';\n            this[binder](eventIn, enter)[binder](eventOut, leave);\n        }\n        \n        return this;\n        \n    };\n    \n    $.fn.tipsy.defaults = {\n        className: null,\n        delayIn: 0,\n        delayOut: 0,\n        fade: false,\n        fallback: '',\n        gravity: 'n',\n        html: false,\n        live: false,\n        offset: 0,\n        opacity: 0.8,\n        title: 'title',\n        trigger: 'hover'\n    };\n    \n    $.fn.tipsy.revalidate = function() {\n      $('.tipsy').each(function() {\n        var pointee = $.data(this, 'tipsy-pointee');\n        if (!pointee || !isElementInDOM(pointee)) {\n          $(this).remove();\n        }\n      });\n    };\n    \n    // Overwrite this method to provide options on a per-element basis.\n    // For example, you could store the gravity in a 'tipsy-gravity' attribute:\n    // return $.extend({}, options, {gravity: $(ele).attr('tipsy-gravity') || 'n' });\n    // (remember - do not modify 'options' in place!)\n    $.fn.tipsy.elementOptions = function(ele, options) {\n        return $.metadata ? $.extend({}, options, $(ele).metadata()) : options;\n    };\n    \n    $.fn.tipsy.autoNS = function() {\n        return $(this).offset().top > ($(document).scrollTop() + $(window).height() / 2) ? 's' : 'n';\n    };\n    \n    $.fn.tipsy.autoWE = function() {\n        return $(this).offset().left > ($(document).scrollLeft() + $(window).width() / 2) ? 'e' : 'w';\n    };\n    \n    /**\n     * yields a closure of the supplied parameters, producing a function that takes\n     * no arguments and is suitable for use as an autogravity function like so:\n     *\n     * @param margin (int) - distance from the viewable region edge that an\n     *        element should be before setting its tooltip's gravity to be away\n     *        from that edge.\n     * @param prefer (string, e.g. 'n', 'sw', 'w') - the direction to prefer\n     *        if there are no viewable region edges effecting the tooltip's\n     *        gravity. It will try to vary from this minimally, for example,\n     *        if 'sw' is preferred and an element is near the right viewable \n     *        region edge, but not the top edge, it will set the gravity for\n     *        that element's tooltip to be 'se', preserving the southern\n     *        component.\n     */\n     $.fn.tipsy.autoBounds = function(margin, prefer) {\n\t\treturn function() {\n\t\t\tvar dir = {ns: prefer[0], ew: (prefer.length > 1 ? prefer[1] : false)},\n\t\t\t    boundTop = $(document).scrollTop() + margin,\n\t\t\t    boundLeft = $(document).scrollLeft() + margin,\n\t\t\t    $this = $(this);\n\n\t\t\tif ($this.offset().top < boundTop) dir.ns = 'n';\n\t\t\tif ($this.offset().left < boundLeft) dir.ew = 'w';\n\t\t\tif ($(window).width() + $(document).scrollLeft() - $this.offset().left < margin) dir.ew = 'e';\n\t\t\tif ($(window).height() + $(document).scrollTop() - $this.offset().top < margin) dir.ns = 's';\n\n\t\t\treturn dir.ns + (dir.ew ? dir.ew : '');\n\t\t}\n\t};\n    \n})(jQuery);","!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.RTree=e()}}(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){\"use strict\";var rectangle=_dereq_(\"./rectangle\");var bbox=function(ar,obj){if(obj&&obj.bbox){return{leaf:obj,x:obj.bbox[0],y:obj.bbox[1],w:obj.bbox[2]-obj.bbox[0],h:obj.bbox[3]-obj.bbox[1]}}var len=ar.length;var i=0;var a=new Array(len);while(i<len){a[i]=[ar[i][0],ar[i][1]];i++}var first=a[0];len=a.length;i=1;var temp={min:[].concat(first),max:[].concat(first)};while(i<len){if(a[i][0]<temp.min[0]){temp.min[0]=a[i][0]}else if(a[i][0]>temp.max[0]){temp.max[0]=a[i][0]}if(a[i][1]<temp.min[1]){temp.min[1]=a[i][1]}else if(a[i][1]>temp.max[1]){temp.max[1]=a[i][1]}i++}var out={x:temp.min[0],y:temp.min[1],w:temp.max[0]-temp.min[0],h:temp.max[1]-temp.min[1]};if(obj){out.leaf=obj}return out};var geoJSON={};geoJSON.point=function(obj,self){return self.insertSubtree({x:obj.geometry.coordinates[0],y:obj.geometry.coordinates[1],w:0,h:0,leaf:obj},self.root)};geoJSON.multiPointLineString=function(obj,self){return self.insertSubtree(bbox(obj.geometry.coordinates,obj),self.root)};geoJSON.multiLineStringPolygon=function(obj,self){return self.insertSubtree(bbox(Array.prototype.concat.apply([],obj.geometry.coordinates),obj),self.root)};geoJSON.multiPolygon=function(obj,self){return self.insertSubtree(bbox(Array.prototype.concat.apply([],Array.prototype.concat.apply([],obj.geometry.coordinates)),obj),self.root)};geoJSON.makeRec=function(obj){return rectangle(obj.x,obj.y,obj.w,obj.h)};geoJSON.geometryCollection=function(obj,self){if(obj.bbox){return self.insertSubtree({leaf:obj,x:obj.bbox[0],y:obj.bbox[1],w:obj.bbox[2]-obj.bbox[0],h:obj.bbox[3]-obj.bbox[1]},self.root)}var geos=obj.geometry.geometries;var i=0;var len=geos.length;var temp=[];var g;while(i<len){g=geos[i];switch(g.type){case\"Point\":temp.push(geoJSON.makeRec({x:g.coordinates[0],y:g.coordinates[1],w:0,h:0}));break;case\"MultiPoint\":temp.push(geoJSON.makeRec(bbox(g.coordinates)));break;case\"LineString\":temp.push(geoJSON.makeRec(bbox(g.coordinates)));break;case\"MultiLineString\":temp.push(geoJSON.makeRec(bbox(Array.prototype.concat.apply([],g.coordinates))));break;case\"Polygon\":temp.push(geoJSON.makeRec(bbox(Array.prototype.concat.apply([],g.coordinates))));break;case\"MultiPolygon\":temp.push(geoJSON.makeRec(bbox(Array.prototype.concat.apply([],Array.prototype.concat.apply([],g.coordinates)))));break;case\"GeometryCollection\":geos=geos.concat(g.geometries);len=geos.length;break}i++}var first=temp[0];i=1;len=temp.length;while(i<len){first.expand(temp[i]);i++}return self.insertSubtree({leaf:obj,x:first.x(),y:first.y(),h:first.h(),w:first.w()},self.root)};exports.geoJSON=function(prelim){var that=this;var features,feature;if(Array.isArray(prelim)){features=prelim.slice()}else if(prelim.features&&Array.isArray(prelim.features)){features=prelim.features.slice()}else if(prelim instanceof Object){features=[prelim]}else{throw\"this isn't what we're looking for\"}var len=features.length;var i=0;while(i<len){feature=features[i];if(feature.type===\"Feature\"){switch(feature.geometry.type){case\"Point\":geoJSON.point(feature,that);break;case\"MultiPoint\":geoJSON.multiPointLineString(feature,that);break;case\"LineString\":geoJSON.multiPointLineString(feature,that);break;case\"MultiLineString\":geoJSON.multiLineStringPolygon(feature,that);break;case\"Polygon\":geoJSON.multiLineStringPolygon(feature,that);break;case\"MultiPolygon\":geoJSON.multiPolygon(feature,that);break;case\"GeometryCollection\":geoJSON.geometryCollection(feature,that);break}}i++}};exports.bbox=function(){var x1,y1,x2,y2;switch(arguments.length){case 1:x1=arguments[0][0][0];y1=arguments[0][0][1];x2=arguments[0][1][0];y2=arguments[0][1][1];break;case 2:x1=arguments[0][0];y1=arguments[0][1];x2=arguments[1][0];y2=arguments[1][1];break;case 4:x1=arguments[0];y1=arguments[1];x2=arguments[2];y2=arguments[3];break}return this.search({x:x1,y:y1,w:x2-x1,h:y2-y1})}},{\"./rectangle\":3}],2:[function(_dereq_,module,exports){\"use strict\";var RTree=_dereq_(\"./rtree\");var geojson=_dereq_(\"./geojson\");RTree.prototype.bbox=geojson.bbox;RTree.prototype.geoJSON=geojson.geoJSON;RTree.Rectangle=_dereq_(\"./rectangle\");module.exports=RTree},{\"./geojson\":1,\"./rectangle\":3,\"./rtree\":4}],3:[function(_dereq_,module,exports){\"use strict\";function Rectangle(x,y,w,h){if(!(this instanceof Rectangle)){return new Rectangle(x,y,w,h)}var x2,y2,p;if(x.x){w=x.w;h=x.h;y=x.y;if(x.w!==0&&!x.w&&x.x2){w=x.x2-x.x;h=x.y2-x.y}else{w=x.w;h=x.h}x=x.x;x2=x+w;y2=y+h;p=h+w?false:true}else{x2=x+w;y2=y+h;p=h+w?false:true}this.x1=this.x=function(){return x};this.y1=this.y=function(){return y};this.x2=function(){return x2};this.y2=function(){return y2};this.w=function(){return w};this.h=function(){return h};this.p=function(){return p};this.overlap=function(a){if(p||a.p()){return x<=a.x2()&&x2>=a.x()&&y<=a.y2()&&y2>=a.y()}return x<a.x2()&&x2>a.x()&&y<a.y2()&&y2>a.y()};this.expand=function(a){var nx,ny;var ax=a.x();var ay=a.y();var ax2=a.x2();var ay2=a.y2();if(x>ax){nx=ax}else{nx=x}if(y>ay){ny=ay}else{ny=y}if(x2>ax2){w=x2-nx}else{w=ax2-nx}if(y2>ay2){h=y2-ny}else{h=ay2-ny}x=nx;y=ny;return this}}Rectangle.overlapRectangle=function(a,b){if(a.h===0&&a.w===0||b.h===0&&b.w===0){return a.x<=b.x+b.w&&a.x+a.w>=b.x&&a.y<=b.y+b.h&&a.y+a.h>=b.y}else{return a.x<b.x+b.w&&a.x+a.w>b.x&&a.y<b.y+b.h&&a.y+a.h>b.y}};Rectangle.containsRectangle=function(a,b){return a.x+a.w<=b.x+b.w&&a.x>=b.x&&a.y+a.h<=b.y+b.h&&a.y>=b.y};Rectangle.expandRectangle=function(a,b){var nx,ny;var axw=a.x+a.w;var bxw=b.x+b.w;var ayh=a.y+a.h;var byh=b.y+b.h;if(a.x>b.x){nx=b.x}else{nx=a.x}if(a.y>b.y){ny=b.y}else{ny=a.y}if(axw>bxw){a.w=axw-nx}else{a.w=bxw-nx}if(ayh>byh){a.h=ayh-ny}else{a.h=byh-ny}a.x=nx;a.y=ny;return a};Rectangle.makeMBR=function(nodes,rect){if(!nodes.length){return{x:0,y:0,w:0,h:0}}rect=rect||{};rect.x=nodes[0].x;rect.y=nodes[0].y;rect.w=nodes[0].w;rect.h=nodes[0].h;for(var i=1,len=nodes.length;i<len;i++){Rectangle.expandRectangle(rect,nodes[i])}return rect};Rectangle.squarifiedRatio=function(l,w,fill){var lperi=(l+w)/2;var larea=l*w;var lgeo=larea/(lperi*lperi);return larea*fill/lgeo};module.exports=Rectangle},{}],4:[function(_dereq_,module,exports){\"use strict\";var rectangle=_dereq_(\"./rectangle\");function RTree(width){if(!(this instanceof RTree)){return new RTree(width)}var minWidth=3;var maxWidth=6;if(!isNaN(width)){minWidth=Math.floor(width/2);maxWidth=width}var rootTree={x:0,y:0,w:0,h:0,id:\"root\",nodes:[]};this.root=rootTree;var flatten=function(tree){var todo=tree.slice();var done=[];var current;while(todo.length){current=todo.pop();if(current.nodes){todo=todo.concat(current.nodes)}else if(current.leaf){done.push(current)}}return done};var removeSubtree=function(rect,obj,root){var hitStack=[];var countStack=[];var retArray=[];var currentDepth=1;var tree,i,ltree;if(!rect||!rectangle.overlapRectangle(rect,root)){return retArray}var retObj={x:rect.x,y:rect.y,w:rect.w,h:rect.h,target:obj};countStack.push(root.nodes.length);hitStack.push(root);while(hitStack.length>0){tree=hitStack.pop();i=countStack.pop()-1;if(\"target\"in retObj){while(i>=0){ltree=tree.nodes[i];if(rectangle.overlapRectangle(retObj,ltree)){if(retObj.target&&\"leaf\"in ltree&&ltree.leaf===retObj.target||!retObj.target&&(\"leaf\"in ltree||rectangle.containsRectangle(ltree,retObj))){if(\"nodes\"in ltree){retArray=flatten(tree.nodes.splice(i,1))}else{retArray=tree.nodes.splice(i,1)}rectangle.makeMBR(tree.nodes,tree);delete retObj.target;break}else if(\"nodes\"in ltree){currentDepth++;countStack.push(i);hitStack.push(tree);tree=ltree;i=ltree.nodes.length}}i--}}else if(\"nodes\"in retObj){tree.nodes.splice(i+1,1);if(tree.nodes.length>0){rectangle.makeMBR(tree.nodes,tree)}for(var t=0;t<retObj.nodes.length;t++){insertSubtree(retObj.nodes[t],tree)}retObj.nodes=[];if(hitStack.length===0&&tree.nodes.length<=1){retObj.nodes=searchSubtree(tree,true,retObj.nodes,tree);tree.nodes=[];hitStack.push(tree);countStack.push(1)}else if(hitStack.length>0&&tree.nodes.length<minWidth){retObj.nodes=searchSubtree(tree,true,retObj.nodes,tree);tree.nodes=[]}else{delete retObj.nodes}}else{rectangle.makeMBR(tree.nodes,tree)}currentDepth-=1}return retArray};var chooseLeafSubtree=function(rect,root){var bestChoiceIndex=-1;var bestChoiceStack=[];var bestChoiceArea;var first=true;bestChoiceStack.push(root);var nodes=root.nodes;while(first||bestChoiceIndex!==-1){if(first){first=false}else{bestChoiceStack.push(nodes[bestChoiceIndex]);nodes=nodes[bestChoiceIndex].nodes;bestChoiceIndex=-1}for(var i=nodes.length-1;i>=0;i--){var ltree=nodes[i];if(\"leaf\"in ltree){bestChoiceIndex=-1;break}var oldLRatio=rectangle.squarifiedRatio(ltree.w,ltree.h,ltree.nodes.length+1);var nw=Math.max(ltree.x+ltree.w,rect.x+rect.w)-Math.min(ltree.x,rect.x);var nh=Math.max(ltree.y+ltree.h,rect.y+rect.h)-Math.min(ltree.y,rect.y);var lratio=rectangle.squarifiedRatio(nw,nh,ltree.nodes.length+2);if(bestChoiceIndex<0||Math.abs(lratio-oldLRatio)<bestChoiceArea){bestChoiceArea=Math.abs(lratio-oldLRatio);bestChoiceIndex=i}}}return bestChoiceStack};var linearSplit=function(nodes){var n=pickLinear(nodes);while(nodes.length>0){pickNext(nodes,n[0],n[1])}return n};var pickNext=function(nodes,a,b){var areaA=rectangle.squarifiedRatio(a.w,a.h,a.nodes.length+1);var areaB=rectangle.squarifiedRatio(b.w,b.h,b.nodes.length+1);var highAreaDelta;var highAreaNode;var lowestGrowthGroup;for(var i=nodes.length-1;i>=0;i--){var l=nodes[i];var newAreaA={};newAreaA.x=Math.min(a.x,l.x);newAreaA.y=Math.min(a.y,l.y);newAreaA.w=Math.max(a.x+a.w,l.x+l.w)-newAreaA.x;newAreaA.h=Math.max(a.y+a.h,l.y+l.h)-newAreaA.y;var changeNewAreaA=Math.abs(rectangle.squarifiedRatio(newAreaA.w,newAreaA.h,a.nodes.length+2)-areaA);var newAreaB={};newAreaB.x=Math.min(b.x,l.x);newAreaB.y=Math.min(b.y,l.y);newAreaB.w=Math.max(b.x+b.w,l.x+l.w)-newAreaB.x;newAreaB.h=Math.max(b.y+b.h,l.y+l.h)-newAreaB.y;var changeNewAreaB=Math.abs(rectangle.squarifiedRatio(newAreaB.w,newAreaB.h,b.nodes.length+2)-areaB);if(!highAreaNode||!highAreaDelta||Math.abs(changeNewAreaB-changeNewAreaA)<highAreaDelta){highAreaNode=i;highAreaDelta=Math.abs(changeNewAreaB-changeNewAreaA);lowestGrowthGroup=changeNewAreaB<changeNewAreaA?b:a}}var tempNode=nodes.splice(highAreaNode,1)[0];if(a.nodes.length+nodes.length+1<=minWidth){a.nodes.push(tempNode);rectangle.expandRectangle(a,tempNode)}else if(b.nodes.length+nodes.length+1<=minWidth){b.nodes.push(tempNode);rectangle.expandRectangle(b,tempNode)}else{lowestGrowthGroup.nodes.push(tempNode);rectangle.expandRectangle(lowestGrowthGroup,tempNode)}};var pickLinear=function(nodes){var lowestHighX=nodes.length-1;var highestLowX=0;var lowestHighY=nodes.length-1;var highestLowY=0;var t1,t2;for(var i=nodes.length-2;i>=0;i--){var l=nodes[i];if(l.x>nodes[highestLowX].x){highestLowX=i}else if(l.x+l.w<nodes[lowestHighX].x+nodes[lowestHighX].w){lowestHighX=i}if(l.y>nodes[highestLowY].y){highestLowY=i}else if(l.y+l.h<nodes[lowestHighY].y+nodes[lowestHighY].h){lowestHighY=i}}var dx=Math.abs(nodes[lowestHighX].x+nodes[lowestHighX].w-nodes[highestLowX].x);var dy=Math.abs(nodes[lowestHighY].y+nodes[lowestHighY].h-nodes[highestLowY].y);if(dx>dy){if(lowestHighX>highestLowX){t1=nodes.splice(lowestHighX,1)[0];t2=nodes.splice(highestLowX,1)[0]}else{t2=nodes.splice(highestLowX,1)[0];t1=nodes.splice(lowestHighX,1)[0]}}else{if(lowestHighY>highestLowY){t1=nodes.splice(lowestHighY,1)[0];t2=nodes.splice(highestLowY,1)[0]}else{t2=nodes.splice(highestLowY,1)[0];t1=nodes.splice(lowestHighY,1)[0]}}return[{x:t1.x,y:t1.y,w:t1.w,h:t1.h,nodes:[t1]},{x:t2.x,y:t2.y,w:t2.w,h:t2.h,nodes:[t2]}]};var attachData=function(node,moreTree){node.nodes=moreTree.nodes;node.x=moreTree.x;node.y=moreTree.y;node.w=moreTree.w;node.h=moreTree.h;return node};var searchSubtree=function(rect,returnNode,returnArray,root){var hitStack=[];if(!rectangle.overlapRectangle(rect,root)){return returnArray}hitStack.push(root.nodes);while(hitStack.length>0){var nodes=hitStack.pop();for(var i=nodes.length-1;i>=0;i--){var ltree=nodes[i];if(rectangle.overlapRectangle(rect,ltree)){if(\"nodes\"in ltree){hitStack.push(ltree.nodes)}else if(\"leaf\"in ltree){if(!returnNode){returnArray.push(ltree.leaf)}else{returnArray.push(ltree)}}}}}return returnArray};var insertSubtree=function(node,root){var bc;if(root.nodes.length===0){root.x=node.x;root.y=node.y;root.w=node.w;root.h=node.h;root.nodes.push(node);return}var treeStack=chooseLeafSubtree(node,root);var retObj=node;var pbc;while(treeStack.length>0){if(bc&&\"nodes\"in bc&&bc.nodes.length===0){pbc=bc;bc=treeStack.pop();for(var t=0;t<bc.nodes.length;t++){if(bc.nodes[t]===pbc||bc.nodes[t].nodes.length===0){bc.nodes.splice(t,1);break}}}else{bc=treeStack.pop()}if(\"leaf\"in retObj||\"nodes\"in retObj||Array.isArray(retObj)){if(Array.isArray(retObj)){for(var ai=0;ai<retObj.length;ai++){rectangle.expandRectangle(bc,retObj[ai])}bc.nodes=bc.nodes.concat(retObj)}else{rectangle.expandRectangle(bc,retObj);bc.nodes.push(retObj)}if(bc.nodes.length<=maxWidth){retObj={x:bc.x,y:bc.y,w:bc.w,h:bc.h}}else{var a=linearSplit(bc.nodes);retObj=a;if(treeStack.length<1){bc.nodes.push(a[0]);treeStack.push(bc);retObj=a[1]}}}else{rectangle.expandRectangle(bc,retObj);retObj={x:bc.x,y:bc.y,w:bc.w,h:bc.h}}}};this.insertSubtree=insertSubtree;this.getTree=function(){return rootTree};this.setTree=function(newTree,where){if(!where){where=rootTree}return attachData(where,newTree)};this.search=function(rect,returnNode,returnArray){returnArray=returnArray||[];return searchSubtree(rect,returnNode,returnArray,rootTree)};var removeArea=function(rect){var numberDeleted=1,retArray=[],deleted;while(numberDeleted>0){deleted=removeSubtree(rect,false,rootTree);numberDeleted=deleted.length;retArray=retArray.concat(deleted)}return retArray};var removeObj=function(rect,obj){var retArray=removeSubtree(rect,obj,rootTree);return retArray};this.remove=function(rect,obj){if(!obj||typeof obj===\"function\"){return removeArea(rect,obj)}else{return removeObj(rect,obj)}};this.insert=function(rect,obj){var retArray=insertSubtree({x:rect.x,y:rect.y,w:rect.w,h:rect.h,leaf:obj},rootTree);return retArray}}RTree.prototype.toJSON=function(printing){return JSON.stringify(this.root,false,printing)};RTree.fromJSON=function(json){var rt=new RTree;rt.setTree(JSON.parse(json));return rt};module.exports=RTree;if(typeof Array.isArray!==\"function\"){Array.isArray=function(a){return typeof a===\"object\"&&{}.toString.call(a)===\"[object Array]\"}}},{\"./rectangle\":3}]},{},[2])(2)});","Genoverse.Plugins.controlPanel = function () {\n  var genoverse = this;\n\n  this.controls = [\n    // Scroll left/right\n    {\n      name    : 'Scroll left and right by pressing and holding these buttons',\n      buttons : [{\n        name    : 'Scroll left',\n        icon    : '<i class=\"fa fa-chevron-left\"></i>',\n        'class' : 'gv-scroll-left'\n      }, {\n        name    : 'Scroll right',\n        icon    : '<i class=\"fa fa-chevron-right\"></i>',\n        'class' : 'gv-scroll-right'\n      }],\n      init: function (browser) {\n        var el = $(this);\n\n        el.find('.gv-scroll-left, .gv-scroll-right').on({\n          mousedown : function () { browser.startDragScroll(); },\n          mouseup   : function () { browser.stopDragScroll();  }\n        });\n\n        el.find('.gv-scroll-left').mousehold(50, function () {\n          browser.move(browser.scrollDelta);\n        });\n\n        el.find('.gv-scroll-right').mousehold(50, function () {\n          browser.move(-browser.scrollDelta);\n        });\n      }\n    },\n\n    // Zoom in/out\n    {\n      name    : 'Zoom-in and zoom-out',\n      buttons : [{\n        name    : 'Zoom in',\n        icon    : '<i class=\"fa fa-search-plus\"></i>',\n        'class' : 'gv-zoom-in',\n        action  : function (browser) { browser.zoomIn(); }\n      }, {\n        name    : 'Zoom out',\n        icon    : '<i class=\"fa fa-search-minus\"></i>',\n        'class' : 'gv-zoom-out',\n        action  : function (browser) { browser.zoomOut(); }\n      }]\n    },\n\n    // Toogle drag action\n    {\n      name    : 'Toggle your mouse drag action between scroll left/right and select region',\n      buttons : [{\n        name    : 'Mouse drag action to scroll the browser left or right',\n        icon    : '<i class=\"fa fa-arrows-h\"></i>',\n        'class' : 'gv-drag-scroll',\n        action  : function (browser) {\n          browser.setDragAction('scroll');\n          $(this).addClass('gv-active').siblings().removeClass('gv-active');\n        }\n      }, {\n        name    : 'Mouse drag action to select a region',\n        icon    : '<i></i>',\n        'class' : 'gv-drag-select',\n        action  : function (browser) {\n          browser.setDragAction('select');\n          $(this).addClass('gv-active').siblings().removeClass('gv-active');\n        }\n      }],\n      init: function (browser) {\n        $(this).find('.gv-drag-' + browser.dragAction).addClass('gv-active').siblings().removeClass('gv-active');\n      }\n    },\n\n    // Toogle wheel action\n    {\n      name    : 'Toggle your mouse wheel action between zoom in/out and default page scroll',\n      buttons : [{\n        name    : 'Mouse wheel action to scroll the page up and down',\n        icon    : '<i class=\"fa fa-arrows-v\"></i>',\n        'class' : 'gv-wheel-off',\n        action  : function (browser) {\n          browser.setWheelAction('off');\n          $(this).addClass('gv-active').siblings().removeClass('gv-active');\n        }\n      }, {\n        name    : 'Mouse wheel to zoom in and out',\n        icon    : '&#177;',\n        'class' : 'gv-wheel-zoom',\n        action  : function (browser) {\n          browser.setWheelAction('zoom');\n          $(this).addClass('gv-active').siblings().removeClass('gv-active');\n        }\n      }],\n      init: function (browser) {\n        $(this).find('.gv-wheel-' + browser.wheelAction).addClass('gv-active').siblings().removeClass('gv-active');\n      }\n    }\n  ];\n\n  if (this.saveable) {\n    this.controls.push({\n      icon   : '<i class=\"fa fa-undo\"></i>',\n      name   : 'Reset tracks and configuration',\n      action : function (browser) { browser.resetConfig(); }\n    });\n  }\n\n  this.on({\n    beforeInit: function () {\n      var browser = this;\n\n      if (!this.tracksLibrary) {\n        this.tracksLibrary = $.grep(this.tracks, function (track) { return track.prototype.name; });\n      }\n\n      var panel = $(\n        '<table cellspacing=0 cellpadding=0 class=\"gv\">' +\n        '  <tr>' +\n        '    <td class=\"gv-panel gv-panel-left\"></td>' +\n        '    <td class=\"gv-canvas-container\"></td>' +\n        '    <td class=\"gv-panel gv-panel-right\"></td>' +\n        '  </tr>' +\n        '</table>'\n      ).appendTo(this.container).find('.gv-panel-right');\n\n      this.controlPanel   = panel;\n      this.superContainer = this.container;\n      this.container      = $('.gv-canvas-container', this.container);\n\n      for (var i = 0; i < browser.controls.length; i++) {\n        (function (control) {\n          var buttonSet = $('<div class=\"gv-button-set\">').attr('title', control.name).appendTo(browser.superContainer.find('.gv-panel-right'));\n          var buttons   = control.buttons || [ control ];\n          var el;\n\n          $.each(buttons, function (i, button) {\n            var el = $('<button>' + button.icon + '</button>').addClass(button['class']).attr('title', button.name).appendTo(buttonSet);\n\n            if (button.action) {\n              el.on('click', function () {\n                button.action.call(this, browser);\n              });\n            }\n\n            if (button.init && button !== control) {\n              button.init.call(el[0], browser);\n            }\n          });\n\n          if (control.init) {\n            control.init.call(buttonSet, browser);\n          }\n        })(browser.controls[i]);\n      }\n\n      this.superContainer.width(this.width);\n\n      this.width -= panel.width();\n\n      // ESC key to toggle crosshair select to drag mode and close menus\n      $(document).on('keydown', function (e) {\n        if (e.keyCode === 27) {\n          if (panel.find('button.gv-drag-select').hasClass('gv-active')) {\n            panel.find('button.gv-drag-scroll').trigger('click');\n          }\n\n          $('.gv-menu .gv-close').trigger('click');\n        }\n      });\n    },\n\n    afterInit: function () {\n      var browser      = this;\n      var tracksButton = $('<button title=\"Tracks menu\"><i class=\"fa fa-navicon\"></i> Tracks</button>').on('click', function () {\n        var button = this;\n\n        function getTrackTags(track, tags) {\n          if (track.constructor && track.constructor.ancestor && track.constructor.ancestor.prototype) {\n            tags = getTrackTags(track.constructor.ancestor.prototype, tags.concat(track.constructor.ancestor.prototype.tags || []));\n          }\n\n          return tags;\n        }\n\n        if ($(this).hasClass('gv-active')) {\n          $('.gv-menu.gv-tracks-menu .gv-close').trigger('click');\n          $(this).removeClass('gv-active');\n        } else {\n          var menu = $(this).data('menu');\n\n          if (menu) {\n            menu.show();\n          } else {\n            menu = browser.makeMenu({\n              'Currently enabled tracks:'             : 'Available tracks:',\n              '<div class=\"gv-current-tracks\"></div>' : '<input placeholder=\"Search\"><div class=\"gv-available-tracks\"></div>'\n            }).addClass('gv-tracks-menu');\n\n            menu.css({ marginLeft: menu.width() / -2 });\n\n            $('input[placeholder=Search]', menu).on('keyup', function () {\n              var str = this.value.toLowerCase();\n\n              $('.gv-tracks-library-item', menu).each(function () {\n                var track = $(this).data('track');\n                var match = false;\n\n                if (track.name && track.name.toLowerCase().indexOf(str) >= 0) {\n                  match = true;\n                } else {\n                  var tags = getTrackTags(track, []).concat(track.tags || []);\n\n                  for (var i = 0; i < tags.length; i++) {\n                    if (tags[i].toLowerCase().indexOf(str) >= 0) {\n                      match = true;\n                      break;\n                    }\n                  }\n                }\n\n                $(this)[match ? 'show' : 'hide']();\n              });\n            });\n\n            $('.gv-close', menu).on('click', function () {\n              $(button).removeClass('gv-active');\n            });\n\n            var availableTracks = $('.gv-available-tracks', menu);\n            var currentTracks   = $('.gv-current-tracks',   menu).data({\n              reload     : function () { $(this).empty().data('listTracks')(); },\n              listTracks : function () {\n                for (var i = 0; i < browser.tracks.length; i++) {\n                  if (browser.tracks[i].name && browser.tracks[i].removable !== false && !browser.tracks[i].parentTrack) {\n                    (function (track) {\n                      $('<div>')\n                        .append($('<i class=\"gv-remove-track gv-menu-button fa fa-times-circle\">').on('click', function () { track.remove(); }))\n                        .append('<span>' + track.name + '</span>')\n                        .appendTo(currentTracks)\n                        .data('track', track)\n                        .addClass(track.unsortable ? 'gv-unsortable' : '');\n                    })(browser.tracks[i]);\n                  }\n                }\n              }\n            }).sortable({\n              items  : 'div:not(.gv-unsortable)',\n              cursor : 'move',\n              axis   : 'y',\n              handle : 'span',\n              update : $.proxy(browser.updateTrackOrder, browser)\n            });\n\n            currentTracks.data('listTracks')();\n\n            if (browser.tracksLibrary && browser.tracksLibrary.length) {\n              var tracksLibrary = $.map(browser.tracksLibrary, function (track) {\n                return track.prototype.name && track.prototype.removable !== false ? [[ track.prototype.name.toLowerCase(), track ]] : undefined;\n              }).sort(function (a, b) { return a[0] > b[0] ? 1 : -1; });\n\n              for (var i = 0; i < tracksLibrary.length; i++) {\n                (function (track) {\n                  $('<div class=\"gv-tracks-library-item\">').append(\n                    $('<i class=\"gv-add-track gv-menu-button fa fa-plus-circle\"> ').on('click', function () {\n                      var sortableTracks = browser.tracks.filter(function (t) { return !(t.fixedOrder || t.unsortable); });\n\n                      browser.trackIds = browser.trackIds || {};\n                      browser.trackIds[track.prototype.id] = browser.trackIds[track.prototype.id] || 1;\n\n                      browser.addTrack(track.extend({ id: track.prototype.id + (browser.tracksById[track.prototype.id] ? browser.trackIds[track.prototype.id]++ : '') }));\n                    })\n                  ).append('<span>' + track.prototype.name + '</span>').appendTo(availableTracks).data('track', track.prototype);\n                })(tracksLibrary[i][1]);\n              }\n            }\n\n            $(this).data('menu', menu);\n          }\n\n          $(this).addClass('gv-active');\n        }\n      });\n\n      this.labelContainer.prepend(\n        $('<li class=\"gv-unsortable\">').append(\n          $('<div class=\"gv-button-set\" title=\"Tracks menu\">').append(tracksButton)\n        )\n      );\n    },\n\n    afterAddDomElements: function () {\n      this.wrapper.after('<div class=\"gv-powered-by\">Powered by <a target=\"_blank\" href=\"http://genoverse.org\">Genoverse</a></div>');\n      this.superContainer.find('.gv-panel-left').append(this.labelContainer);\n    },\n\n    'afterAddTracks afterRemoveTracks': function () {\n      var currentTracks = this.superContainer.find('.gv-tracks-menu .gv-current-tracks');\n\n      if (currentTracks.length) {\n        currentTracks.data('reload').call(currentTracks);\n      }\n    }\n  });\n};\n\nGenoverse.Plugins.controlPanel.requires = 'karyotype';\n","Genoverse.Plugins.fileDrop = function () {\n  this.on('afterInit', function () {\n    var browser = this;\n    var wrapper = this.wrapper;\n\n    $(window).on('dragenter', function (e) {\n      var dataTransfer = e.originalEvent.dataTransfer;\n\n      if (dataTransfer && dataTransfer.types && (dataTransfer.types[0] === 'Files' || dataTransfer.types[1] === 'Files' || dataTransfer.types[2] === 'Files') && !$('.gv-file-drop-total-overlay').length) {\n        var fileDropDiv      = $('<div class=\"gv-file-drop\">').appendTo(wrapper);\n        var totalDropOverlay = $('<div class=\"gv-file-drop-total-overlay\">').prependTo('body');\n\n        var dragleave = function () {\n          fileDropDiv.remove();\n          totalDropOverlay.remove();\n        };\n\n        totalDropOverlay.on('dragenter', function (e) { e.preventDefault(); e.stopPropagation(); });\n        totalDropOverlay.on('dragover',  function (e) { e.preventDefault(); e.stopPropagation(); });\n        totalDropOverlay.on('dragleave', dragleave);\n        totalDropOverlay.on('drop', function (e) {\n          dragleave();\n          e.preventDefault();\n          e.stopPropagation();\n\n          // Sort in order to ensure that .bam files are before their .bam.bai files\n          var files = $.map(e.originalEvent.dataTransfer.files, function (f) { return f; }).sort(function (a, b) { return a.name < b.name ? -1 : 1 });\n\n          for (var i = 0; i < files.length; i++) {\n            var file  = files[i];\n            var parts = file.name.split('.').reverse();\n            var gz    = parts[0] === 'gz';\n            var ext   = parts[gz ? 1 : 0];\n            var track = Genoverse.Track.File[ext.toUpperCase()];\n            var indexFile;\n\n            if (typeof track === 'undefined') {\n              return;\n            }\n\n            if (track.prototype.indexExt && (files[i + 1] || {}).name === file.name + track.prototype.indexExt) {\n              indexFile = files[++i];\n            }\n\n            track = track.extend({\n              name      : file.name,\n              info      : 'Local file `' + file.name + '`, size: ' + file.size + ' bytes',\n              isLocal   : true,\n              dataFile  : file,\n              indexFile : indexFile,\n              gz        : gz\n            });\n\n            browser.addTrack(track, browser.tracks.length - 1);\n          }\n\n          return false;\n        });\n      }\n    });\n  });\n};\n","Genoverse.Plugins.focusRegion = function () {\n  this.controls.push({\n    icon    : '<i class=\"fa fa-map-marker\"></i>',\n    'class' : 'gv-button-large',\n    name    : 'Reset focus to ' + (this.focusRegion && this.focusRegion.name ? this.focusRegion.name : this.chr + ':' + this.start + '-' + this.end),\n    action  : function (browser) { browser.moveTo(browser.focusRegion.chr, browser.focusRegion.start, browser.focusRegion.end, true); },\n    init    : function (browser) { browser.focusRegion = browser.focusRegion || { chr: browser.chr, start: browser.start, end: browser.end }; }\n  });\n};\n\nGenoverse.Plugins.focusRegion.requires = 'controlPanel';\nGenoverse.Plugins.focusRegion.noCSS    = true;\n","Genoverse.Plugins.fullscreen = function () {\n  var browser     = this;\n  var supported   = true;\n  var eventName   = 'fullscreenchange';  // All the browsers have different names\n  var elemName    = 'fullscreenElement'; // ... even the capitalisation varies!\n  var requestName = 'requestFullscreen';\n  var cancelName  = 'exitFullscreen';\n\n  if (document.onmsfullscreenchange || document.onmsfullscreenchange === null) {\n    // We need the IE11 version of this to work; IE9-10 have the actions but not the events.\n    // The key must be present, i.e. value may be null but it must not return undefined\n    eventName   = 'MSFullscreenChange';\n    elemName    = 'msFullscreenElement';\n    cancelName  = 'msExitFullscreen';\n    requestName = 'msRequestFullscreen';\n  } else if (document.body.mozRequestFullScreen) {\n    eventName   = 'mozfullscreenchange';\n    elemName    = 'mozFullScreenElement';\n    cancelName  = 'mozCancelFullScreen';\n    requestName = 'mozRequestFullScreen';\n  } else if (document.body.webkitRequestFullscreen) {\n    eventName   = 'webkitfullscreenchange';\n    elemName    = 'webkitFullscreenElement';\n    cancelName  = 'webkitCancelFullScreen';\n    requestName = 'webkitRequestFullscreen';\n  } else if (!document.onfullscreenchange) {\n    supported = false;\n  }\n\n  browser.fullscreenVars = {\n    eventName   : eventName,\n    elemName    : elemName,\n    cancelName  : cancelName,\n    requestName : requestName,\n\n    enterEvent: function (browser) {\n      browser.preFullscreenWidth = browser.superContainer.width();\n      browser.superContainer.addClass('gv-fullscreen');\n      browser.setWidth(window.innerWidth);\n      browser.controlPanel.find('.gv-fullscreen-button .fa').removeClass('fa-expand').addClass('fa-compress');\n    },\n\n    exitEvent: function (browser) {\n      if (browser.superContainer.hasClass('gv-fullscreen')) {\n        browser.superContainer.removeClass('gv-fullscreen');\n        browser.setWidth(browser.preFullscreenWidth);\n        browser.controlPanel.find('.gv-fullscreen-button .fa').removeClass('fa-compress').addClass('fa-expand');\n      }\n    },\n\n    eventListener: function () {\n      if (!browser.superContainer.is(document[browser.fullscreenVars.elemName])) {\n        browser.fullscreenVars.exitEvent(browser);\n        document.removeEventListener(browser.fullscreenVars.eventName, browser.fullscreenVars.eventListener);\n      }\n    }\n  };\n\n  if (supported) {\n    browser.controls.push({\n      icon    : '<i class=\"fa fa-expand\"></i>',\n      'class' : 'gv-fullscreen-button',\n      name    : 'Toggle fullscreen view',\n      action  : function (browser) {\n        if (browser.superContainer.hasClass('gv-fullscreen')) {\n          document[browser.fullscreenVars.cancelName]();\n        } else {\n          document.addEventListener(browser.fullscreenVars.eventName, browser.fullscreenVars.eventListener);\n          browser.superContainer[0][browser.fullscreenVars.requestName]();\n          browser.fullscreenVars.enterEvent(browser);\n        }\n      }\n    });\n  }\n};\n\nGenoverse.Plugins.fullscreen.requires = 'controlPanel';\n","Genoverse.Plugins.karyotype = function () {\n  function createKaryotype() {\n    var chromosome = $('<div class=\"gv-chromosome\">');\n    var container  = $('<div class=\"gv-karyotype-container\">').html(chromosome).insertBefore(this.wrapper);\n\n    this.karyotype = new Genoverse({\n      parent    : this,\n      container : chromosome,\n      width     : chromosome.width(),\n      genome    : this.genome,\n      chr       : this.chr,\n      start     : 1,\n      end       : this.chromosomeSize,\n      isStatic  : true,\n      tracks    : [\n        Genoverse.Track.Chromosome.extend({\n          name          : 'Chr ' + this.chr,\n          height        : 20,\n          featureHeight : 20,\n          border        : false,\n          legend        : false,\n          unsortable    : true,\n\n          click: function (e) {\n            var offset = this.container.parent().offset().left;\n            var x      = e.pageX - offset;\n            var f      = this.featurePositions.search({ x: x, y: 1, w: 1, h: 1 })[0];\n\n            if (f) {\n              if (e.type === 'mouseup') {\n                if (!this.browser.parent.isStatic) {\n                  this.browser.parent.moveTo(f.chr, f.start, f.end, true);\n                }\n              } else if (this.hoverFeature !== f && !this.browser.hideTooltip) {\n                this.container.tipsy('hide');\n\n                if (f.label) {\n                  var left = offset + f.position[this.scale].start + f.position[this.scale].width / 2;\n                  this.container.attr('title', f.label[0]).tipsy({ trigger: 'manual', container: 'body' }).tipsy('show').data('tipsy').$tip.css('left', function () { return left - $(this).width() / 2; });\n                }\n\n                this.hoverFeature = f;\n              }\n            }\n          },\n\n          addUserEventHandlers: function () {\n            var track = this;\n\n            this.base();\n\n            this.container.on({\n              mousemove : function (e) { track.click(e); },\n              mouseout  : function (e) {\n                if (track.browser.viewPoint.is(e.relatedTarget) || track.browser.viewPoint.find(e.relatedTarget).length) {\n                  return true;\n                }\n\n                track.container.tipsy('hide');\n                track.hoverFeature = false;\n              }\n            }, '.gv-image-container');\n\n            // Don't allow zooming in and out on the karyotype image\n            this.container.on('mousewheel', '.gv-image-container, .gv-selector', function (e) {\n              e.stopPropagation();\n            });\n          },\n\n          afterSetName: function () {\n            this.label.css('lineHeight', this.label.height() + 'px');\n          }\n        })\n      ],\n\n      addUserEventHandlers: $.noop,\n\n      afterInit: function () {\n        this.updatePosition();\n        this.viewPoint.fadeIn();\n      },\n\n      afterAddTracks: function () {\n        this.track = this.tracks[0];\n      },\n\n      afterAddDomElements: function () {\n        var karyotype = this;\n        var parent    = this.parent;\n\n        function hideTooltip() {\n          karyotype.hideTooltip = true;\n          karyotype.track.prop('container').tipsy('hide');\n        }\n\n        function updateLocation(e, ui) {\n          karyotype.hideTooltip = false;\n\n          if (e.type === 'resizestop') {\n            var axis = $(this).data('ui-resizable').axis;\n\n            if ((axis === 'e' && parent.end === karyotype.chromosomeSize) || (axis === 'w' && parent.start === 1)) {\n              return; // Don't change location if the position didn't change (dragging off the right or left edges)\n            }\n          }\n\n          var scale = karyotype.chromosomeSize / karyotype.width;\n          var start = Math.max(Math.floor(ui.position.left * scale), 1);\n          var end   = e.type === 'dragstop' ? start + parent.length - 1 : Math.floor(ui.helper.outerWidth(true) * scale) + start;\n\n          parent.moveTo(karyotype.chr, start, end, true, e.type === 'dragstop');\n        }\n\n        if (parent.karyotypeLabel === false) {\n          this.labelContainer.remove();\n          this.labelContainer = $();\n          container.addClass('gv-no-label');\n        }\n\n        this.viewPoint = $('<div class=\"gv-karyotype-viewpoint-wrapper\"><div class=\"gv-karyotype-viewpoint\"></div></div>').appendTo(container).children().on({\n          mousemove : function (e) { karyotype.track.controller.click(e); },\n          mouseout  : function (e) {\n            var el = $(e.relatedTarget);\n\n            if (karyotype.viewPoint.is(el) || karyotype.viewPoint.find(el).length || (el.prop('nodeName') === 'IMG' && el.parent().is(karyotype.track.prop('imgContainers')[0]))) {\n              return true;\n            }\n\n            karyotype.track.prop('container').tipsy('hide');\n            karyotype.track.prop('hoverFeature', false);\n          }\n        });\n\n        if (!parent.isStatic) {\n          this.viewPoint.draggable({\n            axis        : 'x',\n            containment : this.wrapper,\n            start       : hideTooltip,\n            stop        : updateLocation\n          }).resizable({\n            handles     : 'e, w',\n            containment : 'parent',\n            start       : hideTooltip,\n            stop        : updateLocation,\n            resize      : function (e, ui) {\n              ui.element.css('left', Math.max(0, ui.position.left));\n\n              if (ui.position.left > 0) {\n                ui.element.width(Math.min(ui.size.width, ui.element.parent().width() - ui.position.left));\n              } else {\n                ui.element.width(ui.size.width + ui.position.left);\n              }\n            }\n          });\n        }\n      },\n\n      updatePosition: function () {\n        var left  =  this.parent.start * this.scale;\n        var width = (this.parent.end   * this.scale) - left;\n\n        this.viewPoint.css({ left: left, width: width });\n      }\n    });\n\n    if (!this.loadedPlugins.controlPanel) {\n      $('<li class=\"gv-unsortable\">').height(function (i, h) {\n        return h + container.height();\n      }).prependTo(this.labelContainer);\n    }\n  }\n\n  function recreateKaryotype() {\n    var container = this.karyotype.container.parent();\n\n    this.karyotype.destroy();\n    container.remove();\n\n    createKaryotype.call(this);\n  }\n\n  this.on({\n    afterInit: createKaryotype,\n\n    afterSetRange: function () {\n      if (this.karyotype) {\n        this.karyotype.updatePosition();\n      }\n    },\n\n    afterSetWidth: recreateKaryotype,\n\n    afterMoveTo: function (chr) {\n      if (this.karyotype && this.karyotype.chr !== chr) {\n        recreateKaryotype.call(this);\n      }\n    }\n  });\n};\n","Genoverse.Plugins.resizer = function () {\n  this.on('afterSetMVC', 'tracks', function () {\n    if (this.prop('resizable') !== true) {\n      return;\n    }\n\n    var track      = this;\n    var controller = this.controller;\n    var resizer    = this.prop('resizer');\n    var height     = this.prop('height');\n\n    if (!resizer) {\n      resizer = this.prop('resizer', $('<div class=\"gv-resizer gv-static\"><div class=\"gv-handle\"></div></div>').appendTo(track.prop('container')).draggable({\n        axis  : 'y',\n        start : function () { $('body').addClass('gv-dragging'); },\n        stop  : function (e, ui) {\n          $('body').removeClass('gv-dragging');\n          controller.resize(track.prop('height') + ui.position.top - ui.originalPosition.top, true);\n          $(this).css({ top: 'auto', bottom: 0 }); // returns the resizer to the bottom of the container - needed when the track is resized to 0\n        }\n      }).on('click', function () {\n        var h = track.prop('fullVisibleHeight');\n\n        if (h) {\n          controller.resize(h, true);\n        }\n      }));\n    }\n\n    resizer.css({ width: this.width, left: 0 })[this.prop('autoHeight') ? 'hide' : 'show']();\n\n    if (!this.prop('autoHeight') && height - this.prop('margin') === this.prop('featureHeight')) {\n      controller.resize(height + resizer.height());\n      this.prop('initialHeight', this.prop('height'));\n    }\n  });\n\n  this.on('afterToggleExpander', 'tracks', function () {\n    var resizer = this.prop('resizer');\n\n    if (resizer) {\n      resizer[this.expander && this.expander.is(':visible') ? 'addClass' : 'removeClass']('gv-resizer-expander');\n    }\n  });\n};","// tipsy, facebook style tooltips for jquery\n// version 1.0.0a\n// (c) 2008-2010 jason frame [jason@onehackoranother.com]\n// released under the MIT license\n\nGenoverse.Plugins.tooltips = function () {\n  var browser = this;\n\n  function toggleTooltips(browser, tooltips, action) {\n    var offset = browser.superContainer.offset();\n\n    tooltips = tooltips || browser.superContainer.find('.gv-tooltip');\n    action   = action   || $(this).toggleClass('gv-active').hasClass('gv-active') ? 'show' : 'hide';\n\n    tooltips.each(function () {\n      $(this).tipsy(action).data('tipsy').$tip.appendTo(browser.superContainer).css({ marginTop: -offset.top, marginLeft: -offset.left });\n    });\n  }\n\n  function updateTooltips() {\n    var tooltips = $();\n\n    $.each([\n      [ browser.labelContainer.find('.gv-handle'), { gravity: 'w', fade: true, trigger: 'manual', fallback: 'Reorder tracks by dragging this handle' }],\n      [ browser.container.find('.gv-resizer'),     { gravity: 'n', fade: true, trigger: 'manual', fallback: 'Resize track by dragging this handle'   }]\n    ], function () {\n      var el = this[0].first();\n\n      if (!el.hasClass('gv-tooltip')) {\n        this[0].filter('.gv-tooltip').removeClass('gv-tooltip').tipsy('hide').removeData('tipsy');\n        el.tipsy(this[1]).addClass('gv-tooltip');\n      }\n\n      tooltips = tooltips.add(el);\n    });\n\n    if (browser.controlPanel.find('.gv-tooltips').hasClass('gv-active')) {\n      toggleTooltips(browser, tooltips, 'show');\n    }\n\n    return tooltips;\n  }\n\n  this.controls.push({\n    icon    : '<i class=\"fa fa-info-circle\"></i>',\n    'class' : 'gv-tooltips',\n    name    : 'Tooltips',\n    action  : toggleTooltips\n  });\n\n  this.on('afterInit', function () {\n    this.superContainer.find('.gv-panel-left  .gv-button-set[title]').tipsy({ gravity: 'w', fade: true, trigger: 'manual' }).addClass('gv-tooltip');\n    this.superContainer.find('.gv-panel-right .gv-button-set[title]').tipsy({ gravity: 'e', fade: true, trigger: 'manual' }).addClass('gv-tooltip');\n\n    // In order to force placement of this tooltip to be inside the superContainer boundaries, and just below the karyotype, create a hidden element, positioned where we want the tooltip to appear\n    $('<i class=\"gv-wrapper-tooltip\">').prependTo(this.wrapper).tipsy({\n      gravity  : 's',\n      fade     : true,\n      trigger  : 'manual',\n      fallback : 'Scroll left and right by dragging with your mouse, click on any feature in any track for more info'\n    }).addClass('gv-tooltip');\n\n    updateTooltips();\n  });\n\n  this.on('beforeSetWidth', function () {\n    this.controlPanel.find('.gv-tooltips.gv-active').trigger('click');\n  });\n\n  this.on('afterSortTracks', function () {\n    updateTooltips();\n  });\n\n  this.on('afterResize', 'tracks', function () {\n    updateTooltips();\n  });\n};\n\nGenoverse.Plugins.tooltips.requires = 'controlPanel';\n","Genoverse.Plugins.trackControls = function () {\n  var defaultControls = [\n    $('<a title=\"More info\" class=\"fa fa-info-circle\">').on('click', function () {\n      var track = $(this).data('track');\n      var menu  = track.prop('menus').filter('.gv-track-info');\n\n      if (!menu.length) {\n        menu = { title : track.name };\n        menu[track.prop('info') || ''] = '';\n\n        menu = track.prop('menus', track.prop('menus').add(track.browser.makeMenu(menu).addClass('gv-track-info')));\n      }\n\n      menu.show().position({ of: track.prop('container'), at: 'center top', my: 'center top', collision: 'none' });\n    }),\n\n    $([\n      '<a class=\"gv-height-toggle\">',\n        '<i class=\"fa fa-sort\"></i>',\n        '<i class=\"fa fa-sort-desc\"></i>',\n        '<i class=\"fa fa-sort-asc\"></i>',\n      '</a>'\n    ].join('')).on({\n      click: function () {\n        var track = $(this).data('track');\n        var height;\n\n        if (track.prop('autoHeight', !track.prop('autoHeight'))) {\n          track.prop('heightBeforeToggle', track.prop('height'));\n          height = track.prop('fullVisibleHeight');\n        } else {\n          height = track.prop('heightBeforeToggle') || track.prop('initialHeight');\n        }\n\n        $(this).trigger('toggleState');\n\n        track.controller.resize(height, true);\n      },\n      toggleState: function () { // custom event to set title and change the icon\n        var track      = $(this).data('track');\n        var autoHeight = track.prop('autoHeight');\n        var resizer    = track.prop('resizer');\n\n        this.title = autoHeight ? 'Set track to fixed height' : 'Set track to auto-adjust height';\n        $(this)[autoHeight ? 'addClass' : 'removeClass']('gv-auto-height');\n\n        if (resizer) {\n          resizer[autoHeight ? 'hide' : 'show']();\n        }\n      }\n    })\n  ];\n\n  var remove = $('<a title=\"Remove track\" class=\"fa fa-trash\">').on('click', function () {\n    $(this).data('track').remove();\n  });\n\n  var toggle = $([\n    '<a class=\"gv-track-controls-toggle\">',\n      '<span><i class=\"fa fa-angle-double-left\"></i><i class=\"fa fa-cog\"></i></span>',\n      '<span><i class=\"fa fa-angle-double-right\"></i></span>',\n    '</a>'\n  ].join('')).on('click', function () {\n    $(this).parent().toggleClass('gv-maximized');\n  });\n\n  this.on({\n    afterAddDomElements: function () {\n      var controls = this.prop('controls');\n\n      if (controls === 'off') {\n        return;\n      }\n\n      var defaultConfig = this.prop('defaultConfig');\n      var savedConfig   = this.browser.savedConfig ? this.browser.savedConfig[this.prop('id')] || {} : {};\n      var prop, el, j;\n\n      controls = (controls || []).concat(defaultControls, this.prop('removable') === false ? [] : remove);\n\n      this.trackControls = $('<div class=\"gv-track-controls\">').prependTo(this.container);\n\n      var controlsContainer = $('<div class=\"gv-track-controls-container\">').appendTo(this.trackControls);\n\n      for (var i = 0; i < controls.length; i++) {\n        if ($.isPlainObject(controls[i]) && controls[i].type) {\n          el = $('<' + controls[i].type + '>').data('control', controls[i].name);\n\n          if (controls[i].options) {\n            for (j = 0; j < controls[i].options.length; j++) {\n              el.append('<option value=\"' + controls[i].options[j].value + '\">' + controls[i].options[j].text + '</option>');\n            }\n          }\n        } else if (typeof controls[i] === 'string') {\n          el = $(controls[i]);\n        } else if (typeof controls[i] === 'object' && controls[i].constructor && controls[i] instanceof $) {\n          el = controls[i].clone(true);\n        }\n\n        el.data('track', this.track).appendTo(controlsContainer);\n\n        // TODO: other control types\n        if (el.is('select')) {\n          prop = el.data('control');\n\n          el.find('option[value=' + (savedConfig[prop] || defaultConfig[prop] || 'all') + ']').attr('selected', true).end().change(function () {\n            $(this).data('track').setConfig($(this).data('control'), this.value);\n          });\n        }\n      }\n\n      this.prop('heightToggler', controlsContainer.children('.gv-height-toggle').trigger('toggleState'));\n\n      var toggler = toggle.clone(true).data('track', this.track).appendTo(this.trackControls);\n\n      toggler.trigger('click');\n      this.minLabelHeight = Math.max(this.minLabelHeight, this.trackControls.outerHeight(true) + this.prop('margin'));\n      toggler.trigger('click');\n\n    },\n    afterResize: function () {\n      if (this.trackControls) {\n        this.trackControls[this.prop('height') < this.trackControls.outerHeight(true) ? 'hide' : 'show']();\n      }\n    },\n    afterResetHeight: function () {\n      var heightToggler = this.prop('heightToggler');\n\n      if (this.prop('resizable') === true && heightToggler) {\n        heightToggler[this.prop('autoHeight') ? 'addClass' : 'removeClass']('gv-auto-height');\n        heightToggler.trigger('toggleState');\n      }\n    },\n    afterSetMVC: function () {\n      var heightToggler = this.prop('heightToggler');\n\n      if (heightToggler) {\n        heightToggler.trigger('toggleState')[this.prop('resizable') === true ? 'removeClass' : 'addClass']('gv-hide');\n      }\n    }\n  }, 'tracks');\n};","Genoverse.Track.Controller.Sequence = Genoverse.Track.Controller.extend({\n  getClickedFeatures: function (x, y) {\n    var feature = this.base(x, y)[0];\n\n    return feature ? this.makeSeqFeatureMenu(feature, Math.floor(x / this.scale)) : false;\n  },\n\n  makeSeqFeatureMenu: function (feature, pos) {\n    feature.featureMenus      = feature.featureMenus      || {};\n    feature.featureMenus[pos] = feature.featureMenus[pos] || {\n      title    : feature.sequence.charAt(pos - feature.start),\n      Location : feature.chr + ':' + pos\n    }\n\n    return feature.featureMenus[pos].title ? feature.featureMenus[pos] : undefined;\n  }\n});\n","Genoverse.Track.Controller.Stranded = Genoverse.Track.Controller.extend({\n  constructor: function (properties) {\n    this.base(properties);\n\n    if (typeof this._makeImage === 'function') {\n      return;\n    }\n\n    var strand        = this.prop('strand');\n    var featureStrand = this.prop('featureStrand');\n\n    if (strand === -1) {\n      this._makeImage = this.track.makeReverseImage ? $.proxy(this.track.makeReverseImage, this) : this.makeImage;\n      this.makeImage  = $.noop;\n    } else {\n      strand = this.prop('strand', 1);\n\n      this._makeImage = this.makeImage;\n      this.makeImage  = this.makeForwardImage;\n\n      var track = this.track;\n\n      setTimeout(function () {\n        track.reverseTrack = track.browser.addTrack(track.constructor.extend({\n          id           : track.id ? track.id + 'Reverse' : undefined,\n          strand       : -1,\n          url          : false,\n          order        : typeof track.orderReverse === 'number' ? track.orderReverse : track.order,\n          forwardTrack : track\n        }));\n\n        $.each(track.controller._deferredReverseTrackImages, function (i, args) { track.controller._makeReverseTrackImage.apply(track.controller, args); });\n        delete track.controller._deferredReverseTrackImages;\n      }, 1);\n    }\n\n    if (!featureStrand) {\n      this.prop('featureStrand', strand);\n    }\n  },\n\n  makeForwardImage: function (params) {\n    this._makeReverseTrackImage(params, this._makeImage(params));\n  },\n\n  _makeReverseTrackImage: function (params, deferred) {\n    var reverseTrack = this.prop('reverseTrack');\n\n    if (!reverseTrack) {\n      this._deferredReverseTrackImages = (this._deferredReverseTrackImages || []).concat([[ params, deferred ]]);\n      return;\n    }\n\n    if (deferred && typeof deferred.done === 'function') {\n      deferred.done(function () {\n        reverseTrack.controller._makeImage(params, deferred);\n      });\n    } else {\n      reverseTrack.controller._makeImage(params, deferred);\n    }\n  },\n\n  destroy: function () {\n    if (this.removing) {\n      return;\n    }\n\n    this.removing = true;\n\n    this.browser.removeTrack(this.prop('forwardTrack') || this.prop('reverseTrack'));\n    this.base();\n  }\n});","Genoverse.Track.Model.File = Genoverse.Track.Model.extend({\n  dataType: 'text',\n\n  init: function () {\n    if (this.isLocal) {\n      this.url = false;\n    }\n\n    if (!(this.largeFile || this.indexFile)) {\n      this.allData = true;\n    }\n\n    this.base.apply(this, arguments);\n  },\n\n  getData: function (chr) {\n    var model = this;\n\n    if (this.isLocal && this.dataFile) {\n      var reader   = new FileReader();\n      var deferred = $.Deferred();\n\n      reader.onload = function (e) {\n        deferred.done(function () {\n          this.receiveData(e.target.result, chr, 1, this.browser.getChromosomeSize(chr));\n        }).resolveWith(model);\n      };\n\n      reader.readAsText(this.dataFile);\n\n      return deferred;\n    } else {\n      return this.base.apply(this, arguments);\n    }\n  }\n});\n","// Abstract Gene model\n// see sub-models for more specific examples\nGenoverse.Track.Model.Gene = Genoverse.Track.Model.extend({\n\n});","// Abstract Sequence model\n// assumes that the data source responds with raw sequence text\n// see Fasta model for more specific example\nGenoverse.Track.Model.Sequence = Genoverse.Track.Model.extend({\n  threshold : 100000,\n  chunkSize : 1000,\n  buffer    : 0,\n  dataType  : 'text',\n\n  setChrProps: function () {\n    var chr = this.browser.chr;\n\n    this.base();\n\n    this.chunksByChr      = this.chunksByChr || {};\n    this.chunksByChr[chr] = this.chunksByChr[chr] || {};\n  },\n\n  getData: function (chr, start, end) {\n    start = start - start % this.chunkSize + 1;\n    end   = end + this.chunkSize - end % this.chunkSize;\n    return this.base(chr, start, end);\n  },\n\n  parseData: function (data, chr, start, end) {\n    data = data.replace(/\\n/g, '');\n\n    if (this.prop('lowerCase')) {\n      data = data.toLowerCase();\n    }\n\n    for (var i = 0; i < data.length; i += this.chunkSize) {\n      if (this.chunksByChr[chr][start + i]) {\n        continue;\n      }\n\n      var feature = {\n        id       : chr + ':' + start + i,\n        chr      : chr,\n        start    : start + i,\n        end      : start + i + this.chunkSize,\n        sequence : data.substr(i, this.chunkSize),\n        sort     : start + i\n      };\n\n      this.chunksByChr[chr][feature.start] = feature;\n      this.insertFeature(feature);\n    }\n  }\n});\n","Genoverse.Track.Model.SequenceVariation = Genoverse.Track.Model.extend({\n  seqModel: Genoverse.Track.Model.Sequence.Ensembl,\n\n  getSeqModel: function () {\n    var models = this.prop('models');\n    return models.seq = models.seq || this.track.newMVC(this.seqModel);\n  },\n\n  getData: function (chr, start, end) {\n    var deferred = $.Deferred();\n    var seqData  = this.getSeqModel().checkDataRange(chr, start, end);\n\n    this.base(chr, start, end).done(function () {\n      if (seqData) {\n        deferred.resolve();\n      } else {\n        this.getSeqModel().getData(chr, start, end).done(deferred.resolve);\n      }\n    });\n\n    return deferred;\n  },\n\n  insertFeature: function (feature) {\n    return this.base($.extend(feature, {\n      end      : feature.start + feature.alt_allele.length - 1,\n      length   : feature.alt_allele.length,\n      sequence : feature.alt_allele\n    }));\n  },\n\n  checkDataRange: function (chr, start, end) {\n    return this.base(chr, start, end) && this.getSeqModel().checkDataRange(chr, start, end);\n  },\n\n  findFeatures: function (chr, start, end) {\n    return this.getSeqModel().findFeatures(chr, start, end).concat(this.base(chr, start, end));\n  }\n});\n","Genoverse.Track.Model.Stranded = Genoverse.Track.Model.extend({\n  init: function (reset) {\n    this.base(reset);\n\n    if (!reset) {\n      var otherTrack = this.prop('forwardTrack');\n\n      if (otherTrack) {\n        this.featuresByChr = otherTrack.prop('featuresByChr');\n        this.features      = otherTrack.prop('features');\n        this.featuresById  = otherTrack.prop('featuresById');\n      }\n    }\n  },\n\n  parseURL: function () {\n    if (!this.urlParams.strand) {\n      this.urlParams.strand = this.prop('featureStrand');\n    }\n\n    return this.base.apply(this, arguments);\n  },\n\n  findFeatures: function () {\n    var strand = this.track.featureStrand;\n    return $.grep(this.base.apply(this, arguments), function (feature) { return feature.strand === strand; });\n  }\n});\n","// Abstract Transcript model\n// see sub-models for more specific examples\nGenoverse.Track.Model.Transcript = Genoverse.Track.Model.extend({\n\n});","Genoverse.Track.View.Gene = Genoverse.Track.View.extend({\n  featureHeight : 5,\n  labels        : true,\n  repeatLabels  : true,\n  bump          : true\n});\n","Genoverse.Track.View.Sequence = Genoverse.Track.View.extend({\n  featureMargin : { top: 0, right: 0, bottom: 0, left: 0 },\n  colors        : { 'default': '#CCCCCC', A: '#73E973', T: '#DE4C61', G: '#FFFF77', C: '#688EC0' },\n  labelColors   : { 'default': '#000000', T: '#FFFFFF', C: '#FFFFFF' },\n  labels        : 'overlay',\n\n  setDefaults: function () {\n    this.base.apply(this, arguments);\n\n    var lowerCase = this.prop('lowerCase');\n\n    this.labelYOffset = typeof this.labelYOffset === 'number' ? this.labelYOffset : (this.featureHeight + 1) / 2;\n    this.widestLabel  = typeof this.widestLabel  === 'string' ? this.widestLabel : lowerCase ? 'g' : 'G';\n    this.labelWidth   = {};\n\n    this.labelWidth[this.widestLabel] = Math.ceil(this.context.measureText(this.widestLabel).width) + 1;\n\n    if (lowerCase) {\n      for (var key in this.colors) {\n        this.colors[key.toLowerCase()] = this.colors[key];\n      }\n\n      for (key in this.labelColors) {\n        this.labelColors[key.toLowerCase()] = this.labelColors[key];\n      }\n    }\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    featureContext.textBaseline = 'middle';\n    featureContext.textAlign    = 'left';\n\n    var width = Math.max(scale, this.minScaledWidth);\n\n    for (var i = 0; i < features.length; i++) {\n      this.drawSequence(features[i], featureContext, scale, width);\n    }\n  },\n\n  drawSequence: function (feature, context, scale, width) {\n    var drawLabels = this.labelWidth[this.widestLabel] < width - 1;\n    var start, bp;\n\n    for (var i = 0; i < feature.sequence.length; i++) {\n      start = feature.position[scale].X + i * scale;\n\n      if (start < -scale || start > context.canvas.width) {\n        continue;\n      }\n\n      bp = feature.sequence.charAt(i);\n\n      context.fillStyle = this.colors[bp] || this.colors['default'];\n      context.fillRect(start, feature.position[scale].Y, width, this.featureHeight);\n\n      if (!this.labelWidth[bp]) {\n        this.labelWidth[bp] = Math.ceil(context.measureText(bp).width) + 1;\n      }\n\n      if (drawLabels) {\n        context.fillStyle = this.labelColors[bp] || this.labelColors['default'];\n        context.fillText(bp, start + (width - this.labelWidth[bp]) / 2, feature.position[scale].Y + this.labelYOffset);\n      }\n    }\n  }\n});\n","Genoverse.Track.View.Transcript = Genoverse.Track.View.extend({\n  featureHeight       : 10,\n  utrHeight           : 7,\n  labels              : true,\n  repeatLabels        : true,\n  bump                : true,\n  subFeatureJoinStyle : 'curve',\n\n  scaleFeatures: function (features, scale) {\n    var subFeatures, j;\n\n    for (var i = 0; i < features.length; i++) {\n      subFeatures = features[i].subFeatures || [];\n\n      if (subFeatures.length) {\n        for (j = 0; j < subFeatures.length; j++) {\n          if (subFeatures[j].utr) {\n            subFeatures[j].height = this.utrHeight;\n          }\n        }\n\n        features[i].height = Math.max.apply(Math, subFeatures.map(function (c) { return c.fake ? 0 : c.height || 0; }).concat(this.featureHeight));\n      }\n    }\n\n    return this.base(features, scale);\n  }\n});","Genoverse.Track.Chromosome = Genoverse.Track.extend({\n  id            : 'chromosome',\n  margin        : 1,\n  featureMargin : { top: 0, right: 0, bottom: 0, left: 0 },\n  labels        : 'overlay',\n  url           : false,\n  allData       : true,\n  colors        : {\n    acen    : '#708090',\n    gneg    : '#FFFFFF',\n    gpos    : '#000000',\n    gpos100 : '#000000',\n    gpos25  : '#D9D9D9',\n    gpos33  : '#BFBFBF',\n    gpos50  : '#999999',\n    gpos66  : '#7F7F7F',\n    gpos75  : '#666666',\n    gvar    : '#E0E0E0',\n    stalk   : '#708090'\n  },\n  labelColors: {\n    gneg   : '#000000',\n    gvar   : '#000000',\n    gpos25 : '#000000',\n    gpos33 : '#000000'\n  },\n\n  getData: function (chr, start, end) {\n    this.receiveData($.extend(true, [], this.browser.genome[chr].bands), chr, start, end);\n    return $.Deferred().resolveWith(this);\n  },\n\n  insertFeature: function (feature) {\n    feature.label      = feature.type === 'acen' || feature.type === 'stalk' ? false : feature.id;\n    feature.menuTitle  = feature.id ? feature.chr + feature.id : feature.chr + ':' + feature.start + '-' + feature.end;\n    feature.color      = this.prop('colors')[feature.type]      || '#FFFFFF';\n    feature.labelColor = this.prop('labelColors')[feature.type] || '#FFFFFF';\n\n    if (feature.id) {\n      feature.id = feature.chr + feature.id;\n    }\n\n    this.base(feature);\n  },\n\n  drawFeature: function (feature, featureContext, labelContext, scale) {\n    featureContext.fillStyle   = feature.color;\n    featureContext.strokeStyle = '#000000';\n\n    if (feature.type === 'acen') {\n      featureContext.beginPath();\n\n      if (this.drawnAcen) {\n        featureContext.moveTo(feature.x + feature.width, 0.5);\n        featureContext.lineTo(feature.x, (feature.height + 0.5) / 2);\n        featureContext.lineTo(feature.x + feature.width, feature.height + 0.5);\n      } else {\n        featureContext.moveTo(feature.x, 0.5);\n        featureContext.lineTo(feature.x + feature.width, (feature.height + 0.5) / 2);\n        featureContext.lineTo(feature.x, feature.height + 0.5);\n        this.drawnAcen = true;\n      }\n\n      featureContext.fill();\n      featureContext.stroke();\n    } else if (feature.type === 'stalk') {\n      for (var i = 0; i < 2; i++) {\n        featureContext.beginPath();\n\n        featureContext.moveTo(feature.x, 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.25, feature.height * 0.25 + 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.75, feature.height * 0.25 + 0.5);\n        featureContext.lineTo(feature.x + feature.width, 0.5);\n\n        featureContext[i ? 'moveTo' : 'lineTo'](feature.x + feature.width, feature.height + 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.75, feature.height * 0.75 - 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.25, feature.height * 0.75 - 0.5);\n        featureContext.lineTo(feature.x, feature.height + 0.5);\n\n        featureContext[i ? 'stroke' : 'fill']();\n      }\n    } else {\n      this.base(feature, featureContext, labelContext, scale);\n\n      featureContext.beginPath();\n\n      var chrSize = this.browser.getChromosomeSize(feature.chr);\n\n      if (feature.start === 1 || feature.end === chrSize) {\n        if (feature.start === 1) {\n          var end = feature.x + feature.width - (feature.end === chrSize ? 5 : 0);\n\n          featureContext.clearRect(0, 0, 5, feature.height + 0.5);\n\n          featureContext.fillStyle = feature.color;\n          featureContext.moveTo(5,   0.5);\n          featureContext.lineTo(end, 0.5);\n          featureContext.moveTo(5,   feature.height + 0.5);\n          featureContext.lineTo(end, feature.height + 0.5);\n          featureContext.moveTo(5, 0.5);\n          featureContext.bezierCurveTo(-1, 0.5, -1, feature.height + 0.5, 5, feature.height + 0.5);\n          featureContext.fill();\n        }\n\n        if (feature.end === chrSize) {\n          featureContext.clearRect(feature.x + feature.width - 5, 0, 5, feature.height + 0.5);\n\n          if (feature.start !== 1) {\n            featureContext.fillStyle = feature.color;\n            featureContext.moveTo(feature.x, 0.5);\n            featureContext.lineTo(feature.x + feature.width - 5, 0.5);\n            featureContext.moveTo(feature.x, feature.height + 0.5);\n            featureContext.lineTo(feature.x + feature.width - 5, feature.height + 0.5);\n          }\n\n          featureContext.moveTo(feature.x + feature.width - 5, 0.5);\n          featureContext.bezierCurveTo(this.width + 1, 0.5, this.width + 1, feature.height + 0.5, feature.x + feature.width - 5, feature.height + 0.5);\n          featureContext.fill();\n        }\n      } else {\n        featureContext.moveTo(feature.x, 0.5);\n        featureContext.lineTo(feature.x + feature.width, 0.5);\n        featureContext.moveTo(feature.x, feature.height + 0.5);\n        featureContext.lineTo(feature.x + feature.width, feature.height + 0.5);\n      }\n\n      featureContext.stroke();\n    }\n  },\n\n  drawLabel: function (feature) {\n    if ((feature.start === 1 || feature.end === this.browser.getChromosomeSize(feature.chr)) && feature.labelWidth >= Math.floor(feature.width - 5)) {\n      return;\n    }\n\n    this.base.apply(this, arguments);\n  },\n\n  populateMenu: function (feature) {\n    return {\n      title    : feature.menuTitle,\n      Position : feature.chr + ':' + feature.start + '-' + feature.end\n    };\n  }\n});\n","Genoverse.Track.File = Genoverse.Track.extend({\n  setInterface: function () {\n    this.base();\n\n    this._interface.isLocal   = 'model';\n    this._interface.dataFile  = 'model';\n    this._interface.indexFile = 'model';\n    this._interface.largeFile = 'model';\n  }\n});\n","Genoverse.Track.Gene = Genoverse.Track.extend({\n  id     : 'genes',\n  name   : 'Genes',\n  height : 200,\n  legend : true,\n\n  populateMenu: function (feature) {\n    var url  = 'http://www.ensembl.org/Homo_sapiens/' + (feature.feature_type === 'transcript' ? 'Transcript' : 'Gene') + '/Summary?' + (feature.feature_type === 'transcript' ? 't' : 'g') + '=' + feature.id;\n    var menu = {\n      title    : '<a target=\"_blank\" href=\"' + url + '\">' + (feature.external_name ? feature.external_name + ' (' + feature.id + ')' : feature.id) + '</a>',\n      Location : feature.chr + ':' + feature.start + '-' + feature.end,\n      Source   : feature.source,\n      Biotype  : feature.biotype\n    };\n\n    if (feature.feature_type === 'transcript') {\n      menu.Gene = '<a target=\"_blank\" href=\"http://www.ensembl.org/Homo_sapiens/Gene/Summary?g=' + feature.Parent + '\">' + feature.Parent + '</a>';\n    }\n\n    return menu;\n  },\n\n  // Different settings for different zoom level\n  2000000: { // This one applies when > 2M base-pairs per screen\n    labels : false\n  },\n  100000: { // more than 100K but less then 2M\n    labels : true,\n    model  : Genoverse.Track.Model.Gene.Ensembl,\n    view   : Genoverse.Track.View.Gene.Ensembl\n  },\n  1: { // > 1 base-pair, but less then 100K\n    labels : true,\n    model  : Genoverse.Track.Model.Transcript.Ensembl,\n    view   : Genoverse.Track.View.Transcript.Ensembl\n  }\n});\n","// These are abstract classes, implemented by Graph.Bar and Graph.Line. They will not work properly on their own.\n\nGenoverse.Track.Controller.Graph = Genoverse.Track.Controller.extend({\n  setYRange: function (min, max) {\n    if (this.browser.dragging) {\n      return;\n    }\n\n    if (this.prop('showZeroY')) {\n      this.prop('range', [ Math.min(min, 0), Math.max(max, 0) ]);\n    } else {\n      this.prop('range', [ min, max ]);\n    }\n\n    this.track.reset();\n  },\n\n  yMinMaxFromFeatures: function (features) {\n    var min =  Infinity;\n    var max = -Infinity;\n    var i, j;\n\n    if (this.prop('type') === 'Line') {\n      for (i = 0; i < features.length; i++) {\n        for (j = 0; j < features[i].coords.length; j++) {\n          if (!isNaN(features[i].coords[j][1])) {\n            min = Math.min(min, features[i].coords[j][1]);\n            max = Math.max(max, features[i].coords[j][1]);\n          }\n        }\n      }\n    } else {\n      for (i = 0; i < features.length; i++) {\n        if (!isNaN(features[i].height)) {\n          min = Math.min(min, features[i].height);\n          max = Math.max(max, features[i].height);\n        }\n      }\n    }\n\n    min = min ===  Infinity ? 0 : min;\n    max = max === -Infinity ? 0 : max;\n\n    return { min: min, max: max };\n  },\n\n  afterSetName: function () {\n    this.minLabelHeight = Math.max(this.minLabelHeight, this.prop('fontHeight') * 2 + this.prop('margin') + this.prop('marginTop')); // Minimum height that can contain axis labels for range[0] and range[1]\n  },\n\n  visibleFeatureHeight: function () {\n    if (this.prop('rescaleable') === 'auto') {\n      var yScale = this.track.getYScale();\n      var y      = this.yMinMaxFromFeatures(this.model.findFeatures(this.browser.chr, this.browser.start, this.browser.end));\n\n      return Math.ceil(Math.max(yScale * (y.max - y.min), this.prop('hideEmpty') ? 0 : this.minLabelHeight));\n    }\n\n    return this.prop('height');\n  },\n\n  resize: function () {\n    var prevHeight = this.prop('height');\n    var rtn        = this.base.apply(this, arguments);\n    var height     = this.prop('height');\n\n    if (prevHeight !== height) {\n      if (this.prop('rescaleable') === true) {\n        var prevRange     = this.prop('range');\n        var maxDP         = Math.max.apply(null, prevRange.map(function (r) { return (r.toString().split('.')[1] || '').length; }));\n        var prevRangeSize = prevRange[1] - prevRange[0];\n        var rangeChange   = Math.ceil((prevRangeSize * (height / prevHeight) - prevRangeSize) / 2);\n\n        this.setYRange(\n          parseFloat((prevRange[0] - rangeChange).toFixed(maxDP), 10),\n          parseFloat((prevRange[1] + rangeChange).toFixed(maxDP), 10)\n        );\n      } else {\n        this.track.reset();\n      }\n    }\n\n    (this.prop('expander') || $()).hide();\n    (this.prop('resizer')  || $()).removeClass('gv-resizer-expander');\n\n    return rtn;\n  },\n\n  autoResize: function () {\n    if (this.prop('rescaleable') === 'auto') {\n      var visibleFeatures = this.model.findFeatures(this.browser.chr, this.browser.start, this.browser.end);\n\n      if (visibleFeatures.length) {\n        var range = this.prop('range');\n        var y     = this.yMinMaxFromFeatures(visibleFeatures);\n\n        if (y.min || y.max) {\n          var maxDP = Math.max.apply(null, range.map(function (r) { return (r.toString().split('.')[1] || '').length; }));\n          var round = Math.pow(10, maxDP);\n          var minY  = parseFloat((Math.floor(y.min * round) / round).toFixed(maxDP), 10);\n          var maxY  = parseFloat((Math.ceil (y.max * round) / round).toFixed(maxDP), 10);\n\n          if (this.prop('showZeroY')) {\n            minY = Math.min(minY, 0);\n            maxY = Math.max(maxY, 0);\n          }\n\n          if (minY === maxY) {\n            maxY++;\n          }\n\n          if (minY !== range[0] || maxY !== range[1]) {\n            return this.setYRange(minY, maxY);\n          }\n        }\n      }\n    } else {\n      return this.base.apply(this, arguments);\n    }\n  },\n\n  makeFirstImage: function () {\n    var controller = this;\n\n    return this.base.apply(this, arguments).done(function () {\n      controller.prop('yAxisPlaceholder').hide();\n      controller.prop('offsetContainer')\n        .prepend(controller.prop('guidelinesCanvas'))\n        .before(controller.prop('yAxisCanvas').removeClass('gv-loading'));\n    });\n  },\n\n  typeWrapper        : function (func, args) { return (Genoverse.Track.Controller.Graph[this.prop('type')][func] || Genoverse.Track.Controller.prototype[func]).apply(this, args); },\n  click              : function () { return this.typeWrapper('click',              arguments); },\n  getClickedFeatures : function () { return this.typeWrapper('getClickedFeatures', arguments); },\n  populateMenu       : function () { return this.typeWrapper('populateMenu',       arguments); }\n});\n\nGenoverse.Track.Model.Graph = Genoverse.Track.Model.extend({\n  dataBuffer     : { start: 1, end: 1 },\n  setLabelBuffer : $.noop,\n  sortFeatures   : function (features) { return features.sort(function (a, b) { return a.start - b.start; }); }\n});\n\nGenoverse.Track.View.Graph = Genoverse.Track.View.extend({\n  featureMargin: {},\n\n  featureDataSets: function (features) {\n    var datasets = this.prop('datasets').concat({ name: '_default' });\n    var setNames = {};\n    var sets     = {};\n\n    for (var i = 0; i < datasets.length; i++) {\n      setNames[datasets[i].name] = true;\n    }\n\n    for (i = 0; i < features.length; i++) {\n      set = setNames[features[i].dataset] ? features[i].dataset : '_default';\n\n      sets[set] = sets[set] || [];\n      sets[set].push(features[i]);\n    }\n\n    return { list: datasets, features: sets };\n  }\n});\n\nGenoverse.Track.Graph = Genoverse.Track.extend({\n  controller   : Genoverse.Track.Controller.Graph,\n  margin       : 10,        // Same as fontHeight - needed to allow axis labels for range[0] and range[1] to be drawn without being cut off by the edge of the image\n  invert       : true,\n  yAxisLabels  : undefined, // An array of numerical labels for the y-axis. Should not be configured manually if the track is resizable.\n  yRange       : undefined, // An array of [ minY, maxY ] for the graph\n  showZeroY    : true,      // If true, 0 will always be included in auto-generated yRanges. If yRange is defined in configuration, this setting will be ignored.\n  globalAlpha  : 1,\n  axesSettings : { axisColor: 'black', axisLabelColor: 'black', scaleLineColor: '#E5E5E5' },\n  datasets     : [],\n  legend       : true,\n  labels       : false,\n\n  /*\n   * resizable and rescaleableY combine to define what happens when the track \"resizes\", as follows:\n   * resizable | rescaleableY | Effect\n   * --------- | ------------ | ------\n   * true      | true         | Users can change the track height, and doing so changes the y-axis range (y-axis range will change proportionally to track height change)\n   * true      | 'auto'       | Users can change the track height, and doing so does not change the y-axis range. However, the y-axis range will automatically change so that no peaks are cut off.\n   * true      | false        | Users can change the track height, and doing so does not change the y-axis range (peak heights will change proportionally to track height change)\n   * false     | true         | Like true/true\n   * false     | 'auto'       | Track height cannot be changed, but the y-axis range will automatically change so that no peaks are cut off\n   * false     | false        | Neither track height nor y-axis range can be changed, either by users or automatically\n   * 'auto'    | true         | Like false/'auto'\n   * 'auto'    | 'auto'       | Like false/'auto'\n   * 'auto'    | false        | Like false/'auto' (it is not possible to change a track's height such that no peaks are cut off without being able to change the y-axis range)\n   */\n  resizable    : true,\n  rescaleableY : 'auto',\n\n  setDefaults: function () {\n    this.range       = this.yRange || [ 0, this.height ];\n    this.rescaleable = this.rescaleableY;\n\n    if ($.isPlainObject(this.margin)) {\n      if (this.invert) {\n        this.marginTop = this.margin.bottom;\n        this.margin    = this.margin.top;\n      } else {\n        this.marginTop = this.margin.top;\n        this.margin    = this.margin.bottom;\n      }\n    }\n\n    this.marginTop = typeof this.marginTop === 'number' ? this.marginTop : this.margin;\n\n    if (this.resizable === false) {\n      this.resizable = this.rescaleable;\n    } else if (this.resizable === 'auto') {\n      this.rescaleable = 'auto';\n    }\n\n    this.base.apply(this, arguments);\n\n    if (this.legend && !this.datasets.length) {\n      this.legend = false;\n    }\n\n    this.height        += this.marginTop;\n    this.initialHeight += this.marginTop;\n  },\n\n  setHeight: function (height) {\n    return this.base(height, true); // always force show\n  },\n\n  setMVC: function () {\n    var hadController = this.controller instanceof Genoverse.Track.Controller;\n    var rtn           = this.base.apply(this, arguments);\n\n    if (!hadController) {\n      var scrollContainer = this.prop('scrollContainer');\n\n      this.yAxisPlaceholder = $('<div class=\"gv-image-container gv-loading\">');\n      this.yAxisCanvas      = $('<canvas class=\"gv-image-container gv-barchart-axis\">' ).attr('width', this.width);\n      this.guidelinesCanvas = $('<canvas class=\"gv-image-container gv-barchart-guide\">').attr('width', this.width);\n\n      if (this.disabled) {\n        this.yAxisCanvas.add(this.guidelinesCanvas).attr('height', 0);\n      }\n\n      this.offsetContainer = $('<div class=\"gv-scroll-container-offset\">')\n        .width(this.width)\n        .insertAfter(scrollContainer)\n        .append(scrollContainer)\n        .before(this.yAxisPlaceholder);\n\n      this.drawAxes();\n    }\n\n    return rtn;\n  },\n\n  afterSetMVC: function () {\n    // Never show the control to switch between auto-height and manual resizing, since its behaviour is not the same here as for standard tracks, due to interactions between resizable and rescaleableY.\n    (this.prop('heightToggler') || $()).addClass('gv-hidden');\n    (this.prop('resizer')       || $()).off('click');\n  },\n\n  reset: function () {\n    this.drawAxes();\n    return this.base.apply(this, arguments);\n  },\n\n  enable: function () {\n    var wasDisabled = this.disabled;\n    var rtn         = this.base.apply(this, arguments);\n\n    if (wasDisabled) {\n      this.drawAxes();\n    }\n\n    return rtn;\n  },\n\n  getYScale: function () {\n    var range  = this.prop('range');\n    var yScale = (this.prop('height') - this.prop('margin') - this.prop('marginTop')) / (range[1] - range[0]);\n\n    return yScale;\n  },\n\n  drawAxes: function () {\n    if (this.prop('disabled')) {\n      return;\n    }\n\n    var width        = this.width;\n    var height       = this.prop('height');\n    var invert       = this.prop('invert');\n    var margin       = this.prop('margin');\n    var marginTop    = this.prop('marginTop');\n    var fontHeight   = this.prop('fontHeight');\n    var range        = this.prop('range');\n    var axesSettings = this.prop('axesSettings');\n    var yAxisLabels  = this.prop('yAxisLabels');\n    var yScale       = this.getYScale();\n    var axisContext  = this.prop('yAxisCanvas'     ).attr('height', height)[0].getContext('2d');\n    var linesContext = this.prop('guidelinesCanvas').attr('height', height)[0].getContext('2d');\n    var y, n, i, interval, maxDP;\n\n    if (!yAxisLabels) {\n      n           = Math.floor((height - margin - marginTop) / (fontHeight * 2)); // number of labels that can be shown\n      interval    = (range[1] - range[0]) / n;                                    // label incrementor\n      yAxisLabels = [];\n\n      if (interval !== Math.round(interval)) { // floats\n        // Strenuously ensure that interval does not contain a floating point error.\n        // Assumes that values in range do not contain floating point errors.\n        maxDP = Math.max.apply(null, range.map(function (r) { return (r.toString().split('.')[1] || '').length; })) + 1;\n      }\n\n      for (i = 0; i <= n; i++) {\n        yAxisLabels.push((range[0] + interval * i)[maxDP ? 'toFixed' : 'toString'](maxDP));\n      }\n    }\n\n    var axisWidth = Math.max.apply(null, yAxisLabels.map(function (label) { return axisContext.measureText(label).width; })) + 10;\n\n    this.prop('offsetContainer').css('marginLeft',  axisWidth).width(width - axisWidth);\n    this.prop('scrollContainer').css('marginLeft', -axisWidth);\n\n    this.prop('yAxisPlaceholder').width(axisWidth).show();\n\n    axisContext.fillStyle = axesSettings.axisColor;\n    axisContext.fillRect(axisWidth - 1, invert ? margin : marginTop, 1, height - margin - marginTop); // Vertical line\n\n    linesContext.fillStyle  = axesSettings.scaleLineColor;\n    axisContext.fillStyle    = axesSettings.axisLabelColor;\n    axisContext.textBaseline = 'middle';\n    axisContext.textAlign    = 'right';\n\n    for (i = 0; i < yAxisLabels.length; i++) {\n      y = marginTop + (parseFloat(yAxisLabels[i], 10) - range[0]) * yScale;\n      y = invert ? height - y : y;\n\n      linesContext.fillRect(0, y, width, 1);                  // Horizontal line, indicating the y-position of a numerical value\n      axisContext.fillRect(axisWidth - 4, y, 4, 1);           // Horizontal line, indicating the y-position of a numerical value\n      axisContext.fillText(yAxisLabels[i], axisWidth - 6, y); // The numerical value for the horizontal line\n    }\n\n    // Draw a horizontal line at y = 0\n    y = (-range[0] * yScale) + marginTop;\n    linesContext.fillStyle = axesSettings.axisColor;\n    linesContext.fillRect(0, invert ? height - y : y, width, 1);\n  }\n});\n","Genoverse.Track.HighlightRegion = Genoverse.Track.extend({\n  id               : 'highlights',\n  unsortable       : true,\n  fixedOrder       : true,\n  repeatLabels     : true,\n  resizable        : false,\n  border           : false,\n  alwaysReposition : true,\n  height           : 15,\n  featureHeight    : 2,\n  order            : -1,\n  orderReverse     : 9e99,\n  controls         : 'off',\n  colors           : [ '#777777', '#F08080', '#3CB371', '#6495ED', '#FFA500', '#9370DB' ],\n  labels           : 'separate',\n  depth            : 1,\n  featureMargin    : { top: 13, right: 0, bottom: 0, left: 0 },\n  margin           : 0,\n\n  constructor: function () {\n    this.colorIndex = 0;\n    return this.base.apply(this, arguments);\n  },\n\n  addHighlights: function (highlights) {\n    for (var i = 0; i < highlights.length; i++) {\n      this.model.insertFeature($.extend({ label: (highlights[i].start + '-' + highlights[i].end) }, highlights[i]));\n    }\n\n    this.reset();\n  },\n\n  removeHighlights: function (highlights) {\n    var featuresByChr = this.prop('featuresByChr');\n    var featuresById  = this.prop('featuresById');\n    var features, bounds, h;\n\n    highlights = highlights || $.map(featuresById, function (f) { return f; });\n\n    for (var i = 0; i < highlights.length; i++) {\n      if (highlights[i].removable === false) {\n        continue;\n      }\n\n      features = featuresByChr[highlights[i].chr];\n      bounds   = { x: highlights[i].start, y: 0, w: highlights[i].end - highlights[i].start + 1, h: 1 };\n\n      // RTree.remove only works if the second argument (the object to be removed) === the object found in the tree.\n      // Here, while highlight is effectively the same object as the one in the tree, it has been cloned, so the === check fails.\n      // To fix this, search for the feature to remove in the location of highlight.\n      h = $.grep(features.search(bounds), function (item) { return item.id === highlights[i].id; });\n\n      if (h.length) {\n        features.remove(bounds, h[0]);\n      }\n\n      delete featuresById[highlights[i].id];\n    }\n\n    if (this.prop('strand') === 1) {\n      this.prop('reverseTrack').removeHighlights(highlights);\n    }\n\n    this.reset();\n  },\n\n  controller: Genoverse.Track.Controller.Stranded.extend({\n    setDefaults: function () {\n      if (this.prop('strand') === -1) {\n        this.prop('labels', false);\n        this.prop('border', false);\n        this.prop('height', 2);\n        this.prop('featureMargin').top = 0;\n      }\n\n      this.base();\n    },\n\n    setName: function (name) {\n      if (this.prop('strand') === -1) {\n        this.base('');\n        this.minLabelHeight = 0;\n        this.label.height(0);\n      } else {\n        this.base(name);\n      }\n    },\n\n    makeImage: function (params) {\n      if (this.prop('strand') === 1) {\n        params.background = 'gv-full-height';\n      }\n\n      var rtn = this.base(params);\n      params.container.addClass(params.background);\n      return rtn;\n    },\n\n    render: function (features, img) {\n      this.base(features, img);\n      img.siblings('.gv-labels').css('top', this.prop('featureHeight') - this.prop('featureMargin').top);\n    },\n\n    renderBackground: function (f, img) {\n      this.base(f, img);\n      img.height(this.browser.wrapper.outerHeight(true));\n    },\n\n    populateMenu: function (features) {\n      var menu = [];\n      var location, m;\n\n      if (features.length > 1) {\n        menu.push({ title: 'Highlights' });\n      }\n\n      for (var i = 0; i < features.length; i++) {\n        location = features[i].start + '-' + features[i].end;\n        m        = {\n          title: features[i].label ? features[i].label[0] : location,\n          start: false\n        };\n\n        m[m.title === location ? 'title' : 'Location'] = features[i].chr + ':' + location;\n        m['<a class=\"gv-focus-highlight\" href=\"#\" data-chr=\"' + features[i].chr + '\" data-start=\"' + features[i].start + '\" data-end=\"' + features[i].end + '\">Focus here</a>'] = '';\n\n        if (features[i].removable !== false) {\n          m['<a class=\"gv-remove-highlight\"  href=\"#\" data-id=\"' + features[i].id + '\">Remove this highlight</a>'] = '';\n          m['<a class=\"gv-remove-highlights\" href=\"#\">Remove all highlights</a>'] = '';\n        }\n\n        menu.push(m);\n      }\n\n      return menu;\n    },\n\n    click: function () {\n      if (this.prop('strand') !== 1) {\n        return;\n      }\n\n      var menuEl = this.base.apply(this, arguments);\n\n      if (menuEl && !menuEl.data('highlightEvents')) {\n        var track = this.track;\n\n        menuEl.find('.gv-remove-highlight').on('click', function () {\n          var id = $(this).data('id');\n          track.removeHighlights($.grep(menuEl.data('feature'), function (f) { return f.id === id; }));\n          return false;\n        });\n\n        menuEl.find('.gv-remove-highlights').on('click', function () {\n          track.removeHighlights();\n          return false;\n        });\n\n        menuEl.find('.gv-focus-highlight').on('click', function () {\n          var data    = $(this).data();\n          var length  = data.end - data.start + 1;\n          var context = Math.max(Math.round(length / 4), 25);\n\n          track.browser.moveTo(data.chr, data.start - context, data.end + context, true);\n\n          return false;\n        });\n\n        menuEl.data('highlightEvents', true);\n      }\n    },\n\n    getClickedFeatures: function (x, y, target) {\n      var seen     = {};\n      var scale    = this.scale;\n      var features = $.grep(\n        // feature positions\n        this.featurePositions.search({ x: x, y: y, w: 1, h: 1 }).concat(\n          // plus label positions where the labels are visible\n          $.grep(this.labelPositions.search({ x: x, y: y, w: 1, h: 1 }), function (f) {\n            return f.position[scale].label.visible !== false;\n          })\n        ), function (f) {\n        // with duplicates removed\n        var rtn = !seen[f.id];\n        seen[f.id] = true;\n        return rtn;\n      });\n\n      return features.length ? [ this.model.sortFeatures(features) ] : false;\n    }\n  }),\n\n  model: Genoverse.Track.Model.Stranded.extend({\n    url: false,\n\n    insertFeature: function (feature) {\n      feature.id   = feature.chr + ':' + feature.start + '-' + feature.end;\n      feature.sort = feature.start;\n\n      if (!feature.color) {\n        var colors = this.prop('colors');\n        var i      = this.prop('colorIndex');\n\n        feature.color = colors[i++];\n\n        this.prop('colorIndex', colors[i] ? i : 0);\n      }\n\n      if (!this.featuresById[feature.id]) {\n        this.base(feature);\n      }\n    },\n\n    findFeatures: function () {\n      return Genoverse.Track.Model.prototype.findFeatures.apply(this, arguments);\n    }\n  }),\n\n  view: Genoverse.Track.View.extend({\n    positionFeatures: function (features, params) {\n      var rtn = this.base.apply(this, arguments);\n\n      // featureMargin.top gets used to define params.featureHeight, which is used to determine canvas height.\n      // Since featureMargin.top = 13 on forward strand, the canvas has a 13px space at the bottom, meaning there is a gap before the background starts.\n      // Reducing params.featureHeight here fixes that.\n      params.featureHeight = Math.max(params.featureHeight - this.featureMargin.top, 0);\n\n      return rtn;\n    },\n\n    draw: function (features, featureContext, labelContext, scale) {\n      if (this.prop('strand') === 1) {\n        featureContext.fillStyle = '#FFF';\n        featureContext.fillRect(0, 0, featureContext.canvas.width, featureContext.canvas.height);\n      }\n\n      this.base(features, featureContext, labelContext, scale);\n    },\n\n    drawBackground: function (features, context, params) {\n      if (this.prop('strand') === -1) {\n        return;\n      }\n\n      for (var i = 0; i < features.length; i++) {\n        context.fillStyle = features[i].color;\n\n        this.drawFeature($.extend(true, {}, features[i], {\n          x           : features[i].position[params.scale].X,\n          y           : 0,\n          width       : features[i].position[params.scale].width,\n          height      : context.canvas.height,\n          color       : this.shadeColor(context.fillStyle, 0.8),\n          border      : features[i].color,\n          label       : false,\n          decorations : true\n        }), context, false, params.scale);\n      }\n    },\n\n    decorateFeature: function (feature, context, scale) {\n      var x1   = feature.x + 0.5;\n      var x2   = x1 + feature.width;\n      var draw = false;\n\n      context.strokeStyle = feature.border;\n      context.lineWidth   = 2;\n      context.beginPath();\n\n      if (x1 >= 0 && x1 <= this.width) {\n        context.moveTo(x1, feature.y);\n        context.lineTo(x1, feature.y + feature.height);\n        draw = true;\n      }\n\n      if (x2 >= 0 && x2 <= this.width) {\n        context.moveTo(x2, feature.y);\n        context.lineTo(x2, feature.y + feature.height);\n        draw = true;\n      }\n\n      if (draw) {\n        context.stroke();\n      }\n\n      context.lineWidth = 1;\n    }\n  })\n});\n","Genoverse.Track.Controller.Legend = Genoverse.Track.Controller.Static.extend({\n  init: function () {\n    this.base();\n\n    this.container.addClass('gv-track-container-legend');\n\n    this.browser.legends[this.track.id] = this.track;\n\n    this.track.setTracks();\n  },\n\n  destroy: function () {\n    delete this.browser.legends[this.prop('id')];\n    this.base();\n  }\n});\n\nGenoverse.Track.Model.Legend = Genoverse.Track.Model.Static.extend({\n  findFeatures: function () {\n    var bounds   = { x: this.browser.scaledStart, y: 0, w: this.width };\n    var features = {};\n\n    $.each($.map(this.track.tracks, function (track) {\n      var featurePositions = track.prop('featurePositions');\n      bounds.h = track.prop('height');\n      return featurePositions ? featurePositions.search(bounds).concat(track.prop('labelPositions').search(bounds)) : [];\n    }), function () {\n      if (this.legend) {\n        features[this.legend] = this.legendColor || this.color;\n      }\n    });\n\n    return this.sortFeatures($.map(features, function (color, text) { return [[ text, color ]]; }));\n  },\n\n  sortFeatures: function (features) {\n    // sort legend alphabetically\n    return features.sort(function (a, b) {\n      var x = a[0].toLowerCase();\n      var y = b[0].toLowerCase();\n      return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n    });\n  }\n});\n\nGenoverse.Track.View.Legend = Genoverse.Track.View.Static.extend({\n  textColor     : '#000000',\n  labels        : 'overlay',\n  featureHeight : 12,\n\n  positionFeatures: function (f, params) {\n    if (params.positioned) {\n      return f;\n    }\n\n    var cols     = 2;\n    var pad      = 5;\n    var w        = 20;\n    var x        = 0;\n    var y        = 0;\n    var xScale   = this.width / cols;\n    var yScale   = this.fontHeight + pad;\n    var features = [];\n    var xOffest  = params.xOffset || 0;\n    var xPos, yPos, labelWidth;\n\n    for (var i = 0; i < f.length; i++) {\n      xPos       = (x * xScale) + pad;\n      yPos       = (y * yScale) + pad;\n      labelWidth = this.context.measureText(f[i][0]).width;\n\n      features.push(\n        { x: xPos + xOffest,           y: yPos, width: w,              height: this.featureHeight, color: f[i][1] },\n        { x: xPos + xOffest + pad + w, y: yPos, width: labelWidth + 1, height: this.featureHeight, color: false, labelColor: this.textColor, labelWidth: labelWidth, label: f[i][0] }\n      );\n\n      if (++x === cols) {\n        x = 0;\n        y++;\n      }\n    }\n\n    params.height     = this.prop('height', f.length ? ((y + (x ? 1 : 0)) * yScale) + pad : 0);\n    params.width      = this.width;\n    params.positioned = true;\n\n    return this.base(features, params);\n  }\n});\n\nGenoverse.Track.Legend = Genoverse.Track.Static.extend({\n  unsortable  : true,\n  lockToTrack : true, // Always put the legend just below the last track that the legend is for\n  removable   : false,\n\n  controller : Genoverse.Track.Controller.Legend,\n  model      : Genoverse.Track.Model.Legend,\n  view       : Genoverse.Track.View.Legend,\n\n  setDefaults: function () {\n    this.order = typeof this.order !== 'undefined' ? this.order : 9e99;\n    this.id    = this.id   || 'legend';\n    this.type  = this.type || 'legend';\n    this.base();\n  },\n\n  setEvents: function () {\n    this.browser.on({\n      'afterAddTracks afterRemoveTracks': function (tracks) {\n        for (var i in this.legends) {\n          this.legends[i].setTracks();\n        }\n\n        this.sortTracks();\n      },\n      afterRemoveTracks: function (tracks) {\n        for (var i in tracks) {\n          if (tracks[i].legendTrack && tracks[i].legendTrack.tracks.length === 0) {\n            tracks[i].legendTrack.remove();\n          }\n        }\n\n        for (var i in this.legends) {\n          this.legends[i].controller.makeImage({});\n        }\n      },\n      afterUpdateTrackOrder: function (e, ui) {\n        var track       = ui.item.data('track');\n        var legendTrack = this.legends[track.id] || track.legendTrack;\n\n        // If a legend track, or a track with a sortable legend has been reordered, its lockToTrack status is ignored from now on.\n        // This allows a legend to initially be locked to a track, but then to be reordered once the browser has been initialized\n        if (legendTrack && legendTrack.lockToTrack && legendTrack.unsortable === false) {\n          legendTrack.lockToTrack = false;\n        }\n\n        for (var i in this.legends) {\n          this.legends[i].updateOrder();\n        }\n\n        this.sortTracks();\n      }\n    });\n\n    this.browser.on({\n      afterPositionFeatures: function (features, params) {\n        var legend = this.prop('legendTrack');\n\n        if (legend) {\n          setTimeout(function () { legend.controller.makeImage(params); }, 1);\n        }\n      },\n      afterResize: function (height, userResize) {\n        var legend = this.prop('legendTrack');\n\n        if (legend && userResize === true) {\n          legend.controller.makeImage({});\n        }\n      },\n      afterCheckHeight: function () {\n        var legend = this.prop('legendTrack');\n\n        if (legend) {\n          legend.controller.makeImage({});\n        }\n      },\n      afterSetMVC: function () {\n        var legend = this.prop('legendTrack');\n\n        if (legend && legend.tracks.length) {\n          legend.disable();\n\n          if (this.legend !== false) {\n            legend.enable();\n          }\n        }\n      }\n    }, this);\n  },\n\n  setTracks: function () {\n    var legend = this;\n    var type   = this.type;\n\n    this.tracks = $.map(this.browser.tracks.filter(function (t) {\n      if (t.legendType === type) {\n        t.legendTrack = t.legendTrack || legend;\n        return true;\n      }\n    }), function (track) {\n      return [ track ].concat(track.prop('childTracks'), track.prop('parentTrack')).filter(function (t) { return t && t !== legend && !t.prop('disabled'); })\n    });\n\n    this.updateOrder();\n\n    if (typeof this.controller === 'object') {\n      this[this.tracks.length ? 'enable' : 'disable']();\n    } else {\n      this.disabled = !this.tracks.length;\n    }\n  },\n\n  updateOrder: function () {\n    if (this.lockToTrack) {\n      var tracks = this.tracks.filter(function (t) { return !t.prop('parentTrack'); });\n\n      if (tracks.length) {\n        this.order = tracks[tracks.length - 1].order + 0.1;\n      }\n    }\n  },\n\n  enable: function () {\n    this.base();\n    this.controller.makeImage({});\n  },\n\n  disable: function () {\n    delete this.controller.stringified;\n    this.base();\n  }\n});\n","Genoverse.Track.Scalebar = Genoverse.Track.extend({\n  unsortable     : true,\n  fixedOrder     : true,\n  order          : 0,\n  orderReverse   : 1e5,\n  featureStrand  : 1,\n  controls       : 'off',\n  height         : 20,\n  featureHeight  : 3,\n  featureMargin  : { top: 0, right: 0, bottom: 2, left: 0 },\n  margin         : 0,\n  minPixPerMajor : 100, // Least number of pixels per written number\n  color          : '#000000',\n  autoHeight     : false,\n  labels         : true,\n  bump           : false,\n  resizable      : false,\n  click          : $.noop,\n  colors         : {\n    majorGuideLine : '#CCCCCC',\n    minorGuideLine : '#E5E5E5'\n  },\n\n  setEvents: function () {\n    var browser = this.browser;\n\n    function resize() {\n      $('.gv-bg.gv-full-height', browser.container).height(function () {\n        return browser.wrapper.outerHeight(true) - $(this).parents('.gv-track-container').position().top;\n      });\n    }\n\n    browser.on('afterAddTracks', resize);\n    browser.on('afterResize', this, resize);\n  },\n\n  setScale: function () {\n    var max       = this.prop('width') / this.prop('minPixPerMajor');\n    var divisor   = 5;\n    var majorUnit = -1;\n    var fromDigit = ('' + this.browser.start).split(''); // Split into array of digits\n    var toDigit   = ('' + this.browser.end).split('');\n    var features  = {};\n    var divisions, i;\n\n    for (i = fromDigit.length; i < toDigit.length; i++) {\n      fromDigit.unshift('0');\n    }\n\n    for (i = toDigit.length; i < fromDigit.length; i++) {\n      toDigit.unshift('0');\n    }\n\n    // How many divisions would there be if we only kept i digits?\n    for (i = 0; i < fromDigit.length; i++) {\n      divisions = parseInt(toDigit.slice(0, fromDigit.length - i).join(''), 10) - parseInt(fromDigit.slice(0, fromDigit.length - i).join(''), 10);\n\n      if (divisions && divisions <= max) {\n        majorUnit = parseInt('1' + $.map(new Array(i), function () { return '0'; }).join(''), 10);\n        break;\n      }\n    }\n\n    if (majorUnit === -1) {\n      majorUnit = this.browser.length === 1 ? 1 : parseInt('1' + $.map(new Array(fromDigit.length), function () { return '0'; }).join(''), 10);\n      divisor   = 1;\n    } else {\n      // Improve things by trying simple multiples of 1<n zeroes>.\n      // (eg if 100 will fit will 200, 400, 500).\n      if (divisions * 5 <= max) {\n        majorUnit /= 5;\n        divisor    = 2;\n      } else if (divisions * 4 <= max) {\n        majorUnit /= 4;\n        divisor    = 1;\n      } else if (divisions * 2 <= max) {\n        majorUnit /= 2;\n      }\n    }\n\n    majorUnit = Math.max(majorUnit, 1);\n\n    features[this.browser.chr] = new RTree();\n\n    this.prop('minorUnit',     Math.max(majorUnit / divisor, 1));\n    this.prop('majorUnit',     majorUnit);\n    this.prop('featuresByChr', features);\n    this.prop('featuresById',  {});\n    this.prop('seen',          {});\n\n    this.base();\n  },\n\n  setFeatures: function (chr, start, end) {\n    var minorUnit = this.prop('minorUnit');\n    var majorUnit = this.prop('majorUnit');\n    var seen      = this.prop('seen');\n\n    start = Math.max(start - (start % minorUnit) - majorUnit, 0);\n\n    var flip = (start / minorUnit) % 2 ? 1 : -1;\n    var feature, major, label;\n\n    for (var x = start; x < end + minorUnit; x += minorUnit) {\n      flip *= -1;\n\n      if (seen[x]) {\n        continue;\n      }\n\n      seen[x] = 1;\n\n      feature = { id: chr + ':' + x, chr: chr, strand: 1, sort: x };\n      major   = x && x % majorUnit === 0;\n\n      if (flip === 1) {\n        feature.start = x;\n        feature.end   = x + minorUnit - 1;\n      }\n\n      if (major) {\n        label = this.view.formatLabel(x);\n\n        if (label !== this.lastLabel) {\n          feature.label = label;\n\n          if (!feature.end) {\n            feature.start = x;\n            feature.end   = x - 1;\n          }\n        }\n\n        this.lastLabel = label;\n      }\n\n      if (feature.end) {\n        this.model.insertFeature(feature);\n      }\n    }\n  },\n\n  makeFirstImage: function (moveTo) {\n    if (this.prop('strand') === -1) {\n      moveTo = this.track.forwardTrack.prop('scrollStart');\n    }\n\n    return this.base(moveTo);\n  },\n\n  makeImage: function (params) {\n    params.background    = 'gv-guidelines gv-full-height';\n    params.featureHeight = this.prop('height');\n\n    this.track.setFeatures(params.chr, params.start, params.end);\n\n    var rtn = this.base(params);\n\n    params.container.addClass('gv-full-height');\n\n    return rtn;\n  },\n\n  makeReverseImage: function (params) {\n    this.imgContainers.push(params.container.clone().html(params.container.children('.gv-data').clone(true).css({ opacity: 1, background: this.browser.wrapper.css('backgroundColor') }))[0]);\n    this.scrollContainer.append(this.imgContainers);\n  },\n\n  renderBackground: function (f, bgImage) {\n    this.base(f, bgImage);\n    bgImage.height(this.browser.wrapper.outerHeight(true));\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var i         = features.length;\n    var minorUnit = this.prop('minorUnit');\n    var width     = Math.ceil(minorUnit * scale);\n    var feature, start, end;\n\n    featureContext.textBaseline = 'top';\n    featureContext.fillStyle    = this.color;\n\n    this.guideLines = { major: {} }; // FIXME: pass params to draw, rather than scale. set guideLines on params\n\n    while (i--) {\n      feature = features[i];\n      start   = Math.round(feature.position[scale].X);\n      end     = start + width - 1;\n\n      this.drawFeature($.extend({}, feature, {\n        x      : start,\n        y      : 0,\n        width  : Math.ceil(feature.position[scale].width),\n        height : this.featureHeight\n      }), featureContext, labelContext, scale);\n\n      if (feature.label) {\n        if (start > -1) {\n          featureContext.fillRect(start, this.featureHeight, 1, this.featureHeight);\n        }\n\n        this.guideLines.major[feature.start] = true;\n      }\n\n      // Fiddle the location so that these [additional major] lines overlap with normal lines\n      if (feature.end < feature.start) {\n        start--;\n        end++;\n      }\n\n      this.guideLines[feature.start]             = start;\n      this.guideLines[feature.start + minorUnit] = end;\n    }\n\n    featureContext.fillRect(0, 0, featureContext.canvas.width, 1);\n    featureContext.fillRect(0, this.featureHeight, featureContext.canvas.width, 1);\n  },\n\n  // Draw guidelines\n  drawBackground: function (f, context) {\n    for (var i in this.guideLines) {\n      if (this.guideLines[i] >= 0 && this.guideLines[i] <= this.width) {\n        context.fillStyle = this.track.colors[this.guideLines.major[i] ? 'majorGuideLine' : 'minorGuideLine' ];\n        context.fillRect(this.guideLines[i], 0, 1, context.canvas.height);\n      }\n    }\n  },\n\n  formatLabel: function (label) {\n    return this.prop('minorUnit') < 1000 ? label.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,') : this.base(label);\n  }\n});\n","Genoverse.Track.Scaleline = Genoverse.Track.Static.extend({\n  strand     : 1,\n  color      : '#000000',\n  height     : 12,\n  labels     : 'overlay',\n  unsortable : true,\n  fixedOrder : true,\n\n  resize: $.noop,\n\n  makeFirstImage: function () {\n    this.prop('scaleline', false);\n    this.base.apply(this, arguments);\n  },\n\n  render: function (f, img) {\n    this.base(f, img);\n    this.prop('drawnScale', img.data('scale'));\n  },\n\n  positionFeatures: function (features, params) {\n    var scaleline = this.prop('scaleline');\n\n    if (params.scale === this.drawnScale) {\n      return false;\n    } else if (scaleline) {\n      return scaleline;\n    }\n\n    var strand = this.prop('strand');\n    var height = this.prop('height');\n    var text   = this.formatLabel(this.browser.length);\n    var text2  = strand === 1 ? 'Forward strand' : 'Reverse strand';\n    var width1 = this.context.measureText(text).width;\n    var width2 = this.context.measureText(text2).width;\n    var x1, x2;\n\n    if (strand === 1) {\n      x1 = 0;\n      x2 = this.width - width2 - 40;\n    } else {\n      x1 = 25;\n      x2 = 30;\n    }\n\n    scaleline = [\n      { x: x1,                             y: height / 2, width: this.width - 25, height: 1, decorations: true },\n      { x: (this.width - width1 - 10) / 2, y: 0,          width: width1 + 10,     height: height, clear: true, color: false, labelColor: this.color, labelWidth: width1, label: text  },\n      { x: x2,                             y: 0,          width: width2 + 10,     height: height, clear: true, color: false, labelColor: this.color, labelWidth: width2, label: text2 }\n    ];\n\n    return this.base(this.prop('scaleline', scaleline), params);\n  },\n\n  decorateFeature: function (feature, context) {\n    var strand = this.prop('strand');\n    var height = this.prop('height');\n    var x      = strand === 1 ? this.width - 25 : 25;\n\n    context.strokeStyle = this.color;\n\n    context.beginPath();\n    context.moveTo(x,                 height * 0.25);\n    context.lineTo(x + (strand * 20), height * 0.5);\n    context.lineTo(x,                 height * 0.75);\n    context.closePath();\n    context.stroke();\n    context.fill();\n  }\n});","Genoverse.Track.Controller.Static = Genoverse.Track.Controller.extend({\n  addDomElements: function () {\n    this.base();\n\n    this.image = $('<img>').appendTo(this.imgContainer);\n\n    this.container.toggleClass('gv-track-container gv-track-container-static').prepend(this.imgContainer);\n    this.scrollContainer.add(this.messageContainer).remove();\n  },\n\n  reset: function () {\n    delete this.stringified;\n    this.base.apply(this, arguments);\n  },\n\n  setWidth: function (width) {\n    this.base(width);\n    this.image.width = this.width;\n  },\n\n  makeFirstImage: function () {\n    this.base.apply(this, arguments);\n    this.container.css('left', 0);\n    this.imgContainer.show();\n  },\n\n  makeImage: function (params) {\n    if (this.prop('disabled')) {\n      return $.Deferred().resolve();\n    }\n\n    var features = this.view.positionFeatures(this.model.findFeatures(params.chr, params.start, params.end), params);\n\n    if (features) {\n      var string = JSON.stringify(features);\n\n      if (this.stringified !== string) {\n        var height = this.prop('height');\n\n        params.width         = this.width;\n        params.featureHeight = height;\n\n        this.render(features, this.image.data(params));\n        this.imgContainer.children(':last').show();\n        this.resize(height, undefined, false);\n\n        this.stringified = string;\n      }\n    }\n\n    return $.Deferred().resolve();\n  }\n});\n\nGenoverse.Track.Model.Static = Genoverse.Track.Model.extend({\n  url            : false,\n  checkDataRange : function () { return true; }\n});\n\nGenoverse.Track.View.Static = Genoverse.Track.View.extend({\n  featureMargin : { top: 0, right: 1, bottom: 0, left: 1 },\n\n  positionFeature : $.noop,\n  scaleFeatures   : function (features) { return features; },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    for (var i = 0; i < features.length; i++) {\n      this.drawFeature(features[i], featureContext, labelContext, scale);\n    }\n  }\n});\n\nGenoverse.Track.Static = Genoverse.Track.extend({\n  controls   : 'off',\n  resizable  : false,\n  controller : Genoverse.Track.Controller.Static,\n  model      : Genoverse.Track.Model.Static,\n  view       : Genoverse.Track.View.Static\n});\n","Genoverse.Track.dbSNP = Genoverse.Track.extend({\n  id               : 'dbSNP',\n  name             : 'dbSNP',\n  info             : 'All sequence variants from the database of Single Nucleotide Polymorphisms (dbSNP)',\n  url              : '//rest.ensembl.org/overlap/region/human/__CHR__:__START__-__END__?feature=variation;content-type=application/json',\n  dataRequestLimit : 5000000, // As per e! REST API restrictions\n  threshold        : 1e5,\n  labels           : false,\n  legend           : true,\n  autoHeight       : true,\n  colorMap         : {\n    transcript_ablation                : '#ff0000',\n    splice_acceptor_variant            : '#FF581A',\n    splice_donor_variant               : '#FF581A',\n    stop_gained                        : '#ff0000',\n    frameshift_variant                 : '#9400D3',\n    stop_lost                          : '#ff0000',\n    start_lost                         : '#ffd700',\n    transcript_amplification           : '#ff69b4',\n    inframe_insertion                  : '#ff69b4',\n    inframe_deletion                   : '#ff69b4',\n    missense_variant                   : '#ffd700',\n    protein_altering_variant           : '#FF0080',\n    splice_region_variant              : '#ff7f50',\n    incomplete_terminal_codon_variant  : '#ff00ff',\n    stop_retained_variant              : '#76ee00',\n    synonymous_variant                 : '#76ee00',\n    coding_sequence_variant            : '#458b00',\n    mature_miRNA_variant               : '#458b00',\n    '5_prime_UTR_variant'              : '#7ac5cd',\n    '3_prime_UTR_variant'              : '#7ac5cd',\n    non_coding_transcript_exon_variant : '#32cd32',\n    intron_variant                     : '#02599c',\n    NMD_transcript_variant             : '#ff4500',\n    non_coding_transcript_variant      : '#32cd32',\n    upstream_gene_variant              : '#a2b5cd',\n    downstream_gene_variant            : '#a2b5cd',\n    TFBS_ablation                      : '#a52a2a',\n    TFBS_amplification                 : '#a52a2a',\n    TF_binding_site_variant            : '#a52a2a',\n    regulatory_region_ablation         : '#a52a2a',\n    regulatory_region_amplification    : '#a52a2a',\n    feature_elongation                 : '#7f7f7f',\n    regulatory_region_variant          : '#a52a2a',\n    feature_truncation                 : '#7f7f7f',\n    intergenic_variant                 : '#636363'\n  },\n\n  insertFeature: function (feature) {\n    feature.color  = this.prop('colorMap')[feature.consequence_type];\n    feature.legend = feature.consequence_type;\n\n    if (feature.start > feature.end) {\n      feature.decorations = true;\n    }\n\n    this.base(feature);\n  },\n\n  decorateFeature: function (feature, context, scale) {\n    context.fillStyle = feature.color;\n    context.beginPath();\n    context.moveTo(feature.position[scale].X - 3, feature.position[scale].Y + this.featureHeight);\n    context.lineTo(feature.position[scale].X,     feature.position[scale].Y + this.featureHeight - 4);\n    context.lineTo(feature.position[scale].X + 3, feature.position[scale].Y + this.featureHeight);\n    context.fill();\n\n    if (scale > 1) {\n      context.fillRect(feature.position[scale].X - 0.5, feature.position[scale].Y, 1.5, feature.position[scale].height);\n    }\n  },\n\n  populateMenu: function (feature) {\n    var deferred = $.Deferred();\n    var menu     = [{\n      title       : '<a href=\"http://www.ensembl.org/Homo_sapiens/Variation/Summary?v=' + feature.id + '\" target=\"_blank\">' + feature.id + '</a>',\n      Location    : feature.chr + ':' + feature.start + '-' + feature.end,\n      Consequence : feature.consequence_type,\n      Alleles     : feature.alleles.join(', ')\n    }];\n\n    $.ajax({\n      url      : '//rest.ensembl.org/variation/human/' + feature.id + '?population_genotypes=1;content-type=application/json',\n      dataType : 'json',\n      success  : function (data) {\n        var populationGenotypes = $.grep(data.population_genotypes, function (pop) { return /1000GENOMES.+ALL/.test(pop.population); }); // Only considering 1000 Genomes: ALL population\n        var frequencies         = {};\n        var pop, i, j;\n\n        if (populationGenotypes.length) {\n          for (i = 0; i < populationGenotypes.length; i++) {\n            pop           = populationGenotypes[i];\n            pop.frequency = parseFloat(pop.frequency, 10);\n            pop.count     = parseInt(pop.count, 10);\n\n            frequencies[pop.population] = frequencies[pop.population] || [];\n            frequencies[pop.population].push(pop);\n          }\n\n          for (i in frequencies) {\n            frequencies[i].sort(function (a, b) { return a.count < b.count; });\n\n            pop = {\n              title    : i + ' population genotypes',\n              Genotype : [ 'Frequency', 'Count' ],\n              start    : false,\n              end      : false\n            };\n\n            for (j in frequencies[i]) {\n              pop[frequencies[i][j].genotype] = [ (frequencies[i][j].frequency * 100).toFixed(2) + '%', frequencies[i][j].count ];\n            }\n\n            menu.push(pop);\n          }\n\n          pop = {\n            start : false,\n            end   : false\n          };\n\n          pop['<a href=\"http://www.ensembl.org/Homo_sapiens/Variation/Population?v=' + feature.id + '\" target=\"_blank\">See all population genotypes</a>'] = '';\n\n          menu.push(pop);\n        }\n\n        deferred.resolve(menu);\n      }\n    });\n\n    return deferred;\n  },\n\n  // Different settings for different zoom level\n  5000: { // more than 5k\n    bump: false\n  },\n  1: { // > 1 base-pair, but less then 5k\n    bump: true\n  }\n\n});\n","Genoverse.Track.Model.File.BAM = Genoverse.Track.Model.File.extend({\n  getData: function (chr, start, end) {\n    var model    = this;\n    var deferred = $.Deferred();\n\n    if (!this.bamFile) {\n      if (this.url) {\n        this.bamFile = new dallianceLib.URLFetchable(this.url);\n        this.baiFile = new dallianceLib.URLFetchable(this.url + this.prop('indexExt'));\n      } else if (this.dataFile && this.indexFile) {\n        this.bamFile = new dallianceLib.BlobFetchable(this.dataFile);\n        this.baiFile = new dallianceLib.BlobFetchable(this.indexFile);\n      } else {\n        return deferred.rejectWith(model, [ 'BAM files must be accompanied by a .bai index file' ]);\n      }\n    }\n\n    dallianceLib.makeBam(this.bamFile, this.baiFile, null, function (bam, makeBamError) {\n      if (makeBamError) {\n        console.log(makeBamError);\n      } else {\n        bam.fetch(chr, start, end, function (features, fetchBamError) {\n          if (fetchBamError) {\n            console.log(fetchBamError);\n          } else {\n            model.receiveData(features, chr, start, end);\n            deferred.resolveWith(model);\n          }\n        });\n      }\n    });\n\n    return deferred;\n  },\n\n  insertFeature: function (feature) {\n    feature.id       = feature.chr + ':' + feature.readName + ':' + feature.pos;\n    feature.start    = feature.pos + 1;\n    feature.end      = feature.start + feature.seq.length;\n    feature.sequence = feature.seq;\n\n    return this.base(feature);\n  }\n});\n","Genoverse.Track.Model.File.BED = Genoverse.Track.Model.File.extend({\n  parseData: function (data, chr) {\n    var lines       = typeof data === 'string' ? data.split('\\n') : data;\n    var thinHeight  = this.prop('thinHeight');\n    var thickHeight = this.prop('thickHeight');\n    var fields, len, feature, subfeatures, subfeature, blockSizes, blockStarts, j, thinFeature, thinFeature1, thinFeature2, thickFeature;\n\n    function filterNumber(n) {\n      return !isNaN(n);\n    }\n\n    for (var i = 0; i < lines.length; i++) {\n      fields = lines[i].split('\\t').filter(function(f) { return f; });\n\n      if (fields.length < 3 || fields[0] == 'track' || fields[0] == 'browser') {\n        continue;\n      }\n\n      len = fields.length;\n\n      if (fields[0] == chr || fields[0].toLowerCase() == 'chr' + chr || fields[0].match('[^1-9]' + chr + '$')) {\n        feature = {\n          chr             : chr,\n          start           : parseInt(fields[1], 10),\n          end             : parseInt(fields[2], 10),\n          name            : fields[3],\n          color           : '#000000',\n          originalFeature : fields\n        };\n\n        if (len > 3) { feature.score  = parseFloat(fields[4], 10); }\n        if (len > 5) { feature.strand = fields[5];                 }\n\n        if (len > 7) {\n          feature.thickStart = fields[6];\n          feature.thickEnd   = fields[7];\n          feature.drawThick  = (feature.thickStart === feature.thickEnd) ? false : true;\n        }\n\n        if (fields[8]) {\n          feature.color = 'rgb(' + fields[8] + ')';\n        } else {\n          feature.color = this.scoreColor(isNaN(feature.score) ? 1000 : feature.score);\n        }\n\n        if (len == 12) { // subfeatures present\n          feature.blockCount = parseInt(fields[9],10);\n\n          subfeatures = [];\n          blockSizes  = fields[10].split(',').filter(filterNumber);\n          blockStarts = fields[11].split(',').filter(filterNumber);\n\n          for (j = 0; j < blockSizes.length; j++) {\n            subfeature = {\n              start  : feature.start + parseInt(blockStarts[j], 10),\n              height : thinHeight // if subfeature lies entirely left / right to [ thickStart, thickEnd ]\n            };\n\n            subfeature.end = subfeature.start + parseInt(blockSizes[j], 10);\n\n            if (feature.drawThick && subfeature.start <= feature.thickEnd && subfeature.end >= feature.thickStart) {\n              // some kind of an overlap for sure\n              if (subfeature.start > feature.thickStart && subfeature.end < feature.thickEnd) {\n                // subfeature within thickBlock, draw thick\n                subfeature.height = thickHeight;\n                subfeatures.push(subfeature);\n              } else if (subfeature.start < feature.thickStart && subfeature.end <= feature.thickEnd) {\n                // left overlap, split subfeature into 2 - thin | thick\n                thinFeature  = $.extend({}, subfeature, { end: feature.thickStart });\n                thickFeature = $.extend({}, subfeature, { start: feature.thickStart, height: thickHeight });\n\n                subfeatures = subfeatures.concat([thinFeature, thickFeature]);\n              } else if (subfeature.start >= feature.thickStart && subfeature.end > feature.thickEnd) {\n                // right overlap, split subfeature into 2 - thick | thin\n                thinFeature  = $.extend({}, subfeature, { start: feature.thickEnd });\n                thickFeature = $.extend({}, subfeature, { end: feature.thickEnd, height: thickHeight });\n\n                subfeatures = subfeatures.concat([ thickFeature, thinFeature ]);\n              }else{\n                // thickBlock lies within subfeature, split into 3 - thin | thick | thin\n                // the least possible case but lets be prepared for the outliers\n                thinFeature1 = $.extend({}, subfeature, { end: feature.thickStart });\n                thinFeature2 = $.extend({}, subfeature, { start: feature.thickEnd });\n                thickFeature = { start: feature.thickStart, end: feature.thickEnd, height: thickHeight };\n\n                subfeatures = subfeatures.concat([ thinFeature1, thickFeature, thinFeature2 ]);\n              }\n            } else {\n              // no thick block\n              subfeatures.push(subfeature);\n            }\n          }\n\n          if (subfeatures.length) {\n            feature.subFeatures = subfeatures;\n          }\n        }\n\n        this.insertFeature(feature);\n      }\n    }\n  },\n\n  // As per https://genome.ucsc.edu/FAQ/FAQformat.html#format1 specification\n  scoreColor: function (score) {\n    if (score <= 166) { return 'rgb(219,219,219)'; }\n    if (score <= 277) { return 'rgb(186,186,186)'; }\n    if (score <= 388) { return 'rgb(154,154,154)'; }\n    if (score <= 499) { return 'rgb(122,122,122)'; }\n    if (score <= 611) { return 'rgb(94,94,94)';    }\n    if (score <= 722) { return 'rgb(67,67,67)';    }\n    if (score <= 833) { return 'rgb(42,42,42)';    }\n    if (score <= 944) { return 'rgb(21,21,21)';    }\n    return '#000000';\n  }\n});\n","Genoverse.Track.Model.File.GFF = Genoverse.Track.Model.File.extend({\n  parseData: function (text, chr) {\n    var lines = text.split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n      if (!lines[i].length || lines[i].indexOf('#') === 0) {\n        continue;\n      }\n\n      var fields = lines[i].split('\\t');\n\n      if (fields.length < 5) {\n        continue;\n      }\n\n      var seqId = fields[0].toLowerCase();\n\n      if (\n        seqId == chr                      ||\n        seqId == 'chr' + chr              ||\n        seqId.match('[^1-9]' + chr + '$') ||\n        seqId.match('^' + chr + '\\\\b')\n      ) {\n        this.insertFeature({\n          id     : fields.slice(0, 5).join('|'),\n          chr    : chr,\n          start  : parseInt(fields[3], 10),\n          end    : parseInt(fields[4], 10),\n          source : fields[1],\n          type   : fields[2],\n          score  : fields[5],\n          strand : fields[6] === '-' ? -1 : 1,\n          label  : fields[1] + ' ' + fields[2] + ' ' + fields[3] + '-' + fields[4]\n        });\n      }\n    }\n  }\n});\n\nGenoverse.Track.Model.File.GTF = Genoverse.Track.Model.File.GFF;\n","Genoverse.Track.Model.File.VCF = Genoverse.Track.Model.File.extend({\n  getData: function (chr, start, end) {\n    var deferred = $.Deferred();\n    var model    = this;\n\n    if (!this.prop('gz')) {\n      return this.base.apply(this, arguments);\n    }\n\n    if (!this.vcfFile) {\n      if (this.url) {\n        this.vcfFile = new dallianceLib.URLFetchable(this.url);\n        this.tbiFile = new dallianceLib.URLFetchable(this.url + this.prop('indexExt'));\n      } else if (this.dataFile && this.indexFile) {\n        this.vcfFile = new dallianceLib.BlobFetchable(this.dataFile);\n        this.tbiFile = new dallianceLib.BlobFetchable(this.indexFile);\n      } else {\n        return deferred.rejectWith(model, [ 'GZipped VCF files must be accompanied by a .tbi index file' ]);\n      }\n    }\n\n    this.makeVCF(this.vcfFile, this.tbiFile).then(function (vcf) {\n      model.cachedVCF = vcf;\n\n      vcf.getRecords(chr, start, end, function (records) {\n        model.receiveData(records, chr, start, end);\n        deferred.resolveWith(model);\n      });\n    });\n\n    return deferred;\n  },\n\n  makeVCF: function (vcfFile, tbiFile) {\n    var deferred = $.Deferred();\n\n    if (this.cachedVCF) {\n      deferred.resolve(this.cachedVCF);\n    } else {\n      var vcf = new VCFReader(vcfFile, tbiFile);\n\n      vcf.readTabix(function (tabix) {\n        vcf.tabix = tabix;\n        deferred.resolve(vcf);\n      });\n    }\n\n    return deferred;\n  },\n\n  parseData: function (text, chr) {\n    var lines   = text.split('\\n');\n    var maxQual = this.allData ? this.prop('maxQual') || 0 : false;\n\n    for (var i = 0; i < lines.length; i++) {\n      if (!lines[i].length || lines[i].indexOf('#') === 0) {\n        continue;\n      }\n\n      var fields = lines[i].split('\\t');\n\n      if (fields.length < 5) {\n        continue;\n      }\n\n      if (fields[0] == chr || fields[0] == 'chr' + chr) {\n        var id      = fields.slice(0, 3).join('|');\n        var start   = parseInt(fields[1], 10);\n        var alleles = fields[4].split(',');\n\n        alleles.unshift(fields[3]);\n\n        for (var j = 0; j < alleles.length; j++) {\n          var end = start + alleles[j].length - 1;\n\n          this.insertFeature({\n            id              : id + '|' + alleles[j],\n            sort            : j,\n            chr             : chr,\n            start           : start,\n            end             : end,\n            width           : end - start,\n            allele          : j === 0 ? 'REF' : 'ALT',\n            sequence        : alleles[j],\n            label           : alleles[j],\n            labelColor      : '#FFFFFF',\n            originalFeature : fields\n          });\n        }\n\n        if (maxQual !== false) {\n          maxQual = Math.max(maxQual, fields[5]);\n        }\n      }\n    }\n\n    if (maxQual) {\n      this.prop('maxQual', maxQual);\n    }\n  }\n});\n","Genoverse.Track.Model.File.WIG = Genoverse.Track.Model.Graph.Bar.extend({\n  dataType: 'text',\n\n  getData: function () {\n    if (!this.url) {\n      this.isLocal  = true;\n      this.dataFile = this.track.dataFile;\n\n      return Genoverse.Track.Model.File.prototype.getData.apply(this, arguments);\n    }\n\n    return this.base.apply(this, arguments);\n  },\n\n  parseData: function (text, chr, s, e) {\n    var lines    = text.split('\\n');\n    var features = [];\n    var fields, chrom, start, step, span, line, feature, i;\n\n    while (lines.length && (line = lines.shift())) {\n      if (line.indexOf('#') != -1 || line.indexOf('browser') != -1 || line.indexOf('track') != -1) {\n        continue;\n      } else {\n        break;\n      }\n    }\n\n    if (line) {\n      fields = line.split(/\\s+/);\n      chrom  = parseInt(fields[1].split('=')[1].replace('chr',''));\n\n      if (fields[0] == 'fixedStep') {\n        start = parseInt(fields[2].split('=')[1]);\n        step  = parseInt(fields[3].split('=')[1]);\n        span  = fields[4] ? parseInt(fields[4].split('=')[1]) : 1;\n\n        for (i = 0; i < lines.length; i++){\n          features.push({\n            chr    : chrom,\n            start  : start,\n            end    : start + span,\n            height : parseFloat(lines[i])\n          });\n\n          start += step;\n        }\n      } else if (fields[0] == 'variableStep') {\n        span = fields[2] ? parseInt(fields[2].split('=')[1]) : 1;\n\n        for (i = 0; i < lines.length; i++){\n          fields  = lines[i].split(/\\s+/);\n          feature = {\n            chr    : chrom,\n            start  : parseInt(fields[0], 10),\n            height : parseFloat(fields[1])\n          };\n\n          feature.end = feature.start + span;\n\n          features.push(feature);\n        }\n      }\n    }\n\n    return this.base.call(this, features, chr, s, e);\n  }\n});\n","// Ensembl REST API Gene model\nGenoverse.Track.Model.Gene.Ensembl = Genoverse.Track.Model.Gene.extend({\n  url              : '//rest.ensembl.org/overlap/region/human/__CHR__:__START__-__END__?feature=gene;content-type=application/json',\n  dataRequestLimit : 5000000, // As per e! REST API restrictions\n\n  // The url above responds in json format, data is an array\n  // We assume that parents always preceed children in data array, gene -> transcript -> exon\n  // See rest.ensembl.org/documentation/info/feature_region for more details\n  parseData: function (data, chr) {\n    for (var i = 0; i < data.length; i++) {\n      var feature = data[i];\n\n      if (feature.feature_type === 'gene' && !this.featuresById[feature.id]) {\n        feature.chr         = feature.chr || chr;\n        feature.label       = parseInt(feature.strand, 10) === 1 ? (feature.external_name || feature.id) + ' >' : '< ' + (feature.external_name || feature.id);\n        feature.transcripts = [];\n\n        this.insertFeature(feature);\n      }\n    }\n  }\n});\n","Genoverse.Track.Model.Sequence.Ensembl = Genoverse.Track.Model.Sequence.extend({\n  url              : '//rest.ensembl.org/sequence/region/human/__CHR__:__START__-__END__?content-type=text/plain', // Example url\n  dataRequestLimit : 10000000 // As per e! REST API restrictions\n});\n","Genoverse.Track.Model.Sequence.Fasta = Genoverse.Track.Model.Sequence.extend({\n  url  : 'http://genoverse.org/data/Homo_sapiens.GRCh37.72.dna.chromosome.1.fa', // Example url\n\n  // Following settings could be left undefined and will be detected automatically via .getStartByte()\n  startByte  : undefined, // Byte in the file where the sequence actually starts\n  lineLength : undefined, // Length of the sequence line in the file\n\n  // TODO: Check if URL provided\n\n  getData: function (chr, start, end) {\n    var deferred = $.Deferred();\n\n    $.when(this.getStartByte()).done(function () {\n      start = start - start % this.chunkSize + 1;\n      end   = end + this.chunkSize - end % this.chunkSize;\n\n      var startByte = start - 1 + Math.floor((start - 1) / this.lineLength) + this.startByte;\n      var endByte   = end   - 1 + Math.floor((end   - 1) / this.lineLength) + this.startByte;\n\n      $.ajax({\n        url       : this.parseURL(),\n        dataType  : this.dataType,\n        context   : this,\n        headers   : { 'Range' : 'bytes=' + startByte + '-' + endByte },\n        xhrFields : this.xhrFields,\n        success   : function (data) { this.receiveData(data, chr, start, end); },\n        error     : this.track.controller.showError\n      }).done(function () { deferred.resolveWith(this); }).fail(function () { deferred.rejectWith(this); });\n    }).fail(function () { deferred.rejectWith(this); });\n\n    return deferred;\n  },\n\n  getStartByte: function () {\n    if (this.startByteRequest) {\n      return this.startByteRequest;\n    }\n\n    if (this.startByte === undefined || this.lineLength === undefined) {\n      this.startByteRequest = $.ajax({\n        url       : this.parseURL(),\n        dataType  : 'text',\n        context   : this,\n        headers   : { 'Range': 'bytes=0-300' },\n        xhrFields : this.xhrFields,\n        success   : function (data) {\n          if (data.indexOf('>') === 0) {\n            this.startByte = data.indexOf('\\n') + 1;\n          } else {\n            this.startByte = 0;\n          }\n\n          this.lineLength = data.indexOf('\\n', this.startByte) - this.startByte;\n        }\n      });\n\n      return this.startByteRequest;\n    }\n  }\n});\n","// Ensembl REST API Transcript model\nGenoverse.Track.Model.Transcript.Ensembl = Genoverse.Track.Model.Transcript.extend({\n  url              : '//rest.ensembl.org/overlap/region/human/__CHR__:__START__-__END__?feature=transcript;feature=exon;feature=cds;content-type=application/json',\n  dataRequestLimit : 5000000, // As per e! REST API restrictions\n\n  setDefaults: function () {\n    this.geneIds   = {};\n    this.seenGenes = 0;\n\n    this.base.apply(this, arguments);\n  },\n\n  // The url above responds in json format, data is an array\n  // See rest.ensembl.org/documentation/info/overlap_region for more details\n  parseData: function (data, chr) {\n    var model        = this;\n    var featuresById = this.featuresById;\n    var ids          = [];\n\n    data.filter(function (d) { return d.feature_type === 'transcript'; }).forEach(function (feature, i) {\n      if (!featuresById[feature.id]) {\n        model.geneIds[feature.Parent] = model.geneIds[feature.Parent] || ++model.seenGenes;\n\n        feature.chr         = feature.chr || chr;\n        feature.label       = parseInt(feature.strand, 10) === 1 ? (feature.external_name || feature.id) + ' >' : '< ' + (feature.external_name || feature.id);\n        feature.sort        = (model.geneIds[feature.Parent] * 1e10) + (feature.logic_name.indexOf('ensembl_havana') === 0 ? 0 : 2e9) + (feature.biotype === 'protein_coding' ? 0 : 1e9) + feature.start + i;\n        feature.cdsStart    = Infinity;\n        feature.cdsEnd      = -Infinity;\n        feature.exons       = {};\n        feature.subFeatures = [];\n\n        model.insertFeature(feature);\n      }\n\n      ids.push(feature.id);\n    });\n\n    data.filter(function (d) { return d.feature_type === 'cds' && featuresById[d.Parent]; }).forEach(function (cds) {\n      featuresById[cds.Parent].cdsStart = Math.min(featuresById[cds.Parent].cdsStart, cds.start);\n      featuresById[cds.Parent].cdsEnd   = Math.max(featuresById[cds.Parent].cdsEnd,   cds.end);\n    });\n\n    data.filter(function (d) { return d.feature_type === 'exon' && featuresById[d.Parent] && !featuresById[d.Parent].exons[d.id]; }).forEach(function (exon) {\n      if (exon.end < featuresById[exon.Parent].cdsStart || exon.start > featuresById[exon.Parent].cdsEnd) {\n        exon.utr = true;\n      } else if (exon.start < featuresById[exon.Parent].cdsStart) {\n        featuresById[exon.Parent].subFeatures.push($.extend({ utr: true }, exon, { end: featuresById[exon.Parent].cdsStart }));\n\n        exon.start = featuresById[exon.Parent].cdsStart;\n      } else if (exon.end > featuresById[exon.Parent].cdsEnd) {\n        featuresById[exon.Parent].subFeatures.push($.extend({ utr: true }, exon, { start: featuresById[exon.Parent].cdsEnd }));\n\n        exon.end = featuresById[exon.Parent].cdsEnd;\n      }\n\n      featuresById[exon.Parent].subFeatures.push(exon);\n      featuresById[exon.Parent].exons[exon.id] = exon;\n    });\n\n    ids.forEach(function (id) {\n      featuresById[id].subFeatures.sort(function (a, b) { return a.start - b.start; });\n    });\n  }\n});\n","Genoverse.Track.View.Gene.Ensembl = Genoverse.Track.View.Gene.extend({\n  setFeatureColor: function (feature) {\n    var processed_transcript = {\n      'sense_intronic'           : 1,\n      'sense_overlapping'        : 1,\n      'processed_transcript'     : 1,\n      'nonsense_mediated_decay'  : 1,\n      'non_stop_decay'           : 1,\n      'antisense'                : 1,\n      'retained_intron'          : 1,\n      'tec'                      : 1,\n      'non_coding'               : 1,\n      'ambiguous_orf'            : 1,\n      'disrupted_domain'         : 1,\n      '3prime_overlapping_ncrna' : 1\n    };\n\n    feature.color = '#000000';\n\n    if (feature.logic_name.indexOf('ensembl_havana') === 0) {\n      feature.color  = '#CD9B1D';\n      feature.legend = 'Merged Ensembl/Havana';\n    } else if (processed_transcript[feature.biotype]) {\n      feature.color  = '#0000FF';\n      feature.legend = 'Processed transcript';\n    } else if (feature.biotype === 'protein_coding') {\n      feature.color  = '#A00000';\n      feature.legend = 'Protein coding';\n    } else if (feature.biotype.indexOf('pseudogene') > -1) {\n      feature.color  = '#666666';\n      feature.legend = 'Pseudogene';\n    } else if (/rna/i.test(feature.biotype)) {\n      feature.color  = '#8B668B';\n      feature.legend = 'RNA gene';\n    } else if (/^tr_.+_gene$/i.test(feature.biotype)) {\n      feature.color  = '#CD6600';\n      feature.legend = 'TR gene';\n    } else if (/^ig_.+_gene$/i.test(feature.biotype)) {\n      feature.color  = '#8B4500';\n      feature.legend = 'IG gene';\n    }\n\n    feature.labelColor = feature.color;\n  }\n});","Genoverse.Track.View.SequenceVariation = Genoverse.Track.View.Sequence.extend({\n  featureHeight : 15,\n  featureMargin : { top: 0, right: 0, bottom: 4, left: 0 },\n  bump          : true,\n  showLegend    : false,\n\n  positionFeature: function (feature, params) {\n    var position = feature.position[params.scale];\n\n    if (feature.alt_allele) {\n      if (!position.positioned) {\n        position.reference = { end: position.start + feature.ref_allele.length * params.scale };\n      }\n\n      position.reference.x = position.reference.end - params.scaledStart;\n    }\n\n    this.base(feature, params);\n  },\n\n  bumpFeature: function (bounds, feature) {\n    if (feature.alt_allele) {\n      this.base.apply(this, arguments);\n    }\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var drawing = { seq: [], snv: [] };\n\n    for (var i = 0; i < features.length; i++) {\n      drawing[features[i].alt_allele ? 'snv' : 'seq'].push(features[i]);\n    }\n\n    this.base(drawing.seq, featureContext, labelContext, scale);\n    this.highlightSNVs(drawing.snv, featureContext, scale);\n    this.base(drawing.snv, featureContext, labelContext, scale);\n    this.outlineSNVs(drawing.snv, featureContext, scale); // Redraw the outline for SNVs, since the feature will have been drawn on top of some of the outline created by highlightSNVs\n  },\n\n  highlightSNVs: function (features, context, scale) {\n    var position, positionX, positionY;\n\n    for (var i = 0; i < features.length; i++) {\n      position  = features[i].position[scale];\n      positionX = [ position.X, position.reference.x, position.X + position.width ];\n\n      if (positionX[2] < 0 || positionX[0] > this.width) {\n        continue;\n      }\n\n      if (positionX[0] < 0 || positionX[2] > this.width) {\n        this.truncateForDrawing(positionX);\n      }\n\n      positionY = [ 0, position.Y - this.featureMargin.bottom / 2, position.Y, position.Y + this.featureHeight ];\n\n      if (!features[i].highlightColor) {\n        this.setHighlightColor(features[i]);\n      }\n\n      context.strokeStyle = context.fillStyle = features[i].highlightColor;\n      context.lineWidth   = 2;\n\n      context.beginPath();\n      context.moveTo(positionX[0], positionY[0]);\n      context.lineTo(positionX[1], positionY[0]);\n      context.lineTo(positionX[1], positionY[1]);\n      context.lineTo(positionX[2], positionY[2]);\n      context.lineTo(positionX[2], positionY[3]);\n      context.lineTo(positionX[0], positionY[3]);\n      context.closePath();\n      context.stroke();\n\n      context.lineWidth   = 1;\n      context.globalAlpha = 0.5;\n\n      context.fill();\n\n      context.globalAlpha = 1;\n    }\n  },\n\n  outlineSNVs: function (features, context, scale) {\n    var position, positionX, positionY;\n\n    for (var i = 0; i < features.length; i++) {\n      position  = features[i].position[scale];\n      positionX = [ position.X, position.X + position.width ];\n      positionY = [ position.Y, position.Y + this.featureHeight ];\n\n      context.strokeStyle = features[i].highlightColor;\n\n      context.lineWidth = 2;\n\n      context.beginPath();\n      context.moveTo(positionX[1], positionY[0]);\n      context.lineTo(positionX[1], positionY[1]);\n      context.lineTo(positionX[0], positionY[1]);\n      context.lineTo(positionX[0], positionY[0]);\n      context.stroke();\n\n      context.lineWidth = 1;\n    }\n  },\n\n  truncateForDrawing: function (positionX) {\n    for (var i in positionX) {\n      positionX[i] = Math.min(Math.max(positionX[i], -1), this.width + 1);\n    }\n  },\n\n  setHighlightColor: function (feature) {\n    feature.highlightColor = feature.alt_allele === '-' || feature.alt_allele.length < feature.ref_allele.length ? '#D31D00' : '#1DD300';\n  }\n});\n","Genoverse.Track.View.Transcript.Ensembl = Genoverse.Track.View.Transcript.extend({\n  setFeatureColor: function (feature) {\n    Genoverse.Track.View.Gene.Ensembl.prototype.setFeatureColor(feature);\n\n    for (var i = 0; i < (feature.subFeatures || []).length; i++) {\n      if (feature.subFeatures[i].utr) {\n        feature.subFeatures[i].color       = false;\n        feature.subFeatures[i].borderColor = feature.color;\n      }\n    }\n  }\n});","Genoverse.Track.File.BAM = Genoverse.Track.File.extend({\n  name      : 'BAM',\n  indexExt  : '.bai',\n  threshold : 100000,\n  largeFile : true,\n  model     : Genoverse.Track.Model.File.BAM,\n  view      : Genoverse.Track.View.Sequence.extend({\n    bump       : true,\n    autoHeight : true\n  }),\n\n  click: function () {\n    var menu = this.base.apply(this, arguments);\n\n    if (menu) {\n      menu.addClass('gv-wrap-values');\n    }\n\n    return menu;\n  },\n\n  populateMenu: function (feature) {\n    var f = $.extend({ title: feature.readName }, feature);\n\n    delete f.sequence;\n    delete f.id;\n\n    return this.base(f);\n  }\n});\n","Genoverse.Track.File.BED = Genoverse.Track.File.extend({\n  name                : 'BED',\n  model               : Genoverse.Track.Model.File.BED,\n  bump                : true,\n  featureHeight       : 10,\n  thickHeight         : 10,\n  thinHeight          : 7,\n  subFeatureJoinStyle : 'curve',\n\n  populateMenu: function (feature) {\n    var fields = [ false, false, false, 'name', 'score', 'strand', 'thickStart', 'thickEnd', 'itemRgb', 'blockCount', 'blockSizes', 'blockStarts' ]; // First three fields are chr, start, end which are covered by Location\n\n    return feature.originalFeature.reduce(function (menu, val, i) {\n      if (fields[i]) {\n        menu[fields[i]] = val;\n      }\n\n      return menu;\n    }, {\n      title    : '<a target=\"_blank\" href=\"https://genome.ucsc.edu/FAQ/FAQformat.html#format1\">BED feature details</a>',\n      Location : feature.chr + ':' + feature.start + '-' + feature.end\n    });\n  }\n});\n","Genoverse.Track.File.BIGBED = Genoverse.Track.File.BED.extend({\n  name  : 'bigbed',\n  model : Genoverse.Track.Model.File.BED.extend({\n    getData: function (chr, start, end) {\n      var model    = this;\n      var deferred = $.Deferred();\n\n      if (!this.bigbedFile) {\n        this.bigbedFile = this.bigbedFile || (this.url ? new dallianceLib.URLFetchable(this.url) : new dallianceLib.BlobFetchable(this.track.dataFile));\n      }\n\n      var d = $.Deferred().done(function () {\n        model.bwReader.getValues(chr, start, end, function (features, error) {\n          if (!error) {\n            features.sort(function (a, b) { return a.start - b.start; });\n\n            if (features.length) {\n              model.receiveData(features, chr, features[0].start, features[features.length - 1].end);\n            } else {\n              model.receiveData(features, chr, start, end);\n            }\n          }\n\n          deferred.resolveWith(model);\n        });\n      });\n\n      if (this.bwReader) {\n        d.resolve();\n      } else {\n        new BWReader(this.bigbedFile, function (bwReader) {\n          if (bwReader) {\n            model.bwReader = bwReader;\n            d.resolve();\n          } else {\n            model.receiveData([], chr, start, end);\n            return deferred.resolveWith(model);\n          }\n        });\n      }\n\n      return deferred;\n    }\n  })\n});\n\nGenoverse.Track.File.BB = Genoverse.Track.File.BIGBED;\n","Genoverse.Track.File.BIGWIG = Genoverse.Track.Graph.Bar.extend({\n  name   : 'bigwig',\n  height : 100,\n\n  setDefaults: function () {\n    this.bwReader = null; // Not part of model since it needs to be shared between bar and line graphs\n    this.base.apply(this, arguments);\n  },\n\n  getData: function (chr, start, end) {\n    var model    = this;\n    var deferred = $.Deferred();\n\n    if (!this.bigwigFile) {\n      this.bigwigFile = this.bigwigFile || (this.url ? new dallianceLib.URLFetchable(this.url) : new dallianceLib.BlobFetchable(this.track.dataFile));\n    }\n\n    var d = $.Deferred().done(function () {\n      model.prop('bwReader').getValues(chr, start, end, function (features, error) {\n        if (!error) {\n          features.sort(function (a, b) { return a.start - b.start; });\n\n          if (features.length) {\n            model.receiveData(features, chr, features[0].start, features[features.length - 1].end);\n          } else {\n            model.receiveData(features, chr, start, end);\n          }\n        }\n\n        deferred.resolveWith(model);\n      });\n    });\n\n    if (this.prop('bwReader')) {\n      d.resolve();\n    } else {\n      new BWReader(this.bigwigFile, function (bwReader) {\n        if (bwReader) {\n          model.prop('bwReader', bwReader);\n          d.resolve();\n        } else {\n          model.receiveData([], chr, start, end);\n          return deferred.resolveWith(model);\n        }\n      });\n    }\n\n    return deferred;\n  }\n});\n\nGenoverse.Track.File.BW = Genoverse.Track.File.BIGWIG;\n","Genoverse.Track.File.GFF = Genoverse.Track.File.extend({\n  name          : 'GFF',\n  model         : Genoverse.Track.Model.File.GFF,\n  bump          : true,\n  height        : 100,\n  featureHeight : 5\n});\n\nGenoverse.Track.File.GTF = Genoverse.Track.File.GFF;","Genoverse.Track.File.VCF = Genoverse.Track.File.extend({\n  name       : 'VCF',\n  indexExt   : '.tbi',\n  model      : Genoverse.Track.Model.File.VCF,\n  autoHeight : false,\n  maxQual    : undefined, // Set this to the maximum value of the QUAL field in the file in order to color features by QUAL. Only required for large (tabix indexed) files - small ones can calculate this value automatically\n\n  afterSetMVC: function () {\n    if (this.prop('gz')) {\n      this.prop('threshold', 1e5);\n    }\n  },\n\n  populateMenu: function (feature) {\n    return {\n      title  : '<a target=\"_blank\" href=\"http://www.1000genomes.org/node/101\">VCF feature details</a>',\n      CHROM  : feature.originalFeature[0],\n      POS    : feature.originalFeature[1],\n      ID     : feature.originalFeature[2],\n      REF    : feature.originalFeature[3],\n      ALT    : feature.originalFeature[4],\n      QUAL   : feature.originalFeature[5],\n      FILTER : feature.originalFeature[6],\n      INFO   : feature.originalFeature[7].split(';').join('<br />')\n    };\n  },\n\n  1: {\n    view: Genoverse.Track.View.Sequence.extend({\n      bump          : true,\n      labels        : false,\n      featureMargin : { top: 0, right: 0, bottom: 0, left: 0 },\n\n      draw: function (features, featureContext, labelContext, scale) {\n        this.base.apply(this, arguments);\n        this.highlightRef(features, featureContext, scale);\n      },\n\n      highlightRef: function (features, context, scale) {\n        context.strokeStyle = 'black';\n\n        for (var i = 0; i < features.length; i++) {\n          if (features[i].allele === 'REF') {\n            context.strokeRect(features[i].position[scale].X, features[i].position[scale].Y, features[i].position[scale].width, features[i].position[scale].height);\n          }\n        }\n      }\n    })\n  },\n\n  1000: {\n    view: Genoverse.Track.View.extend({\n      bump   : false,\n      labels : false,\n\n      drawFeature: function (feature) {\n        var maxQual = this.prop('maxQual');\n\n        if (maxQual && !feature.color) {\n          var heat  = Math.min(255, Math.floor(255 * (feature.originalFeature[5] || 0) / maxQual)) - 127;\n          var red   = heat > 0 ? 255 : 127 + heat;\n          var green = heat < 0 ? 255 : 127 - heat;\n\n          feature.color = 'rgb(' + red + ',' + green + ',0)';\n        }\n\n        this.base.apply(this, arguments);\n      }\n    })\n  }\n});\n","Genoverse.Track.File.WIG = Genoverse.Track.Graph.Bar.extend({\n  model  : Genoverse.Track.Model.File.WIG,\n  name   : 'wig',\n  height : 100\n});\n","Genoverse.Track.Controller.Graph.Bar = {\n  getClickedFeatures: function (x, y) {\n    var yZero     = this.prop('marginTop') - (this.prop('range')[0] * this.track.getYScale());\n    var scale     = this.scale;\n    var tolerance = scale > 1 ? 0 : 1;\n\n    // Bars with negative values are stored in featurePositions with h < 0.\n    // While this works to a certain degree (fillRect allows negative height, drawing upwards from y), it makes them hard to search for in the RTree - to find such a feature you need to search with y = -h and h = y - h + 1\n    // It is therefore easier to search featuresByChr (i.e. the genomic positions) for a feature overlapping the x of the click, and then filter those results for y position manually.\n    var features = this.prop('featuresByChr')[this.browser.chr].search({\n      x: (x - (tolerance / 2)) / scale,\n      y: 0,\n      w: (1 + tolerance) / scale,\n      h: 1\n    });\n\n    if (features.length) {\n      if (\n        (y <  yZero && features.filter(function (f) { return f.position[scale].bounds.y + f.position[scale].bounds.h <= y && f.position[scale].bounds.y >= y; }).length === 0) ||\n        (y >= yZero && this.featurePositions.search({ x: x, y: y, w: 1, h: 1 }).length === 0)\n      ) {\n        features = [];\n      }\n    }\n\n    return features.length ? [ this.model.sortFeatures(features) ] : [];\n  },\n\n  populateMenu: function (features) {\n    if (!features.length) {\n      return [];\n    }\n\n    var start = features[0].start;\n    var end   = features[features.length - 1].end;\n    var avg   = features[0].start !== features[features.length - 1].start;\n    var menu  = { title: features[0].chr + ':' + (start === end ? start : start + '-' + end) };\n    var values, i;\n\n    function getValues(_features) {\n      var values = _features.map(function (f) { return f.height; }).sort(function (a, b) { return a - b; });\n\n      return {\n        avg: values.reduce(function (n, v) { return n + v; }, 0) / values.length,\n        min: values[0],\n        max: values[values.length - 1]\n      };\n    }\n\n    if (avg) {\n      if (features.length === 1) {\n        values = getValues(features);\n\n        menu['Average value'] = values.avg;\n        menu['Min value']     = values.min;\n        menu['Max value']     = values.max;\n      } else {\n        menu = [ menu ];\n\n        var datasets = this.prop('datasets');\n        var featuresByDataset;\n\n        if (datasets.length) {\n          featuresByDataset = datasets.reduce(function (hash, d) { hash[d.name] = []; return hash; }, {});\n\n          for (i = 0; i < features.length; i++) {\n            featuresByDataset[features[i].dataset].push(features[i]);\n          }\n        } else {\n          datasets          = [{ name: '' }];\n          featuresByDataset = { '': features };\n        }\n\n        for (i = 0; i < datasets.length; i++) {\n          values = getValues(featuresByDataset[datasets[i].name]);\n\n          menu.push($.extend({\n            Average : values.avg,\n            Min     : values.min,\n            Max     : values.max\n          }, datasets[i].name ? { title: datasets[i].name } : {}));\n        }\n      }\n    } else {\n      if (features.length === 1) {\n        menu.Value = features[0].height;\n      } else {\n        for (i = 0; i < features.length; i++) {\n          menu[features[i].dataset] = features[i].height;\n        }\n      }\n    }\n\n    return menu;\n  }\n};\n\nGenoverse.Track.Model.Graph.Bar = Genoverse.Track.Model.Graph.extend({\n  insertFeature: function (feature) {\n    var datasets = this.prop('datasets');\n\n    if (datasets.length) {\n      feature.legend = feature.dataset;\n      feature.color  = (datasets.filter(function (s) { return s.name === feature.dataset; })[0] || { color: this.color }).color;\n    }\n\n    feature.id = feature.id || [ feature.chr, feature.start, feature.end, feature.dataset || '' ].join(':');\n\n    return this.base.apply(this, arguments);\n  }\n});\n\nGenoverse.Track.View.Graph.Bar = Genoverse.Track.View.Graph.extend({\n  scaleFeatures: function (features, scale) {\n    var yScale = this.track.getYScale();\n    var zeroY  = this.prop('marginTop') - this.prop('range')[0] * yScale;\n\n    features = this.base(features, scale);\n\n    for (var i = 0; i < features.length; i++) {\n      features[i].position[scale].height = features[i].height * yScale;\n      features[i].position[scale].y      = zeroY;\n    }\n\n    return features;\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var datasets     = this.featureDataSets(features);\n    var marginBottom = this.prop('margin');\n    var binSize      = scale < 1 ? Math.ceil(1 / scale) : 0;\n    var conf, set, setFeatures, j, binnedFeatures, binStart, bin, f;\n\n    var defaults = {\n      color       : this.color,\n      globalAlpha : this.prop('globalAlpha')\n    };\n\n    for (var i = 0; i < datasets.list.length; i++) {\n      conf        = $.extend({}, defaults, datasets.list[i]);\n      set         = datasets.list[i].name;\n      setFeatures = $.extend(true, [], datasets.features[set] || []);\n\n      if (!setFeatures.length) {\n        continue;\n      }\n\n      if (binSize) {\n        binnedFeatures = [];\n        j              = 0;\n\n        while (j < setFeatures.length) {\n          binStart = setFeatures[j].start;\n          bin      = [];\n\n          while (setFeatures[j] && setFeatures[j].start - binStart < binSize) {\n            bin.push(setFeatures[j++]);\n          }\n\n\n          f = $.extend(true, {}, bin[0], {\n            height : bin.reduce(function (a, b) { return a + b.height; }, 0) / bin.length,\n            end    : bin[bin.length - 1].end\n          });\n\n          [ 'H', 'W', 'height', 'width' ].forEach(function (attr) {\n            f.position[scale][attr] = bin.reduce(function (a, b) { return a + b.position[scale][attr]; }, 0) / bin.length;\n          });\n\n          binnedFeatures.push(f);\n        }\n\n        setFeatures = binnedFeatures;\n      }\n\n      for (j = 0; j < setFeatures.length; j++) {\n        setFeatures[j].color = conf.color;\n      }\n\n      featureContext.globalAlpha = conf.globalAlpha;\n\n      this.base(setFeatures, featureContext, labelContext, scale);\n    }\n\n    // Don't allow features to be drawn in the margins\n    featureContext.clearRect(0, 0,                                  this.width, this.prop('marginTop') - 1);\n    featureContext.clearRect(0, this.prop('height') - marginBottom, this.width, marginBottom);\n  }\n});\n\nGenoverse.Track.Graph.Bar = Genoverse.Track.Graph.extend({\n  type      : 'Bar',\n  model     : Genoverse.Track.Model.Graph.Bar,\n  view      : Genoverse.Track.View.Graph.Bar,\n  threshold : 500000,\n\n  10000: $.extend( // Switch to line graph at 10000bp region\n    Object.keys(Genoverse.Track.Graph.Line.prototype).reduce(function (hash, key) {\n      if (Genoverse.Track.Graph.Line.prototype.hasOwnProperty(key) && !Base.prototype[key]) {\n        hash[key] = Genoverse.Track.Graph.Line.prototype[key];\n      }\n\n      return hash;\n    }, {}), {\n    fill  : true,\n    model : Genoverse.Track.Model.Graph.Line.extend({\n      parseData: function (data, chr, start, end) {\n        var coords = [];\n        var j;\n\n        for (var i = 0; i < data.length; i++) {\n          for (j = data[i].start; j < data[i].end; j++) {\n            coords.push([ j, data[i].height ]);\n          }\n        }\n\n        return this.base([{ chr: chr, start: start, end: end, coords: coords }], chr, start, end);\n      }\n    })\n  }),\n  50000: $.extend( // Switch to sparser line graph at 50000bp region\n    Object.keys(Genoverse.Track.Graph.Line.prototype).reduce(function (hash, key) {\n      if (Genoverse.Track.Graph.Line.prototype.hasOwnProperty(key) && !Base.prototype[key]) {\n        hash[key] = Genoverse.Track.Graph.Line.prototype[key];\n      }\n\n      return hash;\n    }, {}), {\n    fill  : true,\n    model : Genoverse.Track.Model.Graph.Line.extend({\n      parseData: function (data, chr, start, end) {\n        return this.base([{ chr: chr, start: start, end: end, coords: data.map(function (d) { return [ d.start, d.height ]; }) }], chr, start, end);\n      }\n    })\n  })\n});","Genoverse.Track.Controller.Graph.Line = {\n  click: function () {\n    if (this.prop('showPopups')) {\n      this.prop('menus').hide(); // Hide first, because closeMenus causes fadeOut to happen, which doens't look great in this scenario\n      this.browser.closeMenus(this);\n      return Genoverse.Track.Controller.prototype.click.apply(this, arguments);\n    }\n  },\n\n  getClickedFeatures: function (x) {\n    var bounds    = { x: x, y: 0, w: 1, h: 9e99 };\n    var tolerance = this.scale > 1 ? 0 : 1 / this.scale;\n    var xMid      = bounds.x / this.scale;\n    var xRange    = tolerance ? [ Math.floor(xMid - tolerance), Math.ceil(xMid + tolerance) ] : [ Math.floor(xMid), Math.floor(xMid) ];\n    var features  = {};\n\n    this.featurePositions.search(bounds).forEach(function (f) {\n      if (!features[f.dataset]) {\n        features[f.dataset] = f;\n      }\n    });\n\n    return [\n      this.model.sortFeatures(Object.keys(features).map(function (k) {\n        return $.extend(true, {}, features[k], { clickedCoords: features[k].coords.filter(function (c) { return c[0] >= xRange[0] && c[0] <= xRange[1]; }) });\n      }))\n    ];\n  },\n\n  populateMenu: function (features) {\n    if (!features.length || !features[0].clickedCoords.length) {\n      return [];\n    }\n\n    var start = features[0].clickedCoords[0][0];\n    var end   = features[0].clickedCoords[features[0].clickedCoords.length - 1][0];\n    var avg   = start !== end;\n    var menu  = { title: features[0].chr + ':' + (start === end ? start : start + '-' + end) };\n    var m, values, i;\n\n    function getValues(coords) {\n      var values = coords.map(function (c) { return c[1]; }).sort(function (a, b) { return a - b; });\n\n      return {\n        avg: values.reduce(function (n, v) { return n + v; }, 0) / values.length,\n        min: values[0],\n        max: values[values.length - 1]\n      };\n    }\n\n    if (avg) {\n      if (features.length === 1) {\n        values = getValues(features[0].clickedCoords);\n\n        menu['Average value'] = values.avg;\n        menu['Min value']     = values.min;\n        menu['Max value']     = values.max;\n      } else {\n        menu = [ menu ];\n\n        for (i = 0; i < features.length; i++) {\n          values    = getValues(features[i].clickedCoords);\n          m         = { title: features[i].dataset };\n          m.Average = values.avg;\n          m.Min     = values.min;\n          m.Max     = values.max;\n\n          menu.push(m);\n        }\n      }\n    } else {\n      if (features.length === 1) {\n        menu.Value = features[0].clickedCoords[0][1];\n      } else {\n        for (i = 0; i < features.length; i++) {\n          menu[features[i].dataset] = features[i].clickedCoords[0][1];\n        }\n      }\n    }\n\n    return menu;\n  }\n};\n\nGenoverse.Track.Model.Graph.Line = Genoverse.Track.Model.Graph.extend({\n  parseData: function (data, chr, start, end) {\n    var features = [];\n    var feature, x;\n\n    function getX(f) {\n      return typeof f.x !== 'undefined' ? f.x : f.start + (f.start === f.end ? 0 : (f.end - f.start + 1) / 2);\n    }\n\n    data.sort(function (a, b) { return (a.start - b.start) || (a.x - b.x); });\n\n    for (i = 0; i < data.length; i++) {\n      if (typeof data[i].y !== 'undefined' && !data[i].coords) {\n        x = getX(data[i]);\n\n        if (feature && feature.coords[feature.coords.length - 1][0] === x - 1) {\n          feature.coords.push([ x, data[i].y ]);\n          feature.end = x;\n        } else {\n          if (feature) {\n            features.push(feature);\n          }\n\n          feature = $.extend({ coords: [[ x, data[i].y ]], start: x, end: x }, data[i]);\n        }\n      } else {\n        if (feature) {\n          features.push(feature);\n          feature = undefined;\n        }\n\n        features.push(data[i]);\n      }\n    }\n\n    if (feature) {\n      features.push(feature);\n    }\n\n    return this.base(features, chr, start, end);\n  },\n\n  insertFeature: function (feature) {\n    var datasets = this.prop('datasets');\n\n    if (feature.coords) {\n      feature.coords = feature.coords.map(function (c, i) { return c.length > 1 ? c : [ feature.start + i, c ]; }).filter(function (c) { return c[0] >= feature.start && c[0] <= feature.end; });\n    } else if (feature.y) {\n      feature.coords = [[ feature.start + (feature.start === feature.end ? 0 : (feature.end - feature.start + 1) / 2), feature.y ]];\n    } else {\n      feature.coords = [];\n    }\n\n    if (datasets.length) {\n      feature.legend = feature.dataset;\n      feature.color  = (datasets.filter(function (s) { return s.name === feature.dataset; })[0] || { color: this.color }).color;\n    }\n\n    feature.id = feature.id || [ feature.chr, feature.start, feature.end, feature.dataset || '' ].join(':');\n\n    return this.base.apply(this, arguments);\n  }\n});\n\nGenoverse.Track.View.Graph.Line = Genoverse.Track.View.Graph.extend({\n  featureHeight: 1,\n\n  positionFeatures: function (features, params) {\n    var scale  = params.scale;\n    var yScale = this.track.getYScale();\n    var margin = this.prop('marginTop');\n    var zeroY  = margin - this.prop('range')[0] * yScale;\n    var add    = (scale > 1 ? scale / 2 : 0) - params.scaledStart;\n\n    function setCoords(c) {\n      return [ c[0] * scale + add, c[1] * yScale + zeroY ];\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      features[i].coordPositions = features[i].coords.map(setCoords);\n    }\n\n    params.featureHeight = this.prop('height');\n\n    return this.base(features, params);\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    if (!features.length) {\n      return;\n    }\n\n    var datasets     = this.featureDataSets(features);\n    var height       = this.prop('height');\n    var marginTop    = this.prop('marginTop');\n    var marginBottom = this.prop('margin');\n    var baseline     = Math.min(Math.max(marginTop, marginTop - this.prop('range')[0] * this.track.getYScale()), height - marginTop);\n    var binSize      = scale < 1 ? Math.floor(1 / scale) : 0;\n    var set, conf, feature, coords, binnedFeatures, lastBinSize, j, k, binStart, bin, l;\n\n    var defaults = {\n      color       : this.color,\n      fill        : this.prop('fill'),\n      lineWidth   : this.prop('lineWidth'),\n      globalAlpha : this.prop('globalAlpha')\n    };\n\n    for (var i = 0; i < datasets.list.length; i++) {\n      set  = datasets.list[i].name;\n      conf = $.extend({}, defaults, datasets.list[i]);\n\n      for (j = 0; j < (datasets.features[set] || []).length; j++) {\n        feature = datasets.features[set][j];\n        coords  = feature.coordPositions;\n\n        if (coords.length) {\n          if (binSize) {\n            binnedFeatures = [];\n            k              = 0;\n\n            while (k < coords.length) {\n              binStart = feature.coords[k][0];\n              bin      = [];\n\n              while (coords[k] && feature.coords[k][0] - binStart < binSize) {\n                bin.push(coords[k++]);\n              }\n\n              l      = bin.length;\n              bin    = bin.reduce(function (arr, b) { arr[0] += b[0]; arr[1] += b[1]; return arr; }, [ 0, 0 ]);\n              bin[0] = Math.round(bin[0] / l);\n\n              if (binnedFeatures.length && bin[0] === binnedFeatures[binnedFeatures.length - 1][0]) {\n                binnedFeatures[binnedFeatures.length - 1][1] = (binnedFeatures[binnedFeatures.length - 1][1] * lastBinSize + bin[1]) / (lastBinSize + l);\n              } else {\n                binnedFeatures.push([ bin[0], bin[1] / l ]);\n              }\n\n              lastBinSize = l;\n            }\n\n            coords = binnedFeatures;\n          }\n\n          featureContext.fillStyle = featureContext.strokeStyle = conf.color;\n          featureContext.lineWidth = conf.lineWidth;\n\n          if (conf.fill) {\n            featureContext.globalAlpha = conf.globalAlpha;\n          }\n\n          featureContext.beginPath();\n\n          if (conf.fill) {\n            featureContext.moveTo(coords[0][0], baseline);\n            featureContext.lineTo.apply(featureContext, coords[0]);\n          } else {\n            featureContext.moveTo.apply(featureContext, coords[0]);\n          }\n\n          for (k = 1; k < coords.length; k++) {\n            featureContext.lineTo.apply(featureContext, coords[k]);\n          }\n\n          featureContext.stroke();\n\n          if (conf.fill) {\n            featureContext.lineTo(coords[coords.length - 1][0], baseline);\n            featureContext.closePath();\n            featureContext.fill();\n            featureContext.globalAlpha = 1;\n          }\n        }\n      }\n    }\n\n    // Don't allow features to be drawn in the margins\n    featureContext.clearRect(0, 0,                     this.width, marginTop - 1);\n    featureContext.clearRect(0, height - marginBottom, this.width, marginBottom);\n  }\n});\n\nGenoverse.Track.Graph.Line = Genoverse.Track.Graph.extend({\n  type       : 'Line',\n  showPopups : true, // If true, clicking on the track will show popups. If false, popups will not appear.\n  fill       : false,\n  lineWidth  : 1,\n  model      : Genoverse.Track.Model.Graph.Line,\n  view       : Genoverse.Track.View.Graph.Line\n});","/* -*- mode: javascript; c-basic-offset: 4; indent-tabs-mode: nil -*- */\n\n//\n// Dalliance Genome Explorer\n// (c) Thomas Down 2006-2011\n//\n// bam.js: indexed binary alignments\n//\nvar BAM_MAGIC = 21840194;\nvar BAI_MAGIC = 21578050;\n\nfunction BamFile() {}\n\nfunction Vob(b, o) {\n  this.block = b;\n  this.offset = o;\n}\n\nVob.prototype.toString = function() {\n  return '' + this.block + ':' + this.offset;\n}\n\nfunction Chunk(minv, maxv) {\n  this.minv = minv;\n  this.maxv = maxv;\n}\n\nfunction makeBam(data, bai, callback) {\n  var bam = new BamFile();\n  bam.data = data;\n  bam.bai = bai;\n\n  bam.data.slice(0, 65536).fetch(function(r) {\n    if (!r) {\n      return dlog(\"Couldn't access BAM\");\n    }\n\n    var unc = unbgzf(r);\n    var uncba = new Uint8Array(unc);\n\n    var magic = readInt(uncba, 0);\n    var headLen = readInt(uncba, 4);\n    var header = '';\n    for (var i = 0; i < headLen; ++i) {\n      header += String.fromCharCode(uncba[i + 8]);\n    }\n\n    var nRef = readInt(uncba, headLen + 8);\n    var p = headLen + 12;\n\n    bam.chrToIndex = {};\n    bam.indexToChr = [];\n    for (var i = 0; i < nRef; ++i) {\n      var lName = readInt(uncba, p);\n      var name = '';\n      for (var j = 0; j < lName - 1; ++j) {\n        name += String.fromCharCode(uncba[p + 4 + j]);\n      }\n      var lRef = readInt(uncba, p + lName + 4);\n      // dlog(name + ': ' + lRef);\n      bam.chrToIndex[name] = i;\n      if (name.indexOf('chr') == 0) {\n        bam.chrToIndex[name.substring(3)] = i;\n      } else {\n        bam.chrToIndex['chr' + name] = i;\n      }\n      bam.indexToChr.push(name);\n\n      p = p + 8 + lName;\n    }\n\n    if (bam.indices) {\n      return callback(bam);\n    }\n  });\n\n  bam.bai.fetch(function(header) { // Do we really need to fetch the whole thing? :-(\n    if (!header) {\n      return dlog(\"Couldn't access BAI\");\n    }\n\n    var uncba = new Uint8Array(header);\n    var baiMagic = readInt(uncba, 0);\n    if (baiMagic != BAI_MAGIC) {\n      return dlog('Not a BAI file');\n    }\n\n    var nref = readInt(uncba, 4);\n\n    bam.indices = [];\n\n    var p = 8;\n    for (var ref = 0; ref < nref; ++ref) {\n      var blockStart = p;\n      var nbin = readInt(uncba, p);\n      p += 4;\n      for (var b = 0; b < nbin; ++b) {\n        var bin = readInt(uncba, p);\n        var nchnk = readInt(uncba, p + 4);\n        p += 8 + (nchnk * 16);\n      }\n      var nintv = readInt(uncba, p);\n      p += 4;\n      p += (nintv * 8);\n      if (nbin > 0) {\n        bam.indices[ref] = new Uint8Array(header, blockStart, p - blockStart);\n      }\n    }\n    if (bam.chrToIndex) {\n      return callback(bam);\n    }\n  });\n}\n\n\n\nBamFile.prototype.blocksForRange = function(refId, min, max) {\n  var index = this.indices[refId];\n  if (!index) {\n    return [];\n  }\n\n  var intBinsL = reg2bins(min, max);\n  var intBins = [];\n  for (var i = 0; i < intBinsL.length; ++i) {\n    intBins[intBinsL[i]] = true;\n  }\n  var leafChunks = [],\n    otherChunks = [];\n\n  var nbin = readInt(index, 0);\n  var p = 4;\n  for (var b = 0; b < nbin; ++b) {\n    var bin = readInt(index, p);\n    var nchnk = readInt(index, p + 4);\n    //        dlog('bin=' + bin + '; nchnk=' + nchnk);\n    p += 8;\n    if (intBins[bin]) {\n      for (var c = 0; c < nchnk; ++c) {\n        var cs = readVob(index, p);\n        var ce = readVob(index, p + 8);\n        (bin < 4681 ? otherChunks : leafChunks).push(new Chunk(cs, ce));\n        p += 16;\n      }\n    } else {\n      p += (nchnk * 16);\n    }\n  }\n  //    dlog('leafChunks = ' + miniJSONify(leafChunks));\n  //    dlog('otherChunks = ' + miniJSONify(otherChunks));\n  var nintv = readInt(index, p);\n  var lowest = null;\n  var minLin = Math.min(min >> 14, nintv - 1),\n    maxLin = Math.min(max >> 14, nintv - 1);\n  for (var i = minLin; i <= maxLin; ++i) {\n    var lb = readVob(index, p + 4 + (i * 8));\n    if (!lb) {\n      continue;\n    }\n    if (!lowest || lb.block < lowest.block || lb.offset < lowest.offset) {\n      lowest = lb;\n    }\n  }\n  // dlog('Lowest LB = ' + lowest);\n  var prunedOtherChunks = [];\n  if (lowest != null) {\n    for (var i = 0; i < otherChunks.length; ++i) {\n      var chnk = otherChunks[i];\n      if (chnk.maxv.block >= lowest.block && chnk.maxv.offset >= lowest.offset) {\n        prunedOtherChunks.push(chnk);\n      }\n    }\n  }\n  // dlog('prunedOtherChunks = ' + miniJSONify(prunedOtherChunks));\n  otherChunks = prunedOtherChunks;\n\n  var intChunks = [];\n  for (var i = 0; i < otherChunks.length; ++i) {\n    intChunks.push(otherChunks[i]);\n  }\n  for (var i = 0; i < leafChunks.length; ++i) {\n    intChunks.push(leafChunks[i]);\n  }\n\n  intChunks.sort(function(c0, c1) {\n    var dif = c0.minv.block - c1.minv.block;\n    if (dif != 0) {\n      return dif;\n    } else {\n      return c0.minv.offset - c1.minv.offset;\n    }\n  });\n  var mergedChunks = [];\n  if (intChunks.length > 0) {\n    var cur = intChunks[0];\n    for (var i = 1; i < intChunks.length; ++i) {\n      var nc = intChunks[i];\n      if (nc.minv.block == cur.maxv.block /* && nc.minv.offset == cur.maxv.offset */ ) { // no point splitting mid-block\n        cur = new Chunk(cur.minv, nc.maxv);\n      } else {\n        mergedChunks.push(cur);\n        cur = nc;\n      }\n    }\n    mergedChunks.push(cur);\n  }\n  //    dlog('mergedChunks = ' + miniJSONify(mergedChunks));\n  return mergedChunks;\n}\n\nBamFile.prototype.fetch = function(chr, min, max, callback) {\n  var thisB = this;\n\n  var chrId = this.chrToIndex[chr];\n  var chunks;\n  if (chrId === undefined) {\n    chunks = [];\n  } else {\n    chunks = this.blocksForRange(chrId, min, max);\n    if (!chunks) {\n      callback(null, 'Error in index fetch');\n    }\n  }\n\n  var records = [];\n  var index = 0;\n  var data;\n\n  function tramp() {\n    if (index >= chunks.length) {\n      return callback(records);\n    } else if (!data) {\n      // dlog('fetching ' + index);\n      var c = chunks[index];\n      var fetchMin = c.minv.block;\n      var fetchMax = c.maxv.block + (1 << 16); // *sigh*\n      thisB.data.slice(fetchMin, fetchMax - fetchMin).fetch(function(r) {\n        data = unbgzf(r, c.maxv.block - c.minv.block + 1);\n        return tramp();\n      });\n    } else {\n      var ba = new Uint8Array(data);\n      thisB.readBamRecords(ba, chunks[index].minv.offset, records, min, max, chrId);\n      data = null;\n      ++index;\n      return tramp();\n    }\n  }\n  tramp();\n}\n\nvar SEQRET_DECODER = ['=', 'A', 'C', 'x', 'G', 'x', 'x', 'x', 'T', 'x', 'x', 'x', 'x', 'x', 'x', 'N'];\nvar CIGAR_DECODER = ['M', 'I', 'D', 'N', 'S', 'H', 'P', '=', 'X', '?', '?', '?', '?', '?', '?', '?'];\n\nfunction BamRecord() {}\n\nBamFile.prototype.readBamRecords = function(ba, offset, sink, min, max, chrId) {\n  while (true) {\n    var blockSize = readInt(ba, offset);\n    var blockEnd = offset + blockSize + 4;\n    if (blockEnd >= ba.length) {\n      return sink;\n    }\n\n    var record = new BamRecord();\n\n    var refID = readInt(ba, offset + 4);\n    var pos = readInt(ba, offset + 8);\n\n    var bmn = readInt(ba, offset + 12);\n    var bin = (bmn & 0xffff0000) >> 16;\n    var mq = (bmn & 0xff00) >> 8;\n    var nl = bmn & 0xff;\n\n    var flag_nc = readInt(ba, offset + 16);\n    var flag = (flag_nc & 0xffff0000) >> 16;\n    var nc = flag_nc & 0xffff;\n\n    var lseq = readInt(ba, offset + 20);\n\n    var nextRef = readInt(ba, offset + 24);\n    var nextPos = readInt(ba, offset + 28);\n\n    var tlen = readInt(ba, offset + 32);\n\n    var readName = '';\n    for (var j = 0; j < nl - 1; ++j) {\n      readName += String.fromCharCode(ba[offset + 36 + j]);\n    }\n\n    var p = offset + 36 + nl;\n\n    var cigar = '';\n    for (var c = 0; c < nc; ++c) {\n      var cigop = readInt(ba, p);\n      cigar = cigar + (cigop >> 4) + CIGAR_DECODER[cigop & 0xf];\n      p += 4;\n    }\n    record.cigar = cigar;\n\n    var seq = '';\n    var seqBytes = (lseq + 1) >> 1;\n    for (var j = 0; j < seqBytes; ++j) {\n      var sb = ba[p + j];\n      seq += SEQRET_DECODER[(sb & 0xf0) >> 4];\n      seq += SEQRET_DECODER[(sb & 0x0f)];\n    }\n    p += seqBytes;\n    record.seq = seq;\n\n    var qseq = '';\n    for (var j = 0; j < lseq; ++j) {\n      qseq += String.fromCharCode(ba[p + j]);\n    }\n    p += lseq;\n    record.quals = qseq;\n\n    record.pos = pos;\n    record.mq = mq;\n    record.readName = readName;\n    record.segment = this.indexToChr[refID];\n\n    while (p < blockEnd) {\n      var tag = String.fromCharCode(ba[p]) + String.fromCharCode(ba[p + 1]);\n      var type = String.fromCharCode(ba[p + 2]);\n      var value;\n\n      if (type == 'A') {\n        value = String.fromCharCode(ba[p + 3]);\n        p += 4;\n      } else if (type == 'i' || type == 'I') {\n        value = readInt(ba, p + 3);\n        p += 7;\n      } else if (type == 'c' || type == 'C') {\n        value = ba[p + 3];\n        p += 4;\n      } else if (type == 's' || type == 'S') {\n        value = readShort(ba, p + 3);\n        p += 5;\n      } else if (type == 'f') {\n        throw 'FIXME need floats';\n      } else if (type == 'Z' || type == 'H') {\n        p += 3;\n        value = '';\n        for (;;) {\n          var cc = ba[p++];\n          if (cc == 0) {\n            break;\n          } else {\n            value += String.fromCharCode(cc);\n          }\n        }\n      } else if (type == 'B') {\n        var atype = String.fromCharCode(ba[p + 3]);\n        var alen = readInt(ba, p + 4);\n        var elen;\n        var reader;\n        if (atype == 'i' || atype == 'I' || atype == 'f') {\n          elen = 4;\n          if (atype == 'f') reader = readFloat;\n          else reader = readInt;\n        } else if (atype == 's' || atype == 'S') {\n          elen = 2;\n          reader = readShort;\n        } else if (atype == 'c' || atype == 'C') {\n          elen = 1;\n          reader = readByte;\n        } else {\n          throw 'Unknown array type ' + atype;\n        }\n\n        p += 8;\n        value = [];\n        for (var i = 0; i < alen; ++i) {\n          value.push(reader(ba, p));\n          p += elen;\n        }\n      } else {\n        throw 'Unknown type ' + type;\n      }\n      record[tag] = value;\n    }\n\n    if (!min || record.pos <= max && record.pos + lseq >= min) {\n      if (chrId === undefined || refID == chrId) {\n        sink.push(record);\n      }\n    }\n    offset = blockEnd;\n  }\n\n  // Exits via top of loop.\n};\n\n(function() {\n  var convertBuffer = new ArrayBuffer(8);\n  var ba = new Uint8Array(convertBuffer);\n  var fa = new Float32Array(convertBuffer);\n\n\n  window.readFloat = function(buf, offset) {\n    ba[0] = buf[offset];\n    ba[1] = buf[offset + 1];\n    ba[2] = buf[offset + 2];\n    ba[3] = buf[offset + 3];\n    return fa[0];\n  };\n})();\n\nfunction readInt64(ba, offset) {\n  return (ba[offset + 7] << 24) | (ba[offset + 6] << 16) | (ba[offset + 5] << 8) | (ba[offset + 4]);\n}\n\nfunction readInt(ba, offset) {\n  return (ba[offset + 3] << 24) | (ba[offset + 2] << 16) | (ba[offset + 1] << 8) | (ba[offset]);\n}\n\nfunction readShort(ba, offset) {\n  return (ba[offset + 1] << 8) | (ba[offset]);\n}\n\nfunction readByte(ba, offset) {\n  return ba[offset];\n}\n\nfunction readVob(ba, offset) {\n  var block = ((ba[offset + 6] & 0xff) * 0x100000000) + ((ba[offset + 5] & 0xff) * 0x1000000) + ((ba[offset + 4] & 0xff) * 0x10000) + ((ba[offset + 3] & 0xff) * 0x100) + ((ba[offset + 2] & 0xff));\n  var bint = (ba[offset + 1] << 8) | (ba[offset]);\n  if (block == 0 && bint == 0) {\n    return null; // Should only happen in the linear index?\n  } else {\n    return new Vob(block, bint);\n  }\n}\n\nfunction unbgzf(data, lim) {\n  lim = Math.min(lim || 1, data.byteLength - 100);\n  var oBlockList = [];\n  var ptr = [0];\n  var totalSize = 0;\n\n  while (ptr[0] < lim) {\n    var ba = new Uint8Array(data, ptr[0], 100); // FIXME is this enough for all credible BGZF block headers?\n    var xlen = (ba[11] << 8) | (ba[10]);\n    // dlog('xlen[' + (ptr[0]) +']=' + xlen);\n    var unc = jszlib_inflate_buffer(data, 12 + xlen + ptr[0], Math.min(65536, data.byteLength - 12 - xlen - ptr[0]), ptr);\n    ptr[0] += 8;\n    totalSize += unc.byteLength;\n    oBlockList.push(unc);\n  }\n\n  if (oBlockList.length == 1) {\n    return oBlockList[0];\n  } else {\n    var out = new Uint8Array(totalSize);\n    var cursor = 0;\n    for (var i = 0; i < oBlockList.length; ++i) {\n      var b = new Uint8Array(oBlockList[i]);\n      arrayCopy(b, 0, out, cursor, b.length);\n      cursor += b.length;\n    }\n    return out.buffer;\n  }\n}\n\n//\n// Binning (transliterated from SAM1.3 spec)\n//\n/* calculate bin given an alignment covering [beg,end) (zero-based, half-close-half-open) */\nfunction reg2bin(beg, end) {\n  --end;\n  if (beg >> 14 == end >> 14) return ((1 << 15) - 1) / 7 + (beg >> 14);\n  if (beg >> 17 == end >> 17) return ((1 << 12) - 1) / 7 + (beg >> 17);\n  if (beg >> 20 == end >> 20) return ((1 << 9) - 1) / 7 + (beg >> 20);\n  if (beg >> 23 == end >> 23) return ((1 << 6) - 1) / 7 + (beg >> 23);\n  if (beg >> 26 == end >> 26) return ((1 << 3) - 1) / 7 + (beg >> 26);\n  return 0;\n}\n\n/* calculate the list of bins that may overlap with region [beg,end) (zero-based) */\nvar MAX_BIN = (((1 << 18) - 1) / 7);\n\nfunction reg2bins(beg, end) {\n  var i = 0,\n    k, list = [];\n  --end;\n  list.push(0);\n  for (k = 1 + (beg >> 26); k <= 1 + (end >> 26); ++k) list.push(k);\n  for (k = 9 + (beg >> 23); k <= 9 + (end >> 23); ++k) list.push(k);\n  for (k = 73 + (beg >> 20); k <= 73 + (end >> 20); ++k) list.push(k);\n  for (k = 585 + (beg >> 17); k <= 585 + (end >> 17); ++k) list.push(k);\n  for (k = 4681 + (beg >> 14); k <= 4681 + (end >> 14); ++k) list.push(k);\n  return list;\n}\n","/* -*- mode: javascript; c-basic-offset: 4; indent-tabs-mode: nil -*- */\n\n//\n// Dalliance Genome Explorer\n// (c) Thomas Down 2006-2011\n//\n// bin.js general binary data support\n//\n\nfunction BlobFetchable(b) {\n    this.blob = b;\n}\n\nBlobFetchable.prototype.slice = function(start, length) {\n    var b;\n\n    if (this.blob.slice) {\n        if (length) {\n            b = this.blob.slice(start, start + length);\n        } else {\n            b = this.blob.slice(start);\n        }\n    } else {\n        if (length) {\n            b = this.blob.webkitSlice(start, start + length);\n        } else {\n            b = this.blob.webkitSlice(start);\n        }\n    }\n    return new BlobFetchable(b);\n}\n\nBlobFetchable.prototype.fetch = function(callback) {\n    var reader = new FileReader();\n    reader.onloadend = function(ev) {\n        callback(bstringToBuffer(reader.result));\n    };\n    reader.readAsBinaryString(this.blob);\n}\n\nfunction URLFetchable(url, start, end, opts) {\n    if (!opts) {\n        if (typeof start === 'object') {\n            opts = start;\n            start = undefined;\n        } else {\n            opts = {};\n        }\n    }\n\n    this.url = url;\n    this.start = start || 0;\n    if (end) {\n        this.end = end;\n    }\n    this.opts = opts;\n}\n\nURLFetchable.prototype.slice = function(s, l) {\n    if (s < 0) {\n        throw 'Bad slice ' + s;\n    }\n\n    var ns = this.start, ne = this.end;\n    if (ns && s) {\n        ns = ns + s;\n    } else {\n        ns = s || ns;\n    }\n    if (l && ns) {\n        ne = ns + l - 1;\n    } else {\n        ne = ne || l - 1;\n    }\n    return new URLFetchable(this.url, ns, ne, this.opts);\n}\n\nvar seed=0;\nvar isIOS = navigator.userAgent.indexOf('Safari') >= 0 && navigator.userAgent.indexOf('Chrome') < 0 ;\n\nURLFetchable.prototype.fetchAsText = function(callback) {\n    var req = new XMLHttpRequest();\n    var length;\n    var url = this.url;\n    if (isIOS) {\n        url = url + '?salt=' + (++seed);\n    }\n    req.open('GET', url, true);\n\n    if (this.end) {\n        if (this.end - this.start > 100000000) {\n            throw 'Monster fetch!';\n        }\n        req.setRequestHeader('Range', 'bytes=' + this.start + '-' + this.end);\n        length = this.end - this.start + 1;\n    }\n\n    req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n            if (req.status == 200 || req.status == 206) {\n                return callback(req.responseText);\n            } else {\n                return callback(null);\n            }\n        }\n    };\n    if (this.opts.credentials) {\n        req.withCredentials = true;\n    }\n    req.send('');\n}\n\nURLFetchable.prototype.fetch = function(callback, attempt, truncatedLength) {\n    var thisB = this;\n\n    attempt = attempt || 1;\n    if (attempt > 3) {\n        return callback(null);\n    }\n\n    var req = new XMLHttpRequest();\n    var length;\n    var url = this.url;\n    if (isIOS) {\n        // console.log('Safari hack');\n        url = url + '?salt=' + (++seed);\n    }\n    req.open('GET', url, true);\n    req.overrideMimeType('text/plain; charset=x-user-defined');\n    if (this.end) {\n        if (this.end - this.start > 100000000) {\n            throw 'Monster fetch!';\n        }\n        // console.log('req bytes=' + this.start + '-' + this.end);\n        req.setRequestHeader('Range', 'bytes=' + this.start + '-' + this.end);\n        length = this.end - this.start + 1;\n    }\n    req.responseType = 'arraybuffer';\n    req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n            if (req.status == 200 || req.status == 206) {\n                if (req.response) {\n                    var bl = req.response.byteLength;\n                    // console.log('Got ' + bl + ' expected ' + length);\n                    if (length && length != bl && (!truncatedLength || bl != truncatedLength)) {\n                        return thisB.fetch(callback, attempt + 1, bl);\n                    } else {\n                        return callback(req.response);\n                    }\n                } else if (req.mozResponseArrayBuffer) {\n                    return callback(req.mozResponseArrayBuffer);\n                } else {\n                    var r = req.responseText;\n                    if (length && length != r.length && (!truncatedLength || r.length != truncatedLength)) {\n                        return thisB.fetch(callback, attempt + 1, r.length);\n                    } else {\n                        return callback(bstringToBuffer(req.responseText));\n                    }\n                }\n            } else {\n                return thisB.fetch(callback, attempt + 1);\n            }\n        }\n    };\n    if (this.opts.credentials) {\n        req.withCredentials = true;\n    }\n    req.send('');\n}\n\nfunction bstringToBuffer(result) {\n    if (!result) {\n        return null;\n    }\n\n//    var before = Date.now();\n    var ba = new Uint8Array(result.length);\n    for (var i = 0; i < ba.length; ++i) {\n        ba[i] = result.charCodeAt(i);\n    }\n//    var after  = Date.now();\n//    dlog('bb took ' + (after - before) + 'ms');\n    return ba.buffer;\n}\n\n","/* -*- mode: javascript; c-basic-offset: 4; indent-tabs-mode: nil -*- */\n\n//\n// Dalliance Genome Explorer\n// (c) Thomas Down 2006-2010\n//\n// das.js: queries and low-level data model.\n//\n\nvar dasLibErrorHandler = function(errMsg) {\n    alert(errMsg);\n}\nvar dasLibRequestQueue = new Array();\n\n\n\nfunction DASSegment(name, start, end, description) {\n    this.name = name;\n    this.start = start;\n    this.end = end;\n    this.description = description;\n}\nDASSegment.prototype.toString = function() {\n    return this.name + ':' + this.start + '..' + this.end;\n};\nDASSegment.prototype.isBounded = function() {\n    return this.start && this.end;\n}\nDASSegment.prototype.toDASQuery = function() {\n    var q = 'segment=' + this.name;\n    if (this.start && this.end) {\n        q += (':' + this.start + ',' + this.end);\n    }\n    return q;\n}\n\n\nfunction DASSource(a1, a2) {\n    var options;\n    if (typeof a1 == 'string') {\n        this.uri = a1;\n        options = a2 || {};\n    } else {\n        options = a1 || {};\n    }\n    for (var k in options) {\n        if (typeof(options[k]) != 'function') {\n            this[k] = options[k];\n        }\n    }\n\n\n    if (!this.coords) {\n        this.coords = [];\n    }\n    if (!this.props) {\n        this.props = {};\n    }\n\n    this.dasBaseURI = this.uri;\n    if (this.dasBaseURI && this.dasBaseURI.substr(this.uri.length - 1) != '/') {\n        this.dasBaseURI = this.dasBaseURI + '/';\n    }\n}\n\nfunction DASCoords() {\n}\n\nfunction coordsMatch(c1, c2) {\n    return c1.taxon == c2.taxon && c1.auth == c2.auth && c1.version == c2.version;\n}\n\n//\n// DAS 1.6 entry_points command\n//\n\nDASSource.prototype.entryPoints = function(callback) {\n    var dasURI = this.dasBaseURI + 'entry_points';\n    this.doCrossDomainRequest(dasURI, function(responseXML) {\n            if (!responseXML) {\n                return callback([]);\n            }\n\n                var entryPoints = new Array();\n\n                var segs = responseXML.getElementsByTagName('SEGMENT');\n                for (var i = 0; i < segs.length; ++i) {\n                    var seg = segs[i];\n                    var segId = seg.getAttribute('id');\n\n                    var segSize = seg.getAttribute('size');\n                    var segMin, segMax;\n                    if (segSize) {\n                        segMin = 1; segMax = segSize|0;\n                    } else {\n                        segMin = seg.getAttribute('start');\n                        if (segMin) {\n                            segMin |= 0;\n                        }\n                        segMax = seg.getAttribute('stop');\n                        if (segMax) {\n                            segMax |= 0;\n                        }\n                    }\n                    var segDesc = null;\n                    if (seg.firstChild) {\n                        segDesc = seg.firstChild.nodeValue;\n                    }\n                    entryPoints.push(new DASSegment(segId, segMin, segMax, segDesc));\n                }\n               callback(entryPoints);\n    });\n}\n\n//\n// DAS 1.6 sequence command\n// Do we need an option to fall back to the dna command?\n//\n\nfunction DASSequence(name, start, end, alpha, seq) {\n    this.name = name;\n    this.start = start;\n    this.end = end;\n    this.alphabet = alpha;\n    this.seq = seq;\n}\n\nDASSource.prototype.sequence = function(segment, callback) {\n    var dasURI = this.dasBaseURI + 'sequence?' + segment.toDASQuery();\n    this.doCrossDomainRequest(dasURI, function(responseXML) {\n        if (!responseXML) {\n            callback([]);\n            return;\n        } else {\n                var seqs = new Array();\n\n                var segs = responseXML.getElementsByTagName('SEQUENCE');\n                for (var i = 0; i < segs.length; ++i) {\n                    var seg = segs[i];\n                    var segId = seg.getAttribute('id');\n                    var segMin = seg.getAttribute('start');\n                    var segMax = seg.getAttribute('stop');\n                    var segAlpha = 'DNA';\n                    var segSeq = null;\n                    if (seg.firstChild) {\n                        var rawSeq = seg.firstChild.nodeValue;\n                        segSeq = '';\n                        var idx = 0;\n                        while (true) {\n                            var space = rawSeq.indexOf('\\n', idx);\n                            if (space >= 0) {\n                                segSeq += rawSeq.substring(idx, space);\n                                idx = space + 1;\n                            } else {\n                                segSeq += rawSeq.substring(idx);\n                                break;\n                            }\n                        }\n                    }\n                    seqs.push(new DASSequence(segId, segMin, segMax, segAlpha, segSeq));\n                }\n\n                callback(seqs);\n        }\n    });\n}\n\n//\n// DAS 1.6 features command\n//\n\nfunction DASFeature() {\n    // We initialize these in the parser...\n}\n\nfunction DASGroup() {\n    // We initialize these in the parser, too...\n}\n\nfunction DASLink(desc, uri) {\n    this.desc = desc;\n    this.uri = uri;\n}\n\nDASSource.prototype.features = function(segment, options, callback) {\n    options = options || {};\n    var thisB = this;\n\n    var dasURI;\n    if (this.features_uri) {\n        dasURI = this.features_uri;\n    } else {\n        var filters = [];\n\n        if (segment) {\n            filters.push(segment.toDASQuery());\n        } else if (options.group) {\n            var g = options.group;\n            if (typeof g == 'string') {\n                filters.push('group_id=' + g);\n            } else {\n                for (var gi = 0; gi < g.length; ++gi) {\n                    filters.push('group_id=' + g[gi]);\n                }\n            }\n        }\n\n        if (options.adjacent) {\n            var adj = options.adjacent;\n            if (typeof adj == 'string') {\n                adj = [adj];\n            }\n            for (var ai = 0; ai < adj.length; ++ai) {\n                filters.push('adjacent=' + adj[ai]);\n            }\n        }\n\n        if (options.type) {\n            if (typeof options.type == 'string') {\n                filters.push('type=' + options.type);\n            } else {\n                for (var ti = 0; ti < options.type.length; ++ti) {\n                    filters.push('type=' + options.type[ti]);\n                }\n            }\n        }\n\n        if (options.maxbins) {\n            filters.push('maxbins=' + options.maxbins);\n        }\n\n        if (filters.length > 0) {\n            dasURI = this.dasBaseURI + 'features?' + filters.join(';');\n        } else {\n            callback([], 'No filters specified');\n        }\n    }\n\n\n    this.doCrossDomainRequest(dasURI, function(responseXML, req) {\n        if (!responseXML) {\n            var msg;\n            if (req.status == 0) {\n                msg = 'server may not support CORS';\n            } else {\n                msg = 'status=' + req.status;\n            }\n            callback([], 'Failed request: ' + msg);\n            return;\n        }\n/*      if (req) {\n            var caps = req.getResponseHeader('X-DAS-Capabilties');\n            if (caps) {\n                alert(caps);\n            }\n        } */\n\n        var features = new Array();\n        var segmentMap = {};\n\n        var segs = responseXML.getElementsByTagName('SEGMENT');\n        for (var si = 0; si < segs.length; ++si) {\n            var segmentXML = segs[si];\n            var segmentID = segmentXML.getAttribute('id');\n            segmentMap[segmentID] = {\n                min: segmentXML.getAttribute('start'),\n                max: segmentXML.getAttribute('stop')\n            };\n\n            var featureXMLs = segmentXML.getElementsByTagName('FEATURE');\n            for (var i = 0; i < featureXMLs.length; ++i) {\n                var feature = featureXMLs[i];\n                var dasFeature = new DASFeature();\n\n                dasFeature.segment = segmentID;\n                dasFeature.id = feature.getAttribute('id');\n                dasFeature.label = feature.getAttribute('label');\n\n\n/*\n                var childNodes = feature.childNodes;\n                for (var c = 0; c < childNodes.length; ++c) {\n                    var cn = childNodes[c];\n                    if (cn.nodeType == Node.ELEMENT_NODE) {\n                        var key = cn.tagName;\n                        //var val = null;\n                        //if (cn.firstChild) {\n                        //   val = cn.firstChild.nodeValue;\n                        //}\n                        dasFeature[key] = 'x';\n                    }\n                } */\n\n\n                var spos = elementValue(feature, \"START\");\n                var epos = elementValue(feature, \"END\");\n                if ((spos|0) > (epos|0)) {\n                    dasFeature.min = epos|0;\n                    dasFeature.max = spos|0;\n                } else {\n                    dasFeature.min = spos|0;\n                    dasFeature.max = epos|0;\n                }\n                {\n                    var tec = feature.getElementsByTagName('TYPE');\n                    if (tec.length > 0) {\n                        var te = tec[0];\n                        if (te.firstChild) {\n                            dasFeature.type = te.firstChild.nodeValue;\n                        }\n                        dasFeature.typeId = te.getAttribute('id');\n                        dasFeature.typeCv = te.getAttribute('cvId');\n                    }\n                }\n                dasFeature.type = elementValue(feature, \"TYPE\");\n                if (!dasFeature.type && dasFeature.typeId) {\n                    dasFeature.type = dasFeature.typeId; // FIXME?\n                }\n\n                dasFeature.method = elementValue(feature, \"METHOD\");\n                {\n                    var ori = elementValue(feature, \"ORIENTATION\");\n                    if (!ori) {\n                        ori = '0';\n                    }\n                    dasFeature.orientation = ori;\n                }\n                dasFeature.score = elementValue(feature, \"SCORE\");\n                dasFeature.links = dasLinksOf(feature);\n                dasFeature.notes = dasNotesOf(feature);\n\n                var groups = feature.getElementsByTagName(\"GROUP\");\n                for (var gi  = 0; gi < groups.length; ++gi) {\n                    var groupXML = groups[gi];\n                    var dasGroup = new DASGroup();\n                    dasGroup.type = groupXML.getAttribute('type');\n                    dasGroup.id = groupXML.getAttribute('id');\n                    dasGroup.links = dasLinksOf(groupXML);\n                    dasGroup.notes = dasNotesOf(groupXML);\n                    if (!dasFeature.groups) {\n                        dasFeature.groups = new Array(dasGroup);\n                    } else {\n                        dasFeature.groups.push(dasGroup);\n                    }\n                }\n\n                // Magic notes.  Check with TAD before changing this.\n                if (dasFeature.notes) {\n                    for (var ni = 0; ni < dasFeature.notes.length; ++ni) {\n                        var n = dasFeature.notes[ni];\n                        if (n.indexOf('Genename=') == 0) {\n                            var gg = new DASGroup();\n                            gg.type='gene';\n                            gg.id = n.substring(9);\n                            if (!dasFeature.groups) {\n                                dasFeature.groups = new Array(gg);\n                            } else {\n                                dasFeature.groups.push(gg);\n                            }\n                        }\n                    }\n                }\n\n                {\n                    var pec = feature.getElementsByTagName('PART');\n                    if (pec.length > 0) {\n                        var parts = [];\n                        for (var pi = 0; pi < pec.length; ++pi) {\n                            parts.push(pec[pi].getAttribute('id'));\n                        }\n                        dasFeature.parts = parts;\n                    }\n                }\n                {\n                    var pec = feature.getElementsByTagName('PARENT');\n                    if (pec.length > 0) {\n                        var parents = [];\n                        for (var pi = 0; pi < pec.length; ++pi) {\n                            parents.push(pec[pi].getAttribute('id'));\n                        }\n                        dasFeature.parents = parents;\n                    }\n                }\n\n                features.push(dasFeature);\n            }\n        }\n\n        callback(features, undefined, segmentMap);\n    },\n    function (err) {\n        callback([], err);\n    });\n}\n\nfunction DASAlignment(type) {\n    this.type = type;\n    this.objects = {};\n    this.blocks = [];\n}\n\nDASSource.prototype.alignments = function(segment, options, callback) {\n    var dasURI = this.dasBaseURI + 'alignment?query=' + segment;\n    this.doCrossDomainRequest(dasURI, function(responseXML) {\n        if (!responseXML) {\n            callback([], 'Failed request ' + dasURI);\n            return;\n        }\n\n        var alignments = [];\n        var aliXMLs = responseXML.getElementsByTagName('alignment');\n        for (var ai = 0; ai < aliXMLs.length; ++ai) {\n            var aliXML = aliXMLs[ai];\n            var ali = new DASAlignment(aliXML.getAttribute('alignType'));\n            var objXMLs = aliXML.getElementsByTagName('alignObject');\n            for (var oi = 0; oi < objXMLs.length; ++oi) {\n                var objXML = objXMLs[oi];\n                var obj = {\n                    id:          objXML.getAttribute('intObjectId'),\n                    accession:   objXML.getAttribute('dbAccessionId'),\n                    version:     objXML.getAttribute('objectVersion'),\n                    dbSource:    objXML.getAttribute('dbSource'),\n                    dbVersion:   objXML.getAttribute('dbVersion')\n                };\n                ali.objects[obj.id] = obj;\n            }\n\n            var blockXMLs = aliXML.getElementsByTagName('block');\n            for (var bi = 0; bi < blockXMLs.length; ++bi) {\n                var blockXML = blockXMLs[bi];\n                var block = {\n                    order:      blockXML.getAttribute('blockOrder'),\n                    segments:   []\n                };\n                var segXMLs = blockXML.getElementsByTagName('segment');\n                for (var si = 0; si < segXMLs.length; ++si) {\n                    var segXML = segXMLs[si];\n                    var seg = {\n                        object:      segXML.getAttribute('intObjectId'),\n                        min:         segXML.getAttribute('start'),\n                        max:         segXML.getAttribute('end'),\n                        strand:      segXML.getAttribute('strand'),\n                        cigar:       elementValue(segXML, 'cigar')\n                    };\n                    block.segments.push(seg);\n                }\n                ali.blocks.push(block);\n            }\n\n            alignments.push(ali);\n        }\n        callback(alignments);\n    });\n}\n\n\nfunction DASStylesheet() {\n/*\n    this.highZoomStyles = new Object();\n    this.mediumZoomStyles = new Object();\n    this.lowZoomStyles = new Object();\n*/\n\n    this.styles = [];\n}\n\nDASStylesheet.prototype.pushStyle = function(filters, zoom, style) {\n    /*\n\n    if (!zoom) {\n        this.highZoomStyles[type] = style;\n        this.mediumZoomStyles[type] = style;\n        this.lowZoomStyles[type] = style;\n    } else if (zoom == 'high') {\n        this.highZoomStyles[type] = style;\n    } else if (zoom == 'medium') {\n        this.mediumZoomStyles[type] = style;\n    } else if (zoom == 'low') {\n        this.lowZoomStyles[type] = style;\n    }\n\n    */\n\n    if (!filters) {\n        filters = {type: 'default'};\n    }\n    var styleHolder = shallowCopy(filters);\n    if (zoom) {\n        styleHolder.zoom = zoom;\n    }\n    styleHolder.style = style;\n    this.styles.push(styleHolder);\n}\n\nfunction DASStyle() {\n}\n\nDASSource.prototype.stylesheet = function(successCB, failureCB) {\n    var dasURI, creds = this.credentials;\n    if (this.stylesheet_uri) {\n        dasURI = this.stylesheet_uri;\n        creds = false;\n    } else {\n        dasURI = this.dasBaseURI + 'stylesheet';\n    }\n\n    doCrossDomainRequest(dasURI, function(responseXML) {\n        if (!responseXML) {\n            if (failureCB) {\n                failureCB();\n            }\n            return;\n        }\n        var stylesheet = new DASStylesheet();\n        var typeXMLs = responseXML.getElementsByTagName('TYPE');\n        for (var i = 0; i < typeXMLs.length; ++i) {\n            var typeStyle = typeXMLs[i];\n\n            var filter = {};\n            filter.type = typeStyle.getAttribute('id'); // Am I right in thinking that this makes DASSTYLE XML invalid?  Ugh.\n            filter.label = typeStyle.getAttribute('label');\n            filter.method = typeStyle.getAttribute('method');\n            var glyphXMLs = typeStyle.getElementsByTagName('GLYPH');\n            for (var gi = 0; gi < glyphXMLs.length; ++gi) {\n                var glyphXML = glyphXMLs[gi];\n                var zoom = glyphXML.getAttribute('zoom');\n                var glyph = childElementOf(glyphXML);\n                var style = new DASStyle();\n                style.glyph = glyph.localName;\n                var child = glyph.firstChild;\n\n                while (child) {\n                    if (child.nodeType == Node.ELEMENT_NODE) {\n                        // alert(child.localName);\n                        style[child.localName] = child.firstChild.nodeValue;\n                    }\n                    child = child.nextSibling;\n                }\n                stylesheet.pushStyle(filter, zoom, style);\n            }\n        }\n        successCB(stylesheet);\n    }, creds);\n}\n\n//\n// sources command\n//\n\nfunction DASRegistry(uri, opts)\n{\n    opts = opts || {};\n    this.uri = uri;\n    this.opts = opts;\n}\n\nDASRegistry.prototype.sources = function(callback, failure, opts)\n{\n    if (!opts) {\n        opts = {};\n    }\n\n    var filters = [];\n    if (opts.taxon) {\n        filters.push('organism=' + opts.taxon);\n    }\n    if (opts.auth) {\n        filters.push('authority=' + opts.auth);\n    }\n    if (opts.version) {\n        filters.push('version=' + opts.version);\n    }\n    var quri = this.uri;\n    if (filters.length > 0) {\n        quri = quri + '?' + filters.join('&');   // '&' as a separator to hack around dasregistry.org bug.\n    }\n\n    doCrossDomainRequest(quri, function(responseXML) {\n        if (!responseXML && failure) {\n            failure();\n            return;\n        }\n\n        var sources = [];\n        var sourceXMLs = responseXML.getElementsByTagName('SOURCE');\n        for (var si = 0; si < sourceXMLs.length; ++si) {\n            var sourceXML = sourceXMLs[si];\n            var versionXMLs = sourceXML.getElementsByTagName('VERSION');\n            if (versionXMLs.length < 1) {\n                continue;\n            }\n            var versionXML = versionXMLs[0];\n\n            var coordXMLs = versionXML.getElementsByTagName('COORDINATES');\n            var coords = [];\n            for (var ci = 0; ci < coordXMLs.length; ++ci) {\n                var coordXML = coordXMLs[ci];\n                var coord = new DASCoords();\n                coord.auth = coordXML.getAttribute('authority');\n                coord.taxon = coordXML.getAttribute('taxid');\n                coord.version = coordXML.getAttribute('version');\n                coords.push(coord);\n            }\n\n            var caps = [];\n            var capXMLs = versionXML.getElementsByTagName('CAPABILITY');\n            var uri;\n            for (var ci = 0; ci < capXMLs.length; ++ci) {\n                var capXML = capXMLs[ci];\n\n                caps.push(capXML.getAttribute('type'));\n\n                if (capXML.getAttribute('type') == 'das1:features') {\n                    var fep = capXML.getAttribute('query_uri');\n                    uri = fep.substring(0, fep.length - ('features'.length));\n                }\n            }\n\n            var props = {};\n            var propXMLs = versionXML.getElementsByTagName('PROP');\n            for (var pi = 0; pi < propXMLs.length; ++pi) {\n                pusho(props, propXMLs[pi].getAttribute('name'), propXMLs[pi].getAttribute('value'));\n            }\n\n            if (uri) {\n                var source = new DASSource(uri, {\n                    source_uri: sourceXML.getAttribute('uri'),\n                    name:  sourceXML.getAttribute('title'),\n                    desc:  sourceXML.getAttribute('description'),\n                    coords: coords,\n                    props: props,\n                    capabilities: caps\n                });\n                sources.push(source);\n            }\n        }\n\n        callback(sources);\n    });\n}\n\n\n//\n// Utility functions\n//\n\nfunction elementValue(element, tag)\n{\n    var children = element.getElementsByTagName(tag);\n    if (children.length > 0 && children[0].firstChild) {\n        return children[0].firstChild.nodeValue;\n    } else {\n        return null;\n    }\n}\n\nfunction childElementOf(element)\n{\n    if (element.hasChildNodes()) {\n        var child = element.firstChild;\n        do {\n            if (child.nodeType == Node.ELEMENT_NODE) {\n                return child;\n            }\n            child = child.nextSibling;\n        } while (child != null);\n    }\n    return null;\n}\n\n\nfunction dasLinksOf(element)\n{\n    var links = new Array();\n    var maybeLinkChilden = element.getElementsByTagName('LINK');\n    for (var ci = 0; ci < maybeLinkChilden.length; ++ci) {\n        var linkXML = maybeLinkChilden[ci];\n        if (linkXML.parentNode == element) {\n            links.push(new DASLink(linkXML.firstChild ? linkXML.firstChild.nodeValue : 'Unknown', linkXML.getAttribute('href')));\n        }\n    }\n\n    return links;\n}\n\nfunction dasNotesOf(element)\n{\n    var notes = [];\n    var maybeNotes = element.getElementsByTagName('NOTE');\n    for (var ni = 0; ni < maybeNotes.length; ++ni) {\n        if (maybeNotes[ni].firstChild) {\n            notes.push(maybeNotes[ni].firstChild.nodeValue);\n        }\n    }\n    return notes;\n}\n\nfunction doCrossDomainRequest(url, handler, credentials, custAuth) {\n    // TODO: explicit error handlers?\n\n    if (window.XDomainRequest) {\n        var req = new XDomainRequest();\n        req.onload = function() {\n            var dom = new ActiveXObject(\"Microsoft.XMLDOM\");\n            dom.async = false;\n            dom.loadXML(req.responseText);\n            handler(dom);\n        }\n        req.open(\"get\", url);\n        req.send('');\n    } else {\n        var reqStart = Date.now();\n        var req = new XMLHttpRequest();\n\n        req.onreadystatechange = function() {\n            if (req.readyState == 4) {\n              if (req.status >= 200 || req.status == 0) {\n                  handler(req.responseXML, req);\n              }\n            }\n        };\n        req.open(\"get\", url, true);\n        if (credentials) {\n            req.withCredentials = true;\n        }\n        if (custAuth) {\n            req.setRequestHeader('X-DAS-Authorisation', custAuth);\n        }\n        req.setRequestHeader('Accept', 'application/xml,*/*');\n        req.send('');\n    }\n}\n\nDASSource.prototype.doCrossDomainRequest = function(url, handler, errHandler) {\n    var custAuth;\n    if (this.xUser) {\n        custAuth = 'Basic ' + btoa(this.xUser + ':' + this.xPass);\n    }\n\n    try {\n        return doCrossDomainRequest(url, handler, this.credentials, custAuth);\n    } catch (err) {\n        if (errHandler) {\n            errHandler(err);\n        } else {\n            throw err;\n        }\n    }\n}\n","/* -*- mode: javascript; c-basic-offset: 4; indent-tabs-mode: nil -*- */\n\n//\n// Dalliance Genome Explorer\n// (c) Thomas Down 2006-2010\n//\n// utils.js: odds, sods, and ends.\n//\n\nvar NUM_REGEXP = new RegExp('[0-9]+');\n\nfunction stringToNumbersArray(str) {\n    var nums = new Array();\n    var m;\n    while (m = NUM_REGEXP.exec(str)) {\n        nums.push(m[0]);\n        str=str.substring(m.index + (m[0].length));\n    }\n    return nums;\n}\n\nvar STRICT_NUM_REGEXP = new RegExp('^[0-9]+$');\n\nfunction stringToInt(str) {\n    str = str.replace(new RegExp(',', 'g'), '');\n    if (!STRICT_NUM_REGEXP.test(str)) {\n        return null;\n    }\n    return str|0;\n}\n\nfunction pushnew(a, v) {\n    for (var i = 0; i < a.length; ++i) {\n        if (a[i] == v) {\n            return;\n        }\n    }\n    a.push(v);\n}\n\nfunction pusho(obj, k, v) {\n    if (obj[k]) {\n        obj[k].push(v);\n    } else {\n        obj[k] = [v];\n    }\n}\n\nfunction pushnewo(obj, k, v) {\n    var a = obj[k];\n    if (a) {\n        for (var i = 0; i < a.length; ++i) {    // indexOf requires JS16 :-(.\n            if (a[i] == v) {\n                return;\n            }\n        }\n        a.push(v);\n    } else {\n        obj[k] = [v];\n    }\n}\n\n\nfunction pick(a, b, c, d)\n{\n    if (a) {\n        return a;\n    } else if (b) {\n        return b;\n    } else if (c) {\n        return c;\n    } else if (d) {\n        return d;\n    }\n}\n\nfunction pushnew(l, o)\n{\n    for (var i = 0; i < l.length; ++i) {\n        if (l[i] == o) {\n            return;\n        }\n    }\n    l.push(o);\n}\n\nfunction maybeConcat(a, b) {\n    var l = [];\n    if (a) {\n        for (var i = 0; i < a.length; ++i) {\n            pushnew(l, a[i]);\n        }\n    }\n    if (b) {\n        for (var i = 0; i < b.length; ++i) {\n            pushnew(l, b[i]);\n        }\n    }\n    return l;\n}\n\nfunction arrayIndexOf(a, x) {\n    if (!a) {\n        return -1;\n    }\n\n    for (var i = 0; i < a.length; ++i) {\n        if (a[i] === x) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nfunction arrayRemove(a, x) {\n    var i = arrayIndexOf(a, x);\n    if (i >= 0) {\n        a.splice(i, 1);\n        return true;\n    }\n    return false;\n}\n\n//\n// DOM utilities\n//\n\n\nfunction makeElement(tag, children, attribs, styles)\n{\n    var ele = document.createElement(tag);\n    if (children) {\n        if (! (children instanceof Array)) {\n            children = [children];\n        }\n        for (var i = 0; i < children.length; ++i) {\n            var c = children[i];\n            if (typeof c == 'string') {\n                c = document.createTextNode(c);\n            }\n            ele.appendChild(c);\n        }\n    }\n\n    if (attribs) {\n        for (var l in attribs) {\n            ele[l] = attribs[l];\n        }\n    }\n    if (styles) {\n        for (var l in styles) {\n            ele.style[l] = styles[l];\n        }\n    }\n    return ele;\n}\n\nfunction makeElementNS(namespace, tag, children, attribs)\n{\n    var ele = document.createElementNS(namespace, tag);\n    if (children) {\n        if (! (children instanceof Array)) {\n            children = [children];\n        }\n        for (var i = 0; i < children.length; ++i) {\n            var c = children[i];\n            if (typeof c == 'string') {\n                c = document.createTextNode(c);\n            }\n            ele.appendChild(c);\n        }\n    }\n\n    setAttrs(ele, attribs);\n    return ele;\n}\n\nvar attr_name_cache = {};\n\nfunction setAttr(node, key, value)\n{\n    var attr = attr_name_cache[key];\n    if (!attr) {\n        var _attr = '';\n        for (var c = 0; c < key.length; ++c) {\n            var cc = key.substring(c, c+1);\n            var lcc = cc.toLowerCase();\n            if (lcc != cc) {\n                _attr = _attr + '-' + lcc;\n            } else {\n                _attr = _attr + cc;\n            }\n        }\n        attr_name_cache[key] = _attr;\n        attr = _attr;\n    }\n    node.setAttribute(attr, value);\n}\n\nfunction setAttrs(node, attribs)\n{\n    if (attribs) {\n        for (var l in attribs) {\n            setAttr(node, l, attribs[l]);\n        }\n    }\n}\n\n\n\nfunction removeChildren(node)\n{\n    if (!node || !node.childNodes) {\n        return;\n    }\n\n    while (node.childNodes.length > 0) {\n        node.removeChild(node.firstChild);\n    }\n}\n\n\n\n//\n// WARNING: not for general use!\n//\n\nfunction miniJSONify(o, exc) {\n    if (typeof o === 'undefined') {\n        return 'undefined';\n    } else if (o == null) {\n        return 'null';\n    } else if (typeof o == 'string') {\n        return \"'\" + o + \"'\";\n    } else if (typeof o == 'number') {\n        return \"\" + o;\n    } else if (typeof o == 'boolean') {\n        return \"\" + o;\n    } else if (typeof o == 'object') {\n        if (o instanceof Array) {\n            var s = null;\n            for (var i = 0; i < o.length; ++i) {\n                s = (s == null ? '' : (s + ', ')) + miniJSONify(o[i], exc);\n            }\n            return '[' + (s?s:'') + ']';\n        } else {\n            exc = exc || {};\n            var s = null;\n            for (var k in o) {\n                if (exc[k])\n                    continue;\n                if (k != undefined && typeof(o[k]) != 'function') {\n                    s = (s == null ? '' : (s + ', ')) + k + ': ' + miniJSONify(o[k], exc);\n                }\n            }\n            return '{' + (s?s:'') + '}';\n        }\n    } else {\n        return (typeof o);\n    }\n}\n\nfunction shallowCopy(o) {\n    n = {};\n    for (k in o) {\n        n[k] = o[k];\n    }\n    return n;\n}\n\nfunction Observed(x) {\n    this.value = x;\n    this.listeners = [];\n}\n\nObserved.prototype.addListener = function(f) {\n    this.listeners.push(f);\n}\n\nObserved.prototype.addListenerAndFire = function(f) {\n    this.listeners.push(f);\n    f(this.value);\n}\n\nObserved.prototype.removeListener = function(f) {\n    arrayRemove(this.listeners, f);\n}\n\nObserved.prototype.get = function() {\n    return this.value;\n}\n\nObserved.prototype.set = function(x) {\n    this.value = x;\n    for (var i = 0; i < this.listeners.length; ++i) {\n        this.listeners[i](x);\n    }\n}\n\nfunction Awaited() {\n    this.queue = [];\n}\n\nAwaited.prototype.provide = function(x) {\n    if (this.res !== undefined) {\n        throw \"Resource has already been provided.\";\n    }\n\n    this.res = x;\n    for (var i = 0; i < this.queue.length; ++i) {\n        this.queue[i](x);\n    }\n    this.queue = null;   // avoid leaking closures.\n}\n\nAwaited.prototype.await = function(f) {\n    if (this.res !== undefined) {\n        f(this.res);\n        return this.res;\n    } else {\n        this.queue.push(f);\n    }\n}\n\nfunction textXHR(url, callback, opts) {\n    var req = new XMLHttpRequest();\n    req.onreadystatechange = function() {\n      if (req.readyState == 4) {\n          if (req.status >= 300) {\n            callback(null, 'Error code ' + req.status);\n          } else {\n            callback(req.responseText);\n          }\n      }\n    };\n\n    req.open('GET', url, true);\n    req.responseType = 'text';\n\n    if (opts && opts.credentials) {\n        req.withCredentials = true;\n    }\n    req.send('');\n}\n\nfunction relativeURL(base, rel) {\n    // FIXME quite naive -- good enough for trackhubs?\n\n    if (rel.indexOf('http:') == 0 || rel.indexOf('https:') == 0) {\n        return rel;\n    }\n\n    var li = base.lastIndexOf('/');\n    if (li >= 0) {\n        return base.substr(0, li + 1) + rel;\n    } else {\n        return rel;\n    }\n}\n\n\n//\n// Missing APIs\n//\n\nif (!('trim' in String.prototype)) {\n    String.prototype.trim = function() {\n        return this.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    };\n}\n"]}